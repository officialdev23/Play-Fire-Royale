Shader "Mobile/Bumped Specular"
{
  Properties
  {
    [PowerSlider(5.0)] _Shininess ("Shininess", Range(0.03, 1)) = 0.078125
    _MainTex ("Base (RGB) Gloss (A)", 2D) = "white" {}
    [NoScaleOffset] _BumpMap ("Normalmap", 2D) = "bump" {}
  }
  SubShader
  {
    Tags
    { 
      "RenderType" = "Opaque"
    }
    LOD 250
    Pass // ind: 1, name: FORWARD
    {
      Name "FORWARD"
      Tags
      { 
        "LIGHTMODE" = "FORWARDBASE"
        "RenderType" = "Opaque"
        "SHADOWSUPPORT" = "true"
      }
      LOD 250
      GpuProgramID 29874
      // m_ProgramMask = 6
      !!! *******************************************************************************************
      !!! Allow restore shader as UnityLab format - only available for DevX GameRecovery license type
      !!! *******************************************************************************************
      Program "vp"
      {
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            mediump vec3 tmpvar_12;
            tmpvar_12 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_12;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_13;
            tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_14;
            tmpvar_14 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_8, tmpvar_14);
            worldN_1.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_7, tmpvar_14);
            worldN_1.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_6, tmpvar_14);
            worldN_1.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_1);
            worldN_1 = tmpvar_18;
            tmpvar_3 = tmpvar_18;
            c_2.xyz = (tmpvar_13.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_19;
            halfDir_19 = worldViewDir_4;
            lowp vec4 c_20;
            lowp float spec_21;
            lowp float tmpvar_22;
            tmpvar_22 = max (0.0, dot (tmpvar_3, halfDir_19));
            mediump float tmpvar_23;
            tmpvar_23 = (pow (tmpvar_22, (_Shininess * 128.0)) * tmpvar_13.w);
            spec_21 = tmpvar_23;
            c_20.xyz = (((tmpvar_13.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_21));
            c_20.w = 1.0;
            c_2.xyz = (c_2 + c_20).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            mediump vec3 tmpvar_12;
            tmpvar_12 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_12;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_13;
            tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_14;
            tmpvar_14 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_8, tmpvar_14);
            worldN_1.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_7, tmpvar_14);
            worldN_1.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_6, tmpvar_14);
            worldN_1.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_1);
            worldN_1 = tmpvar_18;
            tmpvar_3 = tmpvar_18;
            c_2.xyz = (tmpvar_13.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_19;
            halfDir_19 = worldViewDir_4;
            lowp vec4 c_20;
            lowp float spec_21;
            lowp float tmpvar_22;
            tmpvar_22 = max (0.0, dot (tmpvar_3, halfDir_19));
            mediump float tmpvar_23;
            tmpvar_23 = (pow (tmpvar_22, (_Shininess * 128.0)) * tmpvar_13.w);
            spec_21 = tmpvar_23;
            c_20.xyz = (((tmpvar_13.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_21));
            c_20.w = 1.0;
            c_2.xyz = (c_2 + c_20).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            mediump vec3 tmpvar_12;
            tmpvar_12 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_12;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_13;
            tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_14;
            tmpvar_14 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_8, tmpvar_14);
            worldN_1.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_7, tmpvar_14);
            worldN_1.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_6, tmpvar_14);
            worldN_1.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_1);
            worldN_1 = tmpvar_18;
            tmpvar_3 = tmpvar_18;
            c_2.xyz = (tmpvar_13.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_19;
            halfDir_19 = worldViewDir_4;
            lowp vec4 c_20;
            lowp float spec_21;
            lowp float tmpvar_22;
            tmpvar_22 = max (0.0, dot (tmpvar_3, halfDir_19));
            mediump float tmpvar_23;
            tmpvar_23 = (pow (tmpvar_22, (_Shininess * 128.0)) * tmpvar_13.w);
            spec_21 = tmpvar_23;
            c_20.xyz = (((tmpvar_13.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_21));
            c_20.w = 1.0;
            c_2.xyz = (c_2 + c_20).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            mediump vec3 tmpvar_12;
            tmpvar_12 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_12;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_13;
            tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_14;
            tmpvar_14 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_8, tmpvar_14);
            worldN_1.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_7, tmpvar_14);
            worldN_1.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_6, tmpvar_14);
            worldN_1.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_1);
            worldN_1 = tmpvar_18;
            tmpvar_3 = tmpvar_18;
            c_2.xyz = (tmpvar_13.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_19;
            halfDir_19 = worldViewDir_4;
            lowp vec4 c_20;
            lowp float spec_21;
            lowp float tmpvar_22;
            tmpvar_22 = max (0.0, dot (tmpvar_3, halfDir_19));
            mediump float tmpvar_23;
            tmpvar_23 = (pow (tmpvar_22, (_Shininess * 128.0)) * tmpvar_13.w);
            spec_21 = tmpvar_23;
            c_20.xyz = (((tmpvar_13.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_21));
            c_20.w = 1.0;
            c_2.xyz = (c_2 + c_20).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            mediump vec3 tmpvar_12;
            tmpvar_12 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_12;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_13;
            tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_14;
            tmpvar_14 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_8, tmpvar_14);
            worldN_1.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_7, tmpvar_14);
            worldN_1.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_6, tmpvar_14);
            worldN_1.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_1);
            worldN_1 = tmpvar_18;
            tmpvar_3 = tmpvar_18;
            c_2.xyz = (tmpvar_13.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_19;
            halfDir_19 = worldViewDir_4;
            lowp vec4 c_20;
            lowp float spec_21;
            lowp float tmpvar_22;
            tmpvar_22 = max (0.0, dot (tmpvar_3, halfDir_19));
            mediump float tmpvar_23;
            tmpvar_23 = (pow (tmpvar_22, (_Shininess * 128.0)) * tmpvar_13.w);
            spec_21 = tmpvar_23;
            c_20.xyz = (((tmpvar_13.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_21));
            c_20.w = 1.0;
            c_2.xyz = (c_2 + c_20).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            mediump vec3 tmpvar_12;
            tmpvar_12 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_12;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_13;
            tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_14;
            tmpvar_14 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_8, tmpvar_14);
            worldN_1.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_7, tmpvar_14);
            worldN_1.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_6, tmpvar_14);
            worldN_1.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_1);
            worldN_1 = tmpvar_18;
            tmpvar_3 = tmpvar_18;
            c_2.xyz = (tmpvar_13.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_19;
            halfDir_19 = worldViewDir_4;
            lowp vec4 c_20;
            lowp float spec_21;
            lowp float tmpvar_22;
            tmpvar_22 = max (0.0, dot (tmpvar_3, halfDir_19));
            mediump float tmpvar_23;
            tmpvar_23 = (pow (tmpvar_22, (_Shininess * 128.0)) * tmpvar_13.w);
            spec_21 = tmpvar_23;
            c_20.xyz = (((tmpvar_13.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_21));
            c_20.w = 1.0;
            c_2.xyz = (c_2 + c_20).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8.xyz)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_8);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.w;
            tmpvar_12.y = xlv_TEXCOORD2.w;
            tmpvar_12.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_17;
            highp vec4 v_18;
            v_18.x = unity_MatrixV[0].z;
            v_18.y = unity_MatrixV[1].z;
            v_18.z = unity_MatrixV[2].z;
            v_18.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_19;
            tmpvar_19 = (tmpvar_12 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_20;
            highp float tmpvar_21;
            tmpvar_21 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_12), v_18.xyz), sqrt(dot (tmpvar_19, tmpvar_19)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_20 = tmpvar_21;
            lowp float tmpvar_22;
            highp float lightShadowDataX_23;
            mediump float tmpvar_24;
            tmpvar_24 = _LightShadowData.x;
            lightShadowDataX_23 = tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_23);
            tmpvar_22 = tmpvar_25;
            realtimeShadowAttenuation_17 = tmpvar_22;
            mediump float tmpvar_26;
            tmpvar_26 = mix (realtimeShadowAttenuation_17, 1.0, tmpvar_20);
            atten_3 = tmpvar_26;
            c_2.w = 0.0;
            lowp float tmpvar_27;
            tmpvar_27 = dot (_unity_tbn_0_8, tmpvar_16);
            worldN_1.x = tmpvar_27;
            lowp float tmpvar_28;
            tmpvar_28 = dot (_unity_tbn_1_7, tmpvar_16);
            worldN_1.y = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_2_6, tmpvar_16);
            worldN_1.z = tmpvar_29;
            highp vec3 tmpvar_30;
            tmpvar_30 = normalize(worldN_1);
            worldN_1 = tmpvar_30;
            tmpvar_4 = tmpvar_30;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_31;
            halfDir_31 = tmpvar_14;
            lowp vec4 c_32;
            lowp float spec_33;
            lowp float tmpvar_34;
            tmpvar_34 = max (0.0, dot (tmpvar_4, halfDir_31));
            mediump float tmpvar_35;
            tmpvar_35 = (pow (tmpvar_34, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_33 = tmpvar_35;
            c_32.xyz = (((
              (tmpvar_15.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_33)) * atten_3);
            c_32.w = 1.0;
            c_2.xyz = (c_2 + c_32).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8.xyz)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_8);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.w;
            tmpvar_12.y = xlv_TEXCOORD2.w;
            tmpvar_12.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_17;
            highp vec4 v_18;
            v_18.x = unity_MatrixV[0].z;
            v_18.y = unity_MatrixV[1].z;
            v_18.z = unity_MatrixV[2].z;
            v_18.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_19;
            tmpvar_19 = (tmpvar_12 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_20;
            highp float tmpvar_21;
            tmpvar_21 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_12), v_18.xyz), sqrt(dot (tmpvar_19, tmpvar_19)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_20 = tmpvar_21;
            lowp float tmpvar_22;
            highp float lightShadowDataX_23;
            mediump float tmpvar_24;
            tmpvar_24 = _LightShadowData.x;
            lightShadowDataX_23 = tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_23);
            tmpvar_22 = tmpvar_25;
            realtimeShadowAttenuation_17 = tmpvar_22;
            mediump float tmpvar_26;
            tmpvar_26 = mix (realtimeShadowAttenuation_17, 1.0, tmpvar_20);
            atten_3 = tmpvar_26;
            c_2.w = 0.0;
            lowp float tmpvar_27;
            tmpvar_27 = dot (_unity_tbn_0_8, tmpvar_16);
            worldN_1.x = tmpvar_27;
            lowp float tmpvar_28;
            tmpvar_28 = dot (_unity_tbn_1_7, tmpvar_16);
            worldN_1.y = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_2_6, tmpvar_16);
            worldN_1.z = tmpvar_29;
            highp vec3 tmpvar_30;
            tmpvar_30 = normalize(worldN_1);
            worldN_1 = tmpvar_30;
            tmpvar_4 = tmpvar_30;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_31;
            halfDir_31 = tmpvar_14;
            lowp vec4 c_32;
            lowp float spec_33;
            lowp float tmpvar_34;
            tmpvar_34 = max (0.0, dot (tmpvar_4, halfDir_31));
            mediump float tmpvar_35;
            tmpvar_35 = (pow (tmpvar_34, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_33 = tmpvar_35;
            c_32.xyz = (((
              (tmpvar_15.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_33)) * atten_3);
            c_32.w = 1.0;
            c_2.xyz = (c_2 + c_32).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8.xyz)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_8);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.w;
            tmpvar_12.y = xlv_TEXCOORD2.w;
            tmpvar_12.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_17;
            highp vec4 v_18;
            v_18.x = unity_MatrixV[0].z;
            v_18.y = unity_MatrixV[1].z;
            v_18.z = unity_MatrixV[2].z;
            v_18.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_19;
            tmpvar_19 = (tmpvar_12 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_20;
            highp float tmpvar_21;
            tmpvar_21 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_12), v_18.xyz), sqrt(dot (tmpvar_19, tmpvar_19)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_20 = tmpvar_21;
            lowp float tmpvar_22;
            highp float lightShadowDataX_23;
            mediump float tmpvar_24;
            tmpvar_24 = _LightShadowData.x;
            lightShadowDataX_23 = tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_23);
            tmpvar_22 = tmpvar_25;
            realtimeShadowAttenuation_17 = tmpvar_22;
            mediump float tmpvar_26;
            tmpvar_26 = mix (realtimeShadowAttenuation_17, 1.0, tmpvar_20);
            atten_3 = tmpvar_26;
            c_2.w = 0.0;
            lowp float tmpvar_27;
            tmpvar_27 = dot (_unity_tbn_0_8, tmpvar_16);
            worldN_1.x = tmpvar_27;
            lowp float tmpvar_28;
            tmpvar_28 = dot (_unity_tbn_1_7, tmpvar_16);
            worldN_1.y = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_2_6, tmpvar_16);
            worldN_1.z = tmpvar_29;
            highp vec3 tmpvar_30;
            tmpvar_30 = normalize(worldN_1);
            worldN_1 = tmpvar_30;
            tmpvar_4 = tmpvar_30;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_31;
            halfDir_31 = tmpvar_14;
            lowp vec4 c_32;
            lowp float spec_33;
            lowp float tmpvar_34;
            tmpvar_34 = max (0.0, dot (tmpvar_4, halfDir_31));
            mediump float tmpvar_35;
            tmpvar_35 = (pow (tmpvar_34, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_33 = tmpvar_35;
            c_32.xyz = (((
              (tmpvar_15.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_33)) * atten_3);
            c_32.w = 1.0;
            c_2.xyz = (c_2 + c_32).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8.xyz)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_8);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.w;
            tmpvar_12.y = xlv_TEXCOORD2.w;
            tmpvar_12.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_17;
            highp vec4 v_18;
            v_18.x = unity_MatrixV[0].z;
            v_18.y = unity_MatrixV[1].z;
            v_18.z = unity_MatrixV[2].z;
            v_18.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_19;
            tmpvar_19 = (tmpvar_12 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_20;
            highp float tmpvar_21;
            tmpvar_21 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_12), v_18.xyz), sqrt(dot (tmpvar_19, tmpvar_19)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_20 = tmpvar_21;
            lowp float tmpvar_22;
            highp float lightShadowDataX_23;
            mediump float tmpvar_24;
            tmpvar_24 = _LightShadowData.x;
            lightShadowDataX_23 = tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_23);
            tmpvar_22 = tmpvar_25;
            realtimeShadowAttenuation_17 = tmpvar_22;
            mediump float tmpvar_26;
            tmpvar_26 = mix (realtimeShadowAttenuation_17, 1.0, tmpvar_20);
            atten_3 = tmpvar_26;
            c_2.w = 0.0;
            lowp float tmpvar_27;
            tmpvar_27 = dot (_unity_tbn_0_8, tmpvar_16);
            worldN_1.x = tmpvar_27;
            lowp float tmpvar_28;
            tmpvar_28 = dot (_unity_tbn_1_7, tmpvar_16);
            worldN_1.y = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_2_6, tmpvar_16);
            worldN_1.z = tmpvar_29;
            highp vec3 tmpvar_30;
            tmpvar_30 = normalize(worldN_1);
            worldN_1 = tmpvar_30;
            tmpvar_4 = tmpvar_30;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_31;
            halfDir_31 = tmpvar_14;
            lowp vec4 c_32;
            lowp float spec_33;
            lowp float tmpvar_34;
            tmpvar_34 = max (0.0, dot (tmpvar_4, halfDir_31));
            mediump float tmpvar_35;
            tmpvar_35 = (pow (tmpvar_34, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_33 = tmpvar_35;
            c_32.xyz = (((
              (tmpvar_15.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_33)) * atten_3);
            c_32.w = 1.0;
            c_2.xyz = (c_2 + c_32).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8.xyz)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_8);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.w;
            tmpvar_12.y = xlv_TEXCOORD2.w;
            tmpvar_12.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_17;
            highp vec4 v_18;
            v_18.x = unity_MatrixV[0].z;
            v_18.y = unity_MatrixV[1].z;
            v_18.z = unity_MatrixV[2].z;
            v_18.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_19;
            tmpvar_19 = (tmpvar_12 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_20;
            highp float tmpvar_21;
            tmpvar_21 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_12), v_18.xyz), sqrt(dot (tmpvar_19, tmpvar_19)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_20 = tmpvar_21;
            lowp float tmpvar_22;
            highp float lightShadowDataX_23;
            mediump float tmpvar_24;
            tmpvar_24 = _LightShadowData.x;
            lightShadowDataX_23 = tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_23);
            tmpvar_22 = tmpvar_25;
            realtimeShadowAttenuation_17 = tmpvar_22;
            mediump float tmpvar_26;
            tmpvar_26 = mix (realtimeShadowAttenuation_17, 1.0, tmpvar_20);
            atten_3 = tmpvar_26;
            c_2.w = 0.0;
            lowp float tmpvar_27;
            tmpvar_27 = dot (_unity_tbn_0_8, tmpvar_16);
            worldN_1.x = tmpvar_27;
            lowp float tmpvar_28;
            tmpvar_28 = dot (_unity_tbn_1_7, tmpvar_16);
            worldN_1.y = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_2_6, tmpvar_16);
            worldN_1.z = tmpvar_29;
            highp vec3 tmpvar_30;
            tmpvar_30 = normalize(worldN_1);
            worldN_1 = tmpvar_30;
            tmpvar_4 = tmpvar_30;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_31;
            halfDir_31 = tmpvar_14;
            lowp vec4 c_32;
            lowp float spec_33;
            lowp float tmpvar_34;
            tmpvar_34 = max (0.0, dot (tmpvar_4, halfDir_31));
            mediump float tmpvar_35;
            tmpvar_35 = (pow (tmpvar_34, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_33 = tmpvar_35;
            c_32.xyz = (((
              (tmpvar_15.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_33)) * atten_3);
            c_32.w = 1.0;
            c_2.xyz = (c_2 + c_32).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8.xyz)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_8);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.w;
            tmpvar_12.y = xlv_TEXCOORD2.w;
            tmpvar_12.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_17;
            highp vec4 v_18;
            v_18.x = unity_MatrixV[0].z;
            v_18.y = unity_MatrixV[1].z;
            v_18.z = unity_MatrixV[2].z;
            v_18.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_19;
            tmpvar_19 = (tmpvar_12 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_20;
            highp float tmpvar_21;
            tmpvar_21 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_12), v_18.xyz), sqrt(dot (tmpvar_19, tmpvar_19)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_20 = tmpvar_21;
            lowp float tmpvar_22;
            highp float lightShadowDataX_23;
            mediump float tmpvar_24;
            tmpvar_24 = _LightShadowData.x;
            lightShadowDataX_23 = tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_23);
            tmpvar_22 = tmpvar_25;
            realtimeShadowAttenuation_17 = tmpvar_22;
            mediump float tmpvar_26;
            tmpvar_26 = mix (realtimeShadowAttenuation_17, 1.0, tmpvar_20);
            atten_3 = tmpvar_26;
            c_2.w = 0.0;
            lowp float tmpvar_27;
            tmpvar_27 = dot (_unity_tbn_0_8, tmpvar_16);
            worldN_1.x = tmpvar_27;
            lowp float tmpvar_28;
            tmpvar_28 = dot (_unity_tbn_1_7, tmpvar_16);
            worldN_1.y = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_2_6, tmpvar_16);
            worldN_1.z = tmpvar_29;
            highp vec3 tmpvar_30;
            tmpvar_30 = normalize(worldN_1);
            worldN_1 = tmpvar_30;
            tmpvar_4 = tmpvar_30;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_31;
            halfDir_31 = tmpvar_14;
            lowp vec4 c_32;
            lowp float spec_33;
            lowp float tmpvar_34;
            tmpvar_34 = max (0.0, dot (tmpvar_4, halfDir_31));
            mediump float tmpvar_35;
            tmpvar_35 = (pow (tmpvar_34, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_33 = tmpvar_35;
            c_32.xyz = (((
              (tmpvar_15.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_33)) * atten_3);
            c_32.w = 1.0;
            c_2.xyz = (c_2 + c_32).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            highp vec3 lightColor0_26;
            lightColor0_26 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_27;
            lightColor1_27 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_28;
            lightColor2_28 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_29;
            lightColor3_29 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_30;
            lightAttenSq_30 = unity_4LightAtten0;
            highp vec3 col_31;
            highp vec4 ndotl_32;
            highp vec4 lengthSq_33;
            highp vec4 tmpvar_34;
            tmpvar_34 = (unity_4LightPosX0 - tmpvar_8.x);
            highp vec4 tmpvar_35;
            tmpvar_35 = (unity_4LightPosY0 - tmpvar_8.y);
            highp vec4 tmpvar_36;
            tmpvar_36 = (unity_4LightPosZ0 - tmpvar_8.z);
            lengthSq_33 = (tmpvar_34 * tmpvar_34);
            lengthSq_33 = (lengthSq_33 + (tmpvar_35 * tmpvar_35));
            lengthSq_33 = (lengthSq_33 + (tmpvar_36 * tmpvar_36));
            highp vec4 tmpvar_37;
            tmpvar_37 = max (lengthSq_33, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_33 = tmpvar_37;
            ndotl_32 = (tmpvar_34 * tmpvar_10.x);
            ndotl_32 = (ndotl_32 + (tmpvar_35 * tmpvar_10.y));
            ndotl_32 = (ndotl_32 + (tmpvar_36 * tmpvar_10.z));
            highp vec4 tmpvar_38;
            tmpvar_38 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_32 * inversesqrt(tmpvar_37)));
            ndotl_32 = tmpvar_38;
            highp vec4 tmpvar_39;
            tmpvar_39 = (tmpvar_38 * (1.0/((1.0 + 
              (tmpvar_37 * lightAttenSq_30)
            ))));
            col_31 = (lightColor0_26 * tmpvar_39.x);
            col_31 = (col_31 + (lightColor1_27 * tmpvar_39.y));
            col_31 = (col_31 + (lightColor2_28 * tmpvar_39.z));
            col_31 = (col_31 + (lightColor3_29 * tmpvar_39.w));
            tmpvar_5 = (tmpvar_5 + col_31);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            mediump vec3 tmpvar_12;
            tmpvar_12 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_12;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_13;
            tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_14;
            tmpvar_14 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_8, tmpvar_14);
            worldN_1.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_7, tmpvar_14);
            worldN_1.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_6, tmpvar_14);
            worldN_1.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_1);
            worldN_1 = tmpvar_18;
            tmpvar_3 = tmpvar_18;
            c_2.xyz = (tmpvar_13.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_19;
            halfDir_19 = worldViewDir_4;
            lowp vec4 c_20;
            lowp float spec_21;
            lowp float tmpvar_22;
            tmpvar_22 = max (0.0, dot (tmpvar_3, halfDir_19));
            mediump float tmpvar_23;
            tmpvar_23 = (pow (tmpvar_22, (_Shininess * 128.0)) * tmpvar_13.w);
            spec_21 = tmpvar_23;
            c_20.xyz = (((tmpvar_13.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_21));
            c_20.w = 1.0;
            c_2.xyz = (c_2 + c_20).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            highp vec3 lightColor0_26;
            lightColor0_26 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_27;
            lightColor1_27 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_28;
            lightColor2_28 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_29;
            lightColor3_29 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_30;
            lightAttenSq_30 = unity_4LightAtten0;
            highp vec3 col_31;
            highp vec4 ndotl_32;
            highp vec4 lengthSq_33;
            highp vec4 tmpvar_34;
            tmpvar_34 = (unity_4LightPosX0 - tmpvar_8.x);
            highp vec4 tmpvar_35;
            tmpvar_35 = (unity_4LightPosY0 - tmpvar_8.y);
            highp vec4 tmpvar_36;
            tmpvar_36 = (unity_4LightPosZ0 - tmpvar_8.z);
            lengthSq_33 = (tmpvar_34 * tmpvar_34);
            lengthSq_33 = (lengthSq_33 + (tmpvar_35 * tmpvar_35));
            lengthSq_33 = (lengthSq_33 + (tmpvar_36 * tmpvar_36));
            highp vec4 tmpvar_37;
            tmpvar_37 = max (lengthSq_33, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_33 = tmpvar_37;
            ndotl_32 = (tmpvar_34 * tmpvar_10.x);
            ndotl_32 = (ndotl_32 + (tmpvar_35 * tmpvar_10.y));
            ndotl_32 = (ndotl_32 + (tmpvar_36 * tmpvar_10.z));
            highp vec4 tmpvar_38;
            tmpvar_38 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_32 * inversesqrt(tmpvar_37)));
            ndotl_32 = tmpvar_38;
            highp vec4 tmpvar_39;
            tmpvar_39 = (tmpvar_38 * (1.0/((1.0 + 
              (tmpvar_37 * lightAttenSq_30)
            ))));
            col_31 = (lightColor0_26 * tmpvar_39.x);
            col_31 = (col_31 + (lightColor1_27 * tmpvar_39.y));
            col_31 = (col_31 + (lightColor2_28 * tmpvar_39.z));
            col_31 = (col_31 + (lightColor3_29 * tmpvar_39.w));
            tmpvar_5 = (tmpvar_5 + col_31);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            mediump vec3 tmpvar_12;
            tmpvar_12 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_12;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_13;
            tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_14;
            tmpvar_14 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_8, tmpvar_14);
            worldN_1.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_7, tmpvar_14);
            worldN_1.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_6, tmpvar_14);
            worldN_1.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_1);
            worldN_1 = tmpvar_18;
            tmpvar_3 = tmpvar_18;
            c_2.xyz = (tmpvar_13.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_19;
            halfDir_19 = worldViewDir_4;
            lowp vec4 c_20;
            lowp float spec_21;
            lowp float tmpvar_22;
            tmpvar_22 = max (0.0, dot (tmpvar_3, halfDir_19));
            mediump float tmpvar_23;
            tmpvar_23 = (pow (tmpvar_22, (_Shininess * 128.0)) * tmpvar_13.w);
            spec_21 = tmpvar_23;
            c_20.xyz = (((tmpvar_13.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_21));
            c_20.w = 1.0;
            c_2.xyz = (c_2 + c_20).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            highp vec3 lightColor0_26;
            lightColor0_26 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_27;
            lightColor1_27 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_28;
            lightColor2_28 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_29;
            lightColor3_29 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_30;
            lightAttenSq_30 = unity_4LightAtten0;
            highp vec3 col_31;
            highp vec4 ndotl_32;
            highp vec4 lengthSq_33;
            highp vec4 tmpvar_34;
            tmpvar_34 = (unity_4LightPosX0 - tmpvar_8.x);
            highp vec4 tmpvar_35;
            tmpvar_35 = (unity_4LightPosY0 - tmpvar_8.y);
            highp vec4 tmpvar_36;
            tmpvar_36 = (unity_4LightPosZ0 - tmpvar_8.z);
            lengthSq_33 = (tmpvar_34 * tmpvar_34);
            lengthSq_33 = (lengthSq_33 + (tmpvar_35 * tmpvar_35));
            lengthSq_33 = (lengthSq_33 + (tmpvar_36 * tmpvar_36));
            highp vec4 tmpvar_37;
            tmpvar_37 = max (lengthSq_33, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_33 = tmpvar_37;
            ndotl_32 = (tmpvar_34 * tmpvar_10.x);
            ndotl_32 = (ndotl_32 + (tmpvar_35 * tmpvar_10.y));
            ndotl_32 = (ndotl_32 + (tmpvar_36 * tmpvar_10.z));
            highp vec4 tmpvar_38;
            tmpvar_38 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_32 * inversesqrt(tmpvar_37)));
            ndotl_32 = tmpvar_38;
            highp vec4 tmpvar_39;
            tmpvar_39 = (tmpvar_38 * (1.0/((1.0 + 
              (tmpvar_37 * lightAttenSq_30)
            ))));
            col_31 = (lightColor0_26 * tmpvar_39.x);
            col_31 = (col_31 + (lightColor1_27 * tmpvar_39.y));
            col_31 = (col_31 + (lightColor2_28 * tmpvar_39.z));
            col_31 = (col_31 + (lightColor3_29 * tmpvar_39.w));
            tmpvar_5 = (tmpvar_5 + col_31);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            mediump vec3 tmpvar_12;
            tmpvar_12 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_12;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_13;
            tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_14;
            tmpvar_14 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_8, tmpvar_14);
            worldN_1.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_7, tmpvar_14);
            worldN_1.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_6, tmpvar_14);
            worldN_1.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_1);
            worldN_1 = tmpvar_18;
            tmpvar_3 = tmpvar_18;
            c_2.xyz = (tmpvar_13.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_19;
            halfDir_19 = worldViewDir_4;
            lowp vec4 c_20;
            lowp float spec_21;
            lowp float tmpvar_22;
            tmpvar_22 = max (0.0, dot (tmpvar_3, halfDir_19));
            mediump float tmpvar_23;
            tmpvar_23 = (pow (tmpvar_22, (_Shininess * 128.0)) * tmpvar_13.w);
            spec_21 = tmpvar_23;
            c_20.xyz = (((tmpvar_13.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_21));
            c_20.w = 1.0;
            c_2.xyz = (c_2 + c_20).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            highp vec3 lightColor0_26;
            lightColor0_26 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_27;
            lightColor1_27 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_28;
            lightColor2_28 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_29;
            lightColor3_29 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_30;
            lightAttenSq_30 = unity_4LightAtten0;
            highp vec3 col_31;
            highp vec4 ndotl_32;
            highp vec4 lengthSq_33;
            highp vec4 tmpvar_34;
            tmpvar_34 = (unity_4LightPosX0 - tmpvar_8.x);
            highp vec4 tmpvar_35;
            tmpvar_35 = (unity_4LightPosY0 - tmpvar_8.y);
            highp vec4 tmpvar_36;
            tmpvar_36 = (unity_4LightPosZ0 - tmpvar_8.z);
            lengthSq_33 = (tmpvar_34 * tmpvar_34);
            lengthSq_33 = (lengthSq_33 + (tmpvar_35 * tmpvar_35));
            lengthSq_33 = (lengthSq_33 + (tmpvar_36 * tmpvar_36));
            highp vec4 tmpvar_37;
            tmpvar_37 = max (lengthSq_33, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_33 = tmpvar_37;
            ndotl_32 = (tmpvar_34 * tmpvar_10.x);
            ndotl_32 = (ndotl_32 + (tmpvar_35 * tmpvar_10.y));
            ndotl_32 = (ndotl_32 + (tmpvar_36 * tmpvar_10.z));
            highp vec4 tmpvar_38;
            tmpvar_38 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_32 * inversesqrt(tmpvar_37)));
            ndotl_32 = tmpvar_38;
            highp vec4 tmpvar_39;
            tmpvar_39 = (tmpvar_38 * (1.0/((1.0 + 
              (tmpvar_37 * lightAttenSq_30)
            ))));
            col_31 = (lightColor0_26 * tmpvar_39.x);
            col_31 = (col_31 + (lightColor1_27 * tmpvar_39.y));
            col_31 = (col_31 + (lightColor2_28 * tmpvar_39.z));
            col_31 = (col_31 + (lightColor3_29 * tmpvar_39.w));
            tmpvar_5 = (tmpvar_5 + col_31);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            mediump vec3 tmpvar_12;
            tmpvar_12 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_12;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_13;
            tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_14;
            tmpvar_14 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_8, tmpvar_14);
            worldN_1.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_7, tmpvar_14);
            worldN_1.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_6, tmpvar_14);
            worldN_1.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_1);
            worldN_1 = tmpvar_18;
            tmpvar_3 = tmpvar_18;
            c_2.xyz = (tmpvar_13.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_19;
            halfDir_19 = worldViewDir_4;
            lowp vec4 c_20;
            lowp float spec_21;
            lowp float tmpvar_22;
            tmpvar_22 = max (0.0, dot (tmpvar_3, halfDir_19));
            mediump float tmpvar_23;
            tmpvar_23 = (pow (tmpvar_22, (_Shininess * 128.0)) * tmpvar_13.w);
            spec_21 = tmpvar_23;
            c_20.xyz = (((tmpvar_13.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_21));
            c_20.w = 1.0;
            c_2.xyz = (c_2 + c_20).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            highp vec3 lightColor0_26;
            lightColor0_26 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_27;
            lightColor1_27 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_28;
            lightColor2_28 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_29;
            lightColor3_29 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_30;
            lightAttenSq_30 = unity_4LightAtten0;
            highp vec3 col_31;
            highp vec4 ndotl_32;
            highp vec4 lengthSq_33;
            highp vec4 tmpvar_34;
            tmpvar_34 = (unity_4LightPosX0 - tmpvar_8.x);
            highp vec4 tmpvar_35;
            tmpvar_35 = (unity_4LightPosY0 - tmpvar_8.y);
            highp vec4 tmpvar_36;
            tmpvar_36 = (unity_4LightPosZ0 - tmpvar_8.z);
            lengthSq_33 = (tmpvar_34 * tmpvar_34);
            lengthSq_33 = (lengthSq_33 + (tmpvar_35 * tmpvar_35));
            lengthSq_33 = (lengthSq_33 + (tmpvar_36 * tmpvar_36));
            highp vec4 tmpvar_37;
            tmpvar_37 = max (lengthSq_33, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_33 = tmpvar_37;
            ndotl_32 = (tmpvar_34 * tmpvar_10.x);
            ndotl_32 = (ndotl_32 + (tmpvar_35 * tmpvar_10.y));
            ndotl_32 = (ndotl_32 + (tmpvar_36 * tmpvar_10.z));
            highp vec4 tmpvar_38;
            tmpvar_38 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_32 * inversesqrt(tmpvar_37)));
            ndotl_32 = tmpvar_38;
            highp vec4 tmpvar_39;
            tmpvar_39 = (tmpvar_38 * (1.0/((1.0 + 
              (tmpvar_37 * lightAttenSq_30)
            ))));
            col_31 = (lightColor0_26 * tmpvar_39.x);
            col_31 = (col_31 + (lightColor1_27 * tmpvar_39.y));
            col_31 = (col_31 + (lightColor2_28 * tmpvar_39.z));
            col_31 = (col_31 + (lightColor3_29 * tmpvar_39.w));
            tmpvar_5 = (tmpvar_5 + col_31);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            mediump vec3 tmpvar_12;
            tmpvar_12 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_12;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_13;
            tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_14;
            tmpvar_14 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_8, tmpvar_14);
            worldN_1.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_7, tmpvar_14);
            worldN_1.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_6, tmpvar_14);
            worldN_1.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_1);
            worldN_1 = tmpvar_18;
            tmpvar_3 = tmpvar_18;
            c_2.xyz = (tmpvar_13.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_19;
            halfDir_19 = worldViewDir_4;
            lowp vec4 c_20;
            lowp float spec_21;
            lowp float tmpvar_22;
            tmpvar_22 = max (0.0, dot (tmpvar_3, halfDir_19));
            mediump float tmpvar_23;
            tmpvar_23 = (pow (tmpvar_22, (_Shininess * 128.0)) * tmpvar_13.w);
            spec_21 = tmpvar_23;
            c_20.xyz = (((tmpvar_13.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_21));
            c_20.w = 1.0;
            c_2.xyz = (c_2 + c_20).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            highp vec3 lightColor0_26;
            lightColor0_26 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_27;
            lightColor1_27 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_28;
            lightColor2_28 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_29;
            lightColor3_29 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_30;
            lightAttenSq_30 = unity_4LightAtten0;
            highp vec3 col_31;
            highp vec4 ndotl_32;
            highp vec4 lengthSq_33;
            highp vec4 tmpvar_34;
            tmpvar_34 = (unity_4LightPosX0 - tmpvar_8.x);
            highp vec4 tmpvar_35;
            tmpvar_35 = (unity_4LightPosY0 - tmpvar_8.y);
            highp vec4 tmpvar_36;
            tmpvar_36 = (unity_4LightPosZ0 - tmpvar_8.z);
            lengthSq_33 = (tmpvar_34 * tmpvar_34);
            lengthSq_33 = (lengthSq_33 + (tmpvar_35 * tmpvar_35));
            lengthSq_33 = (lengthSq_33 + (tmpvar_36 * tmpvar_36));
            highp vec4 tmpvar_37;
            tmpvar_37 = max (lengthSq_33, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_33 = tmpvar_37;
            ndotl_32 = (tmpvar_34 * tmpvar_10.x);
            ndotl_32 = (ndotl_32 + (tmpvar_35 * tmpvar_10.y));
            ndotl_32 = (ndotl_32 + (tmpvar_36 * tmpvar_10.z));
            highp vec4 tmpvar_38;
            tmpvar_38 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_32 * inversesqrt(tmpvar_37)));
            ndotl_32 = tmpvar_38;
            highp vec4 tmpvar_39;
            tmpvar_39 = (tmpvar_38 * (1.0/((1.0 + 
              (tmpvar_37 * lightAttenSq_30)
            ))));
            col_31 = (lightColor0_26 * tmpvar_39.x);
            col_31 = (col_31 + (lightColor1_27 * tmpvar_39.y));
            col_31 = (col_31 + (lightColor2_28 * tmpvar_39.z));
            col_31 = (col_31 + (lightColor3_29 * tmpvar_39.w));
            tmpvar_5 = (tmpvar_5 + col_31);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            mediump vec3 tmpvar_12;
            tmpvar_12 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_12;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_13;
            tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_14;
            tmpvar_14 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_8, tmpvar_14);
            worldN_1.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_7, tmpvar_14);
            worldN_1.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_6, tmpvar_14);
            worldN_1.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_1);
            worldN_1 = tmpvar_18;
            tmpvar_3 = tmpvar_18;
            c_2.xyz = (tmpvar_13.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_19;
            halfDir_19 = worldViewDir_4;
            lowp vec4 c_20;
            lowp float spec_21;
            lowp float tmpvar_22;
            tmpvar_22 = max (0.0, dot (tmpvar_3, halfDir_19));
            mediump float tmpvar_23;
            tmpvar_23 = (pow (tmpvar_22, (_Shininess * 128.0)) * tmpvar_13.w);
            spec_21 = tmpvar_23;
            c_20.xyz = (((tmpvar_13.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_21));
            c_20.w = 1.0;
            c_2.xyz = (c_2 + c_20).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            highp vec3 lightColor0_26;
            lightColor0_26 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_27;
            lightColor1_27 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_28;
            lightColor2_28 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_29;
            lightColor3_29 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_30;
            lightAttenSq_30 = unity_4LightAtten0;
            highp vec3 col_31;
            highp vec4 ndotl_32;
            highp vec4 lengthSq_33;
            highp vec4 tmpvar_34;
            tmpvar_34 = (unity_4LightPosX0 - tmpvar_8.x);
            highp vec4 tmpvar_35;
            tmpvar_35 = (unity_4LightPosY0 - tmpvar_8.y);
            highp vec4 tmpvar_36;
            tmpvar_36 = (unity_4LightPosZ0 - tmpvar_8.z);
            lengthSq_33 = (tmpvar_34 * tmpvar_34);
            lengthSq_33 = (lengthSq_33 + (tmpvar_35 * tmpvar_35));
            lengthSq_33 = (lengthSq_33 + (tmpvar_36 * tmpvar_36));
            highp vec4 tmpvar_37;
            tmpvar_37 = max (lengthSq_33, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_33 = tmpvar_37;
            ndotl_32 = (tmpvar_34 * tmpvar_10.x);
            ndotl_32 = (ndotl_32 + (tmpvar_35 * tmpvar_10.y));
            ndotl_32 = (ndotl_32 + (tmpvar_36 * tmpvar_10.z));
            highp vec4 tmpvar_38;
            tmpvar_38 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_32 * inversesqrt(tmpvar_37)));
            ndotl_32 = tmpvar_38;
            highp vec4 tmpvar_39;
            tmpvar_39 = (tmpvar_38 * (1.0/((1.0 + 
              (tmpvar_37 * lightAttenSq_30)
            ))));
            col_31 = (lightColor0_26 * tmpvar_39.x);
            col_31 = (col_31 + (lightColor1_27 * tmpvar_39.y));
            col_31 = (col_31 + (lightColor2_28 * tmpvar_39.z));
            col_31 = (col_31 + (lightColor3_29 * tmpvar_39.w));
            tmpvar_5 = (tmpvar_5 + col_31);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8.xyz)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_8);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.w;
            tmpvar_12.y = xlv_TEXCOORD2.w;
            tmpvar_12.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_17;
            highp vec4 v_18;
            v_18.x = unity_MatrixV[0].z;
            v_18.y = unity_MatrixV[1].z;
            v_18.z = unity_MatrixV[2].z;
            v_18.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_19;
            tmpvar_19 = (tmpvar_12 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_20;
            highp float tmpvar_21;
            tmpvar_21 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_12), v_18.xyz), sqrt(dot (tmpvar_19, tmpvar_19)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_20 = tmpvar_21;
            lowp float tmpvar_22;
            highp float lightShadowDataX_23;
            mediump float tmpvar_24;
            tmpvar_24 = _LightShadowData.x;
            lightShadowDataX_23 = tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_23);
            tmpvar_22 = tmpvar_25;
            realtimeShadowAttenuation_17 = tmpvar_22;
            mediump float tmpvar_26;
            tmpvar_26 = mix (realtimeShadowAttenuation_17, 1.0, tmpvar_20);
            atten_3 = tmpvar_26;
            c_2.w = 0.0;
            lowp float tmpvar_27;
            tmpvar_27 = dot (_unity_tbn_0_8, tmpvar_16);
            worldN_1.x = tmpvar_27;
            lowp float tmpvar_28;
            tmpvar_28 = dot (_unity_tbn_1_7, tmpvar_16);
            worldN_1.y = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_2_6, tmpvar_16);
            worldN_1.z = tmpvar_29;
            highp vec3 tmpvar_30;
            tmpvar_30 = normalize(worldN_1);
            worldN_1 = tmpvar_30;
            tmpvar_4 = tmpvar_30;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_31;
            halfDir_31 = tmpvar_14;
            lowp vec4 c_32;
            lowp float spec_33;
            lowp float tmpvar_34;
            tmpvar_34 = max (0.0, dot (tmpvar_4, halfDir_31));
            mediump float tmpvar_35;
            tmpvar_35 = (pow (tmpvar_34, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_33 = tmpvar_35;
            c_32.xyz = (((
              (tmpvar_15.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_33)) * atten_3);
            c_32.w = 1.0;
            c_2.xyz = (c_2 + c_32).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            highp vec3 lightColor0_26;
            lightColor0_26 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_27;
            lightColor1_27 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_28;
            lightColor2_28 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_29;
            lightColor3_29 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_30;
            lightAttenSq_30 = unity_4LightAtten0;
            highp vec3 col_31;
            highp vec4 ndotl_32;
            highp vec4 lengthSq_33;
            highp vec4 tmpvar_34;
            tmpvar_34 = (unity_4LightPosX0 - tmpvar_8.x);
            highp vec4 tmpvar_35;
            tmpvar_35 = (unity_4LightPosY0 - tmpvar_8.y);
            highp vec4 tmpvar_36;
            tmpvar_36 = (unity_4LightPosZ0 - tmpvar_8.z);
            lengthSq_33 = (tmpvar_34 * tmpvar_34);
            lengthSq_33 = (lengthSq_33 + (tmpvar_35 * tmpvar_35));
            lengthSq_33 = (lengthSq_33 + (tmpvar_36 * tmpvar_36));
            highp vec4 tmpvar_37;
            tmpvar_37 = max (lengthSq_33, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_33 = tmpvar_37;
            ndotl_32 = (tmpvar_34 * tmpvar_10.x);
            ndotl_32 = (ndotl_32 + (tmpvar_35 * tmpvar_10.y));
            ndotl_32 = (ndotl_32 + (tmpvar_36 * tmpvar_10.z));
            highp vec4 tmpvar_38;
            tmpvar_38 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_32 * inversesqrt(tmpvar_37)));
            ndotl_32 = tmpvar_38;
            highp vec4 tmpvar_39;
            tmpvar_39 = (tmpvar_38 * (1.0/((1.0 + 
              (tmpvar_37 * lightAttenSq_30)
            ))));
            col_31 = (lightColor0_26 * tmpvar_39.x);
            col_31 = (col_31 + (lightColor1_27 * tmpvar_39.y));
            col_31 = (col_31 + (lightColor2_28 * tmpvar_39.z));
            col_31 = (col_31 + (lightColor3_29 * tmpvar_39.w));
            tmpvar_5 = (tmpvar_5 + col_31);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8.xyz)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_8);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.w;
            tmpvar_12.y = xlv_TEXCOORD2.w;
            tmpvar_12.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_17;
            highp vec4 v_18;
            v_18.x = unity_MatrixV[0].z;
            v_18.y = unity_MatrixV[1].z;
            v_18.z = unity_MatrixV[2].z;
            v_18.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_19;
            tmpvar_19 = (tmpvar_12 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_20;
            highp float tmpvar_21;
            tmpvar_21 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_12), v_18.xyz), sqrt(dot (tmpvar_19, tmpvar_19)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_20 = tmpvar_21;
            lowp float tmpvar_22;
            highp float lightShadowDataX_23;
            mediump float tmpvar_24;
            tmpvar_24 = _LightShadowData.x;
            lightShadowDataX_23 = tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_23);
            tmpvar_22 = tmpvar_25;
            realtimeShadowAttenuation_17 = tmpvar_22;
            mediump float tmpvar_26;
            tmpvar_26 = mix (realtimeShadowAttenuation_17, 1.0, tmpvar_20);
            atten_3 = tmpvar_26;
            c_2.w = 0.0;
            lowp float tmpvar_27;
            tmpvar_27 = dot (_unity_tbn_0_8, tmpvar_16);
            worldN_1.x = tmpvar_27;
            lowp float tmpvar_28;
            tmpvar_28 = dot (_unity_tbn_1_7, tmpvar_16);
            worldN_1.y = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_2_6, tmpvar_16);
            worldN_1.z = tmpvar_29;
            highp vec3 tmpvar_30;
            tmpvar_30 = normalize(worldN_1);
            worldN_1 = tmpvar_30;
            tmpvar_4 = tmpvar_30;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_31;
            halfDir_31 = tmpvar_14;
            lowp vec4 c_32;
            lowp float spec_33;
            lowp float tmpvar_34;
            tmpvar_34 = max (0.0, dot (tmpvar_4, halfDir_31));
            mediump float tmpvar_35;
            tmpvar_35 = (pow (tmpvar_34, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_33 = tmpvar_35;
            c_32.xyz = (((
              (tmpvar_15.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_33)) * atten_3);
            c_32.w = 1.0;
            c_2.xyz = (c_2 + c_32).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            highp vec3 lightColor0_26;
            lightColor0_26 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_27;
            lightColor1_27 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_28;
            lightColor2_28 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_29;
            lightColor3_29 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_30;
            lightAttenSq_30 = unity_4LightAtten0;
            highp vec3 col_31;
            highp vec4 ndotl_32;
            highp vec4 lengthSq_33;
            highp vec4 tmpvar_34;
            tmpvar_34 = (unity_4LightPosX0 - tmpvar_8.x);
            highp vec4 tmpvar_35;
            tmpvar_35 = (unity_4LightPosY0 - tmpvar_8.y);
            highp vec4 tmpvar_36;
            tmpvar_36 = (unity_4LightPosZ0 - tmpvar_8.z);
            lengthSq_33 = (tmpvar_34 * tmpvar_34);
            lengthSq_33 = (lengthSq_33 + (tmpvar_35 * tmpvar_35));
            lengthSq_33 = (lengthSq_33 + (tmpvar_36 * tmpvar_36));
            highp vec4 tmpvar_37;
            tmpvar_37 = max (lengthSq_33, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_33 = tmpvar_37;
            ndotl_32 = (tmpvar_34 * tmpvar_10.x);
            ndotl_32 = (ndotl_32 + (tmpvar_35 * tmpvar_10.y));
            ndotl_32 = (ndotl_32 + (tmpvar_36 * tmpvar_10.z));
            highp vec4 tmpvar_38;
            tmpvar_38 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_32 * inversesqrt(tmpvar_37)));
            ndotl_32 = tmpvar_38;
            highp vec4 tmpvar_39;
            tmpvar_39 = (tmpvar_38 * (1.0/((1.0 + 
              (tmpvar_37 * lightAttenSq_30)
            ))));
            col_31 = (lightColor0_26 * tmpvar_39.x);
            col_31 = (col_31 + (lightColor1_27 * tmpvar_39.y));
            col_31 = (col_31 + (lightColor2_28 * tmpvar_39.z));
            col_31 = (col_31 + (lightColor3_29 * tmpvar_39.w));
            tmpvar_5 = (tmpvar_5 + col_31);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8.xyz)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_8);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.w;
            tmpvar_12.y = xlv_TEXCOORD2.w;
            tmpvar_12.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_17;
            highp vec4 v_18;
            v_18.x = unity_MatrixV[0].z;
            v_18.y = unity_MatrixV[1].z;
            v_18.z = unity_MatrixV[2].z;
            v_18.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_19;
            tmpvar_19 = (tmpvar_12 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_20;
            highp float tmpvar_21;
            tmpvar_21 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_12), v_18.xyz), sqrt(dot (tmpvar_19, tmpvar_19)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_20 = tmpvar_21;
            lowp float tmpvar_22;
            highp float lightShadowDataX_23;
            mediump float tmpvar_24;
            tmpvar_24 = _LightShadowData.x;
            lightShadowDataX_23 = tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_23);
            tmpvar_22 = tmpvar_25;
            realtimeShadowAttenuation_17 = tmpvar_22;
            mediump float tmpvar_26;
            tmpvar_26 = mix (realtimeShadowAttenuation_17, 1.0, tmpvar_20);
            atten_3 = tmpvar_26;
            c_2.w = 0.0;
            lowp float tmpvar_27;
            tmpvar_27 = dot (_unity_tbn_0_8, tmpvar_16);
            worldN_1.x = tmpvar_27;
            lowp float tmpvar_28;
            tmpvar_28 = dot (_unity_tbn_1_7, tmpvar_16);
            worldN_1.y = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_2_6, tmpvar_16);
            worldN_1.z = tmpvar_29;
            highp vec3 tmpvar_30;
            tmpvar_30 = normalize(worldN_1);
            worldN_1 = tmpvar_30;
            tmpvar_4 = tmpvar_30;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_31;
            halfDir_31 = tmpvar_14;
            lowp vec4 c_32;
            lowp float spec_33;
            lowp float tmpvar_34;
            tmpvar_34 = max (0.0, dot (tmpvar_4, halfDir_31));
            mediump float tmpvar_35;
            tmpvar_35 = (pow (tmpvar_34, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_33 = tmpvar_35;
            c_32.xyz = (((
              (tmpvar_15.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_33)) * atten_3);
            c_32.w = 1.0;
            c_2.xyz = (c_2 + c_32).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            highp vec3 lightColor0_26;
            lightColor0_26 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_27;
            lightColor1_27 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_28;
            lightColor2_28 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_29;
            lightColor3_29 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_30;
            lightAttenSq_30 = unity_4LightAtten0;
            highp vec3 col_31;
            highp vec4 ndotl_32;
            highp vec4 lengthSq_33;
            highp vec4 tmpvar_34;
            tmpvar_34 = (unity_4LightPosX0 - tmpvar_8.x);
            highp vec4 tmpvar_35;
            tmpvar_35 = (unity_4LightPosY0 - tmpvar_8.y);
            highp vec4 tmpvar_36;
            tmpvar_36 = (unity_4LightPosZ0 - tmpvar_8.z);
            lengthSq_33 = (tmpvar_34 * tmpvar_34);
            lengthSq_33 = (lengthSq_33 + (tmpvar_35 * tmpvar_35));
            lengthSq_33 = (lengthSq_33 + (tmpvar_36 * tmpvar_36));
            highp vec4 tmpvar_37;
            tmpvar_37 = max (lengthSq_33, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_33 = tmpvar_37;
            ndotl_32 = (tmpvar_34 * tmpvar_10.x);
            ndotl_32 = (ndotl_32 + (tmpvar_35 * tmpvar_10.y));
            ndotl_32 = (ndotl_32 + (tmpvar_36 * tmpvar_10.z));
            highp vec4 tmpvar_38;
            tmpvar_38 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_32 * inversesqrt(tmpvar_37)));
            ndotl_32 = tmpvar_38;
            highp vec4 tmpvar_39;
            tmpvar_39 = (tmpvar_38 * (1.0/((1.0 + 
              (tmpvar_37 * lightAttenSq_30)
            ))));
            col_31 = (lightColor0_26 * tmpvar_39.x);
            col_31 = (col_31 + (lightColor1_27 * tmpvar_39.y));
            col_31 = (col_31 + (lightColor2_28 * tmpvar_39.z));
            col_31 = (col_31 + (lightColor3_29 * tmpvar_39.w));
            tmpvar_5 = (tmpvar_5 + col_31);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8.xyz)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_8);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.w;
            tmpvar_12.y = xlv_TEXCOORD2.w;
            tmpvar_12.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_17;
            highp vec4 v_18;
            v_18.x = unity_MatrixV[0].z;
            v_18.y = unity_MatrixV[1].z;
            v_18.z = unity_MatrixV[2].z;
            v_18.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_19;
            tmpvar_19 = (tmpvar_12 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_20;
            highp float tmpvar_21;
            tmpvar_21 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_12), v_18.xyz), sqrt(dot (tmpvar_19, tmpvar_19)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_20 = tmpvar_21;
            lowp float tmpvar_22;
            highp float lightShadowDataX_23;
            mediump float tmpvar_24;
            tmpvar_24 = _LightShadowData.x;
            lightShadowDataX_23 = tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_23);
            tmpvar_22 = tmpvar_25;
            realtimeShadowAttenuation_17 = tmpvar_22;
            mediump float tmpvar_26;
            tmpvar_26 = mix (realtimeShadowAttenuation_17, 1.0, tmpvar_20);
            atten_3 = tmpvar_26;
            c_2.w = 0.0;
            lowp float tmpvar_27;
            tmpvar_27 = dot (_unity_tbn_0_8, tmpvar_16);
            worldN_1.x = tmpvar_27;
            lowp float tmpvar_28;
            tmpvar_28 = dot (_unity_tbn_1_7, tmpvar_16);
            worldN_1.y = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_2_6, tmpvar_16);
            worldN_1.z = tmpvar_29;
            highp vec3 tmpvar_30;
            tmpvar_30 = normalize(worldN_1);
            worldN_1 = tmpvar_30;
            tmpvar_4 = tmpvar_30;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_31;
            halfDir_31 = tmpvar_14;
            lowp vec4 c_32;
            lowp float spec_33;
            lowp float tmpvar_34;
            tmpvar_34 = max (0.0, dot (tmpvar_4, halfDir_31));
            mediump float tmpvar_35;
            tmpvar_35 = (pow (tmpvar_34, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_33 = tmpvar_35;
            c_32.xyz = (((
              (tmpvar_15.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_33)) * atten_3);
            c_32.w = 1.0;
            c_2.xyz = (c_2 + c_32).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            highp vec3 lightColor0_26;
            lightColor0_26 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_27;
            lightColor1_27 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_28;
            lightColor2_28 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_29;
            lightColor3_29 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_30;
            lightAttenSq_30 = unity_4LightAtten0;
            highp vec3 col_31;
            highp vec4 ndotl_32;
            highp vec4 lengthSq_33;
            highp vec4 tmpvar_34;
            tmpvar_34 = (unity_4LightPosX0 - tmpvar_8.x);
            highp vec4 tmpvar_35;
            tmpvar_35 = (unity_4LightPosY0 - tmpvar_8.y);
            highp vec4 tmpvar_36;
            tmpvar_36 = (unity_4LightPosZ0 - tmpvar_8.z);
            lengthSq_33 = (tmpvar_34 * tmpvar_34);
            lengthSq_33 = (lengthSq_33 + (tmpvar_35 * tmpvar_35));
            lengthSq_33 = (lengthSq_33 + (tmpvar_36 * tmpvar_36));
            highp vec4 tmpvar_37;
            tmpvar_37 = max (lengthSq_33, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_33 = tmpvar_37;
            ndotl_32 = (tmpvar_34 * tmpvar_10.x);
            ndotl_32 = (ndotl_32 + (tmpvar_35 * tmpvar_10.y));
            ndotl_32 = (ndotl_32 + (tmpvar_36 * tmpvar_10.z));
            highp vec4 tmpvar_38;
            tmpvar_38 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_32 * inversesqrt(tmpvar_37)));
            ndotl_32 = tmpvar_38;
            highp vec4 tmpvar_39;
            tmpvar_39 = (tmpvar_38 * (1.0/((1.0 + 
              (tmpvar_37 * lightAttenSq_30)
            ))));
            col_31 = (lightColor0_26 * tmpvar_39.x);
            col_31 = (col_31 + (lightColor1_27 * tmpvar_39.y));
            col_31 = (col_31 + (lightColor2_28 * tmpvar_39.z));
            col_31 = (col_31 + (lightColor3_29 * tmpvar_39.w));
            tmpvar_5 = (tmpvar_5 + col_31);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8.xyz)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_8);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.w;
            tmpvar_12.y = xlv_TEXCOORD2.w;
            tmpvar_12.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_17;
            highp vec4 v_18;
            v_18.x = unity_MatrixV[0].z;
            v_18.y = unity_MatrixV[1].z;
            v_18.z = unity_MatrixV[2].z;
            v_18.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_19;
            tmpvar_19 = (tmpvar_12 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_20;
            highp float tmpvar_21;
            tmpvar_21 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_12), v_18.xyz), sqrt(dot (tmpvar_19, tmpvar_19)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_20 = tmpvar_21;
            lowp float tmpvar_22;
            highp float lightShadowDataX_23;
            mediump float tmpvar_24;
            tmpvar_24 = _LightShadowData.x;
            lightShadowDataX_23 = tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_23);
            tmpvar_22 = tmpvar_25;
            realtimeShadowAttenuation_17 = tmpvar_22;
            mediump float tmpvar_26;
            tmpvar_26 = mix (realtimeShadowAttenuation_17, 1.0, tmpvar_20);
            atten_3 = tmpvar_26;
            c_2.w = 0.0;
            lowp float tmpvar_27;
            tmpvar_27 = dot (_unity_tbn_0_8, tmpvar_16);
            worldN_1.x = tmpvar_27;
            lowp float tmpvar_28;
            tmpvar_28 = dot (_unity_tbn_1_7, tmpvar_16);
            worldN_1.y = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_2_6, tmpvar_16);
            worldN_1.z = tmpvar_29;
            highp vec3 tmpvar_30;
            tmpvar_30 = normalize(worldN_1);
            worldN_1 = tmpvar_30;
            tmpvar_4 = tmpvar_30;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_31;
            halfDir_31 = tmpvar_14;
            lowp vec4 c_32;
            lowp float spec_33;
            lowp float tmpvar_34;
            tmpvar_34 = max (0.0, dot (tmpvar_4, halfDir_31));
            mediump float tmpvar_35;
            tmpvar_35 = (pow (tmpvar_34, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_33 = tmpvar_35;
            c_32.xyz = (((
              (tmpvar_15.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_33)) * atten_3);
            c_32.w = 1.0;
            c_2.xyz = (c_2 + c_32).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            lowp vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_4.zxy) - (tmpvar_10.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_4.x;
            tmpvar_15.y = worldBinormal_2.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_4.y;
            tmpvar_16.y = worldBinormal_2.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_4.z;
            tmpvar_17.y = worldBinormal_2.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            highp vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_19;
            tmpvar_19.w = 1.0;
            tmpvar_19.xyz = tmpvar_10;
            mediump vec4 normal_20;
            normal_20 = tmpvar_19;
            mediump vec3 res_21;
            mediump vec3 x_22;
            x_22.x = dot (unity_SHAr, normal_20);
            x_22.y = dot (unity_SHAg, normal_20);
            x_22.z = dot (unity_SHAb, normal_20);
            mediump vec3 x1_23;
            mediump vec4 tmpvar_24;
            tmpvar_24 = (normal_20.xyzz * normal_20.yzzx);
            x1_23.x = dot (unity_SHBr, tmpvar_24);
            x1_23.y = dot (unity_SHBg, tmpvar_24);
            x1_23.z = dot (unity_SHBb, tmpvar_24);
            res_21 = (x_22 + (x1_23 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_25;
            tmpvar_25 = max (((1.055 * 
              pow (max (res_21, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_21 = tmpvar_25;
            shlight_1 = tmpvar_25;
            tmpvar_5 = shlight_1;
            highp vec3 lightColor0_26;
            lightColor0_26 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_27;
            lightColor1_27 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_28;
            lightColor2_28 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_29;
            lightColor3_29 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_30;
            lightAttenSq_30 = unity_4LightAtten0;
            highp vec3 col_31;
            highp vec4 ndotl_32;
            highp vec4 lengthSq_33;
            highp vec4 tmpvar_34;
            tmpvar_34 = (unity_4LightPosX0 - tmpvar_8.x);
            highp vec4 tmpvar_35;
            tmpvar_35 = (unity_4LightPosY0 - tmpvar_8.y);
            highp vec4 tmpvar_36;
            tmpvar_36 = (unity_4LightPosZ0 - tmpvar_8.z);
            lengthSq_33 = (tmpvar_34 * tmpvar_34);
            lengthSq_33 = (lengthSq_33 + (tmpvar_35 * tmpvar_35));
            lengthSq_33 = (lengthSq_33 + (tmpvar_36 * tmpvar_36));
            highp vec4 tmpvar_37;
            tmpvar_37 = max (lengthSq_33, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_33 = tmpvar_37;
            ndotl_32 = (tmpvar_34 * tmpvar_10.x);
            ndotl_32 = (ndotl_32 + (tmpvar_35 * tmpvar_10.y));
            ndotl_32 = (ndotl_32 + (tmpvar_36 * tmpvar_10.z));
            highp vec4 tmpvar_38;
            tmpvar_38 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_32 * inversesqrt(tmpvar_37)));
            ndotl_32 = tmpvar_38;
            highp vec4 tmpvar_39;
            tmpvar_39 = (tmpvar_38 * (1.0/((1.0 + 
              (tmpvar_37 * lightAttenSq_30)
            ))));
            col_31 = (lightColor0_26 * tmpvar_39.x);
            col_31 = (col_31 + (lightColor1_27 * tmpvar_39.y));
            col_31 = (col_31 + (lightColor2_28 * tmpvar_39.z));
            col_31 = (col_31 + (lightColor3_29 * tmpvar_39.w));
            tmpvar_5 = (tmpvar_5 + col_31);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_8.xyz)
            ) + normalize(tmpvar_18)));
            xlv_TEXCOORD5 = tmpvar_5;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_8);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_tbn_2_6;
            lowp vec3 _unity_tbn_1_7;
            lowp vec3 _unity_tbn_0_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_7 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_6 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.w;
            tmpvar_12.y = xlv_TEXCOORD2.w;
            tmpvar_12.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_17;
            highp vec4 v_18;
            v_18.x = unity_MatrixV[0].z;
            v_18.y = unity_MatrixV[1].z;
            v_18.z = unity_MatrixV[2].z;
            v_18.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_19;
            tmpvar_19 = (tmpvar_12 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_20;
            highp float tmpvar_21;
            tmpvar_21 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_12), v_18.xyz), sqrt(dot (tmpvar_19, tmpvar_19)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_20 = tmpvar_21;
            lowp float tmpvar_22;
            highp float lightShadowDataX_23;
            mediump float tmpvar_24;
            tmpvar_24 = _LightShadowData.x;
            lightShadowDataX_23 = tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_23);
            tmpvar_22 = tmpvar_25;
            realtimeShadowAttenuation_17 = tmpvar_22;
            mediump float tmpvar_26;
            tmpvar_26 = mix (realtimeShadowAttenuation_17, 1.0, tmpvar_20);
            atten_3 = tmpvar_26;
            c_2.w = 0.0;
            lowp float tmpvar_27;
            tmpvar_27 = dot (_unity_tbn_0_8, tmpvar_16);
            worldN_1.x = tmpvar_27;
            lowp float tmpvar_28;
            tmpvar_28 = dot (_unity_tbn_1_7, tmpvar_16);
            worldN_1.y = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_2_6, tmpvar_16);
            worldN_1.z = tmpvar_29;
            highp vec3 tmpvar_30;
            tmpvar_30 = normalize(worldN_1);
            worldN_1 = tmpvar_30;
            tmpvar_4 = tmpvar_30;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_31;
            halfDir_31 = tmpvar_14;
            lowp vec4 c_32;
            lowp float spec_33;
            lowp float tmpvar_34;
            tmpvar_34 = max (0.0, dot (tmpvar_4, halfDir_31));
            mediump float tmpvar_35;
            tmpvar_35 = (pow (tmpvar_34, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_33 = tmpvar_35;
            c_32.xyz = (((
              (tmpvar_15.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_33)) * atten_3);
            c_32.w = 1.0;
            c_2.xyz = (c_2 + c_32).xyz;
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              SV_Target0.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            mediump vec3 tmpvar_14;
            tmpvar_14 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_14;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_17;
            tmpvar_17 = dot (tmpvar_11, tmpvar_16);
            worldN_1.x = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_16);
            worldN_1.y = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_16);
            worldN_1.z = tmpvar_19;
            highp vec3 tmpvar_20;
            tmpvar_20 = normalize(worldN_1);
            worldN_1 = tmpvar_20;
            tmpvar_3 = tmpvar_20;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_21;
            halfDir_21 = worldViewDir_4;
            lowp vec4 c_22;
            lowp float spec_23;
            lowp float tmpvar_24;
            tmpvar_24 = max (0.0, dot (tmpvar_3, halfDir_21));
            mediump float tmpvar_25;
            tmpvar_25 = (pow (tmpvar_24, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_23 = tmpvar_25;
            c_22.xyz = (((tmpvar_15.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_23));
            c_22.w = 1.0;
            c_2 = (c_2 + c_22);
            highp float tmpvar_26;
            tmpvar_26 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_26));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            mediump vec3 tmpvar_14;
            tmpvar_14 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_14;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_17;
            tmpvar_17 = dot (tmpvar_11, tmpvar_16);
            worldN_1.x = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_16);
            worldN_1.y = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_16);
            worldN_1.z = tmpvar_19;
            highp vec3 tmpvar_20;
            tmpvar_20 = normalize(worldN_1);
            worldN_1 = tmpvar_20;
            tmpvar_3 = tmpvar_20;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_21;
            halfDir_21 = worldViewDir_4;
            lowp vec4 c_22;
            lowp float spec_23;
            lowp float tmpvar_24;
            tmpvar_24 = max (0.0, dot (tmpvar_3, halfDir_21));
            mediump float tmpvar_25;
            tmpvar_25 = (pow (tmpvar_24, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_23 = tmpvar_25;
            c_22.xyz = (((tmpvar_15.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_23));
            c_22.w = 1.0;
            c_2 = (c_2 + c_22);
            highp float tmpvar_26;
            tmpvar_26 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_26));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            mediump vec3 tmpvar_14;
            tmpvar_14 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_14;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_17;
            tmpvar_17 = dot (tmpvar_11, tmpvar_16);
            worldN_1.x = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_16);
            worldN_1.y = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_16);
            worldN_1.z = tmpvar_19;
            highp vec3 tmpvar_20;
            tmpvar_20 = normalize(worldN_1);
            worldN_1 = tmpvar_20;
            tmpvar_3 = tmpvar_20;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_21;
            halfDir_21 = worldViewDir_4;
            lowp vec4 c_22;
            lowp float spec_23;
            lowp float tmpvar_24;
            tmpvar_24 = max (0.0, dot (tmpvar_3, halfDir_21));
            mediump float tmpvar_25;
            tmpvar_25 = (pow (tmpvar_24, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_23 = tmpvar_25;
            c_22.xyz = (((tmpvar_15.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_23));
            c_22.w = 1.0;
            c_2 = (c_2 + c_22);
            highp float tmpvar_26;
            tmpvar_26 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_26));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat12 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
          #else
              u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat12 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
          #else
              u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat12 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
          #else
              u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            mediump vec3 tmpvar_14;
            tmpvar_14 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_14;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_17;
            tmpvar_17 = dot (tmpvar_11, tmpvar_16);
            worldN_1.x = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_16);
            worldN_1.y = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_16);
            worldN_1.z = tmpvar_19;
            highp vec3 tmpvar_20;
            tmpvar_20 = normalize(worldN_1);
            worldN_1 = tmpvar_20;
            tmpvar_3 = tmpvar_20;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_21;
            halfDir_21 = worldViewDir_4;
            lowp vec4 c_22;
            lowp float spec_23;
            lowp float tmpvar_24;
            tmpvar_24 = max (0.0, dot (tmpvar_3, halfDir_21));
            mediump float tmpvar_25;
            tmpvar_25 = (pow (tmpvar_24, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_23 = tmpvar_25;
            c_22.xyz = (((tmpvar_15.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_23));
            c_22.w = 1.0;
            c_2 = (c_2 + c_22);
            highp float tmpvar_26;
            tmpvar_26 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_26));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            mediump vec3 tmpvar_14;
            tmpvar_14 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_14;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_17;
            tmpvar_17 = dot (tmpvar_11, tmpvar_16);
            worldN_1.x = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_16);
            worldN_1.y = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_16);
            worldN_1.z = tmpvar_19;
            highp vec3 tmpvar_20;
            tmpvar_20 = normalize(worldN_1);
            worldN_1 = tmpvar_20;
            tmpvar_3 = tmpvar_20;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_21;
            halfDir_21 = worldViewDir_4;
            lowp vec4 c_22;
            lowp float spec_23;
            lowp float tmpvar_24;
            tmpvar_24 = max (0.0, dot (tmpvar_3, halfDir_21));
            mediump float tmpvar_25;
            tmpvar_25 = (pow (tmpvar_24, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_23 = tmpvar_25;
            c_22.xyz = (((tmpvar_15.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_23));
            c_22.w = 1.0;
            c_2 = (c_2 + c_22);
            highp float tmpvar_26;
            tmpvar_26 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_26));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            mediump vec3 tmpvar_14;
            tmpvar_14 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_14;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_17;
            tmpvar_17 = dot (tmpvar_11, tmpvar_16);
            worldN_1.x = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_16);
            worldN_1.y = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_16);
            worldN_1.z = tmpvar_19;
            highp vec3 tmpvar_20;
            tmpvar_20 = normalize(worldN_1);
            worldN_1 = tmpvar_20;
            tmpvar_3 = tmpvar_20;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_21;
            halfDir_21 = worldViewDir_4;
            lowp vec4 c_22;
            lowp float spec_23;
            lowp float tmpvar_24;
            tmpvar_24 = max (0.0, dot (tmpvar_3, halfDir_21));
            mediump float tmpvar_25;
            tmpvar_25 = (pow (tmpvar_24, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_23 = tmpvar_25;
            c_22.xyz = (((tmpvar_15.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_23));
            c_22.w = 1.0;
            c_2 = (c_2 + c_22);
            highp float tmpvar_26;
            tmpvar_26 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_26));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat12 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
          #else
              u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat12 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
          #else
              u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat12 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
          #else
              u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11.xyz)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_11);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            highp vec3 tmpvar_14;
            tmpvar_14.x = xlv_TEXCOORD1.w;
            tmpvar_14.y = xlv_TEXCOORD2.w;
            tmpvar_14.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_17;
            tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_14 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_14), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_3 = tmpvar_28;
            c_2.w = 0.0;
            lowp float tmpvar_29;
            tmpvar_29 = dot (tmpvar_11, tmpvar_18);
            worldN_1.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (tmpvar_12, tmpvar_18);
            worldN_1.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_13, tmpvar_18);
            worldN_1.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_1);
            worldN_1 = tmpvar_32;
            tmpvar_4 = tmpvar_32;
            c_2.xyz = (tmpvar_17.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_33;
            halfDir_33 = tmpvar_16;
            lowp vec4 c_34;
            lowp float spec_35;
            lowp float tmpvar_36;
            tmpvar_36 = max (0.0, dot (tmpvar_4, halfDir_33));
            mediump float tmpvar_37;
            tmpvar_37 = (pow (tmpvar_36, (_Shininess * 128.0)) * tmpvar_17.w);
            spec_35 = tmpvar_37;
            c_34.xyz = (((
              (tmpvar_17.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_35)) * atten_3);
            c_34.w = 1.0;
            c_2 = (c_2 + c_34);
            highp float tmpvar_38;
            tmpvar_38 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_38));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11.xyz)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_11);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            highp vec3 tmpvar_14;
            tmpvar_14.x = xlv_TEXCOORD1.w;
            tmpvar_14.y = xlv_TEXCOORD2.w;
            tmpvar_14.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_17;
            tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_14 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_14), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_3 = tmpvar_28;
            c_2.w = 0.0;
            lowp float tmpvar_29;
            tmpvar_29 = dot (tmpvar_11, tmpvar_18);
            worldN_1.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (tmpvar_12, tmpvar_18);
            worldN_1.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_13, tmpvar_18);
            worldN_1.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_1);
            worldN_1 = tmpvar_32;
            tmpvar_4 = tmpvar_32;
            c_2.xyz = (tmpvar_17.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_33;
            halfDir_33 = tmpvar_16;
            lowp vec4 c_34;
            lowp float spec_35;
            lowp float tmpvar_36;
            tmpvar_36 = max (0.0, dot (tmpvar_4, halfDir_33));
            mediump float tmpvar_37;
            tmpvar_37 = (pow (tmpvar_36, (_Shininess * 128.0)) * tmpvar_17.w);
            spec_35 = tmpvar_37;
            c_34.xyz = (((
              (tmpvar_17.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_35)) * atten_3);
            c_34.w = 1.0;
            c_2 = (c_2 + c_34);
            highp float tmpvar_38;
            tmpvar_38 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_38));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11.xyz)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_11);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            highp vec3 tmpvar_14;
            tmpvar_14.x = xlv_TEXCOORD1.w;
            tmpvar_14.y = xlv_TEXCOORD2.w;
            tmpvar_14.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_17;
            tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_14 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_14), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_3 = tmpvar_28;
            c_2.w = 0.0;
            lowp float tmpvar_29;
            tmpvar_29 = dot (tmpvar_11, tmpvar_18);
            worldN_1.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (tmpvar_12, tmpvar_18);
            worldN_1.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_13, tmpvar_18);
            worldN_1.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_1);
            worldN_1 = tmpvar_32;
            tmpvar_4 = tmpvar_32;
            c_2.xyz = (tmpvar_17.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_33;
            halfDir_33 = tmpvar_16;
            lowp vec4 c_34;
            lowp float spec_35;
            lowp float tmpvar_36;
            tmpvar_36 = max (0.0, dot (tmpvar_4, halfDir_33));
            mediump float tmpvar_37;
            tmpvar_37 = (pow (tmpvar_36, (_Shininess * 128.0)) * tmpvar_17.w);
            spec_35 = tmpvar_37;
            c_34.xyz = (((
              (tmpvar_17.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_35)) * atten_3);
            c_34.w = 1.0;
            c_2 = (c_2 + c_34);
            highp float tmpvar_38;
            tmpvar_38 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_38));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              u_xlat16_3.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              u_xlat16_3.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              u_xlat16_3.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11.xyz)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_11);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            highp vec3 tmpvar_14;
            tmpvar_14.x = xlv_TEXCOORD1.w;
            tmpvar_14.y = xlv_TEXCOORD2.w;
            tmpvar_14.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_17;
            tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_14 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_14), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_3 = tmpvar_28;
            c_2.w = 0.0;
            lowp float tmpvar_29;
            tmpvar_29 = dot (tmpvar_11, tmpvar_18);
            worldN_1.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (tmpvar_12, tmpvar_18);
            worldN_1.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_13, tmpvar_18);
            worldN_1.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_1);
            worldN_1 = tmpvar_32;
            tmpvar_4 = tmpvar_32;
            c_2.xyz = (tmpvar_17.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_33;
            halfDir_33 = tmpvar_16;
            lowp vec4 c_34;
            lowp float spec_35;
            lowp float tmpvar_36;
            tmpvar_36 = max (0.0, dot (tmpvar_4, halfDir_33));
            mediump float tmpvar_37;
            tmpvar_37 = (pow (tmpvar_36, (_Shininess * 128.0)) * tmpvar_17.w);
            spec_35 = tmpvar_37;
            c_34.xyz = (((
              (tmpvar_17.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_35)) * atten_3);
            c_34.w = 1.0;
            c_2 = (c_2 + c_34);
            highp float tmpvar_38;
            tmpvar_38 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_38));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11.xyz)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_11);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            highp vec3 tmpvar_14;
            tmpvar_14.x = xlv_TEXCOORD1.w;
            tmpvar_14.y = xlv_TEXCOORD2.w;
            tmpvar_14.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_17;
            tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_14 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_14), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_3 = tmpvar_28;
            c_2.w = 0.0;
            lowp float tmpvar_29;
            tmpvar_29 = dot (tmpvar_11, tmpvar_18);
            worldN_1.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (tmpvar_12, tmpvar_18);
            worldN_1.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_13, tmpvar_18);
            worldN_1.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_1);
            worldN_1 = tmpvar_32;
            tmpvar_4 = tmpvar_32;
            c_2.xyz = (tmpvar_17.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_33;
            halfDir_33 = tmpvar_16;
            lowp vec4 c_34;
            lowp float spec_35;
            lowp float tmpvar_36;
            tmpvar_36 = max (0.0, dot (tmpvar_4, halfDir_33));
            mediump float tmpvar_37;
            tmpvar_37 = (pow (tmpvar_36, (_Shininess * 128.0)) * tmpvar_17.w);
            spec_35 = tmpvar_37;
            c_34.xyz = (((
              (tmpvar_17.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_35)) * atten_3);
            c_34.w = 1.0;
            c_2 = (c_2 + c_34);
            highp float tmpvar_38;
            tmpvar_38 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_38));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11.xyz)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_11);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            highp vec3 tmpvar_14;
            tmpvar_14.x = xlv_TEXCOORD1.w;
            tmpvar_14.y = xlv_TEXCOORD2.w;
            tmpvar_14.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_17;
            tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_14 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_14), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_3 = tmpvar_28;
            c_2.w = 0.0;
            lowp float tmpvar_29;
            tmpvar_29 = dot (tmpvar_11, tmpvar_18);
            worldN_1.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (tmpvar_12, tmpvar_18);
            worldN_1.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_13, tmpvar_18);
            worldN_1.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_1);
            worldN_1 = tmpvar_32;
            tmpvar_4 = tmpvar_32;
            c_2.xyz = (tmpvar_17.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_33;
            halfDir_33 = tmpvar_16;
            lowp vec4 c_34;
            lowp float spec_35;
            lowp float tmpvar_36;
            tmpvar_36 = max (0.0, dot (tmpvar_4, halfDir_33));
            mediump float tmpvar_37;
            tmpvar_37 = (pow (tmpvar_36, (_Shininess * 128.0)) * tmpvar_17.w);
            spec_35 = tmpvar_37;
            c_34.xyz = (((
              (tmpvar_17.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_35)) * atten_3);
            c_34.w = 1.0;
            c_2 = (c_2 + c_34);
            highp float tmpvar_38;
            tmpvar_38 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_38));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              u_xlat16_3.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              u_xlat16_3.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.x = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat1.x = inversesqrt(u_xlat1.x);
              u_xlat1.xyz = u_xlat1.xxx * _WorldSpaceLightPos0.xyz;
              u_xlat0.xyz = u_xlat0.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat0.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              u_xlat16_3.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            highp vec3 lightColor0_29;
            lightColor0_29 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_30;
            lightColor1_30 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_31;
            lightColor2_31 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_32;
            lightColor3_32 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_33;
            lightAttenSq_33 = unity_4LightAtten0;
            highp vec3 col_34;
            highp vec4 ndotl_35;
            highp vec4 lengthSq_36;
            highp vec4 tmpvar_37;
            tmpvar_37 = (unity_4LightPosX0 - tmpvar_11.x);
            highp vec4 tmpvar_38;
            tmpvar_38 = (unity_4LightPosY0 - tmpvar_11.y);
            highp vec4 tmpvar_39;
            tmpvar_39 = (unity_4LightPosZ0 - tmpvar_11.z);
            lengthSq_36 = (tmpvar_37 * tmpvar_37);
            lengthSq_36 = (lengthSq_36 + (tmpvar_38 * tmpvar_38));
            lengthSq_36 = (lengthSq_36 + (tmpvar_39 * tmpvar_39));
            highp vec4 tmpvar_40;
            tmpvar_40 = max (lengthSq_36, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_36 = tmpvar_40;
            ndotl_35 = (tmpvar_37 * tmpvar_13.x);
            ndotl_35 = (ndotl_35 + (tmpvar_38 * tmpvar_13.y));
            ndotl_35 = (ndotl_35 + (tmpvar_39 * tmpvar_13.z));
            highp vec4 tmpvar_41;
            tmpvar_41 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_35 * inversesqrt(tmpvar_40)));
            ndotl_35 = tmpvar_41;
            highp vec4 tmpvar_42;
            tmpvar_42 = (tmpvar_41 * (1.0/((1.0 + 
              (tmpvar_40 * lightAttenSq_33)
            ))));
            col_34 = (lightColor0_29 * tmpvar_42.x);
            col_34 = (col_34 + (lightColor1_30 * tmpvar_42.y));
            col_34 = (col_34 + (lightColor2_31 * tmpvar_42.z));
            col_34 = (col_34 + (lightColor3_32 * tmpvar_42.w));
            tmpvar_7 = (tmpvar_7 + col_34);
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            mediump vec3 tmpvar_14;
            tmpvar_14 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_14;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_17;
            tmpvar_17 = dot (tmpvar_11, tmpvar_16);
            worldN_1.x = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_16);
            worldN_1.y = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_16);
            worldN_1.z = tmpvar_19;
            highp vec3 tmpvar_20;
            tmpvar_20 = normalize(worldN_1);
            worldN_1 = tmpvar_20;
            tmpvar_3 = tmpvar_20;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_21;
            halfDir_21 = worldViewDir_4;
            lowp vec4 c_22;
            lowp float spec_23;
            lowp float tmpvar_24;
            tmpvar_24 = max (0.0, dot (tmpvar_3, halfDir_21));
            mediump float tmpvar_25;
            tmpvar_25 = (pow (tmpvar_24, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_23 = tmpvar_25;
            c_22.xyz = (((tmpvar_15.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_23));
            c_22.w = 1.0;
            c_2 = (c_2 + c_22);
            highp float tmpvar_26;
            tmpvar_26 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_26));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            highp vec3 lightColor0_29;
            lightColor0_29 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_30;
            lightColor1_30 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_31;
            lightColor2_31 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_32;
            lightColor3_32 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_33;
            lightAttenSq_33 = unity_4LightAtten0;
            highp vec3 col_34;
            highp vec4 ndotl_35;
            highp vec4 lengthSq_36;
            highp vec4 tmpvar_37;
            tmpvar_37 = (unity_4LightPosX0 - tmpvar_11.x);
            highp vec4 tmpvar_38;
            tmpvar_38 = (unity_4LightPosY0 - tmpvar_11.y);
            highp vec4 tmpvar_39;
            tmpvar_39 = (unity_4LightPosZ0 - tmpvar_11.z);
            lengthSq_36 = (tmpvar_37 * tmpvar_37);
            lengthSq_36 = (lengthSq_36 + (tmpvar_38 * tmpvar_38));
            lengthSq_36 = (lengthSq_36 + (tmpvar_39 * tmpvar_39));
            highp vec4 tmpvar_40;
            tmpvar_40 = max (lengthSq_36, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_36 = tmpvar_40;
            ndotl_35 = (tmpvar_37 * tmpvar_13.x);
            ndotl_35 = (ndotl_35 + (tmpvar_38 * tmpvar_13.y));
            ndotl_35 = (ndotl_35 + (tmpvar_39 * tmpvar_13.z));
            highp vec4 tmpvar_41;
            tmpvar_41 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_35 * inversesqrt(tmpvar_40)));
            ndotl_35 = tmpvar_41;
            highp vec4 tmpvar_42;
            tmpvar_42 = (tmpvar_41 * (1.0/((1.0 + 
              (tmpvar_40 * lightAttenSq_33)
            ))));
            col_34 = (lightColor0_29 * tmpvar_42.x);
            col_34 = (col_34 + (lightColor1_30 * tmpvar_42.y));
            col_34 = (col_34 + (lightColor2_31 * tmpvar_42.z));
            col_34 = (col_34 + (lightColor3_32 * tmpvar_42.w));
            tmpvar_7 = (tmpvar_7 + col_34);
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            mediump vec3 tmpvar_14;
            tmpvar_14 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_14;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_17;
            tmpvar_17 = dot (tmpvar_11, tmpvar_16);
            worldN_1.x = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_16);
            worldN_1.y = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_16);
            worldN_1.z = tmpvar_19;
            highp vec3 tmpvar_20;
            tmpvar_20 = normalize(worldN_1);
            worldN_1 = tmpvar_20;
            tmpvar_3 = tmpvar_20;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_21;
            halfDir_21 = worldViewDir_4;
            lowp vec4 c_22;
            lowp float spec_23;
            lowp float tmpvar_24;
            tmpvar_24 = max (0.0, dot (tmpvar_3, halfDir_21));
            mediump float tmpvar_25;
            tmpvar_25 = (pow (tmpvar_24, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_23 = tmpvar_25;
            c_22.xyz = (((tmpvar_15.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_23));
            c_22.w = 1.0;
            c_2 = (c_2 + c_22);
            highp float tmpvar_26;
            tmpvar_26 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_26));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            highp vec3 lightColor0_29;
            lightColor0_29 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_30;
            lightColor1_30 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_31;
            lightColor2_31 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_32;
            lightColor3_32 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_33;
            lightAttenSq_33 = unity_4LightAtten0;
            highp vec3 col_34;
            highp vec4 ndotl_35;
            highp vec4 lengthSq_36;
            highp vec4 tmpvar_37;
            tmpvar_37 = (unity_4LightPosX0 - tmpvar_11.x);
            highp vec4 tmpvar_38;
            tmpvar_38 = (unity_4LightPosY0 - tmpvar_11.y);
            highp vec4 tmpvar_39;
            tmpvar_39 = (unity_4LightPosZ0 - tmpvar_11.z);
            lengthSq_36 = (tmpvar_37 * tmpvar_37);
            lengthSq_36 = (lengthSq_36 + (tmpvar_38 * tmpvar_38));
            lengthSq_36 = (lengthSq_36 + (tmpvar_39 * tmpvar_39));
            highp vec4 tmpvar_40;
            tmpvar_40 = max (lengthSq_36, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_36 = tmpvar_40;
            ndotl_35 = (tmpvar_37 * tmpvar_13.x);
            ndotl_35 = (ndotl_35 + (tmpvar_38 * tmpvar_13.y));
            ndotl_35 = (ndotl_35 + (tmpvar_39 * tmpvar_13.z));
            highp vec4 tmpvar_41;
            tmpvar_41 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_35 * inversesqrt(tmpvar_40)));
            ndotl_35 = tmpvar_41;
            highp vec4 tmpvar_42;
            tmpvar_42 = (tmpvar_41 * (1.0/((1.0 + 
              (tmpvar_40 * lightAttenSq_33)
            ))));
            col_34 = (lightColor0_29 * tmpvar_42.x);
            col_34 = (col_34 + (lightColor1_30 * tmpvar_42.y));
            col_34 = (col_34 + (lightColor2_31 * tmpvar_42.z));
            col_34 = (col_34 + (lightColor3_32 * tmpvar_42.w));
            tmpvar_7 = (tmpvar_7 + col_34);
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            mediump vec3 tmpvar_14;
            tmpvar_14 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_14;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_17;
            tmpvar_17 = dot (tmpvar_11, tmpvar_16);
            worldN_1.x = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_16);
            worldN_1.y = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_16);
            worldN_1.z = tmpvar_19;
            highp vec3 tmpvar_20;
            tmpvar_20 = normalize(worldN_1);
            worldN_1 = tmpvar_20;
            tmpvar_3 = tmpvar_20;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_21;
            halfDir_21 = worldViewDir_4;
            lowp vec4 c_22;
            lowp float spec_23;
            lowp float tmpvar_24;
            tmpvar_24 = max (0.0, dot (tmpvar_3, halfDir_21));
            mediump float tmpvar_25;
            tmpvar_25 = (pow (tmpvar_24, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_23 = tmpvar_25;
            c_22.xyz = (((tmpvar_15.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_23));
            c_22.w = 1.0;
            c_2 = (c_2 + c_22);
            highp float tmpvar_26;
            tmpvar_26 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_26));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat12 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
          #else
              u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat12 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
          #else
              u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat12 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
          #else
              u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            highp vec3 lightColor0_29;
            lightColor0_29 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_30;
            lightColor1_30 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_31;
            lightColor2_31 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_32;
            lightColor3_32 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_33;
            lightAttenSq_33 = unity_4LightAtten0;
            highp vec3 col_34;
            highp vec4 ndotl_35;
            highp vec4 lengthSq_36;
            highp vec4 tmpvar_37;
            tmpvar_37 = (unity_4LightPosX0 - tmpvar_11.x);
            highp vec4 tmpvar_38;
            tmpvar_38 = (unity_4LightPosY0 - tmpvar_11.y);
            highp vec4 tmpvar_39;
            tmpvar_39 = (unity_4LightPosZ0 - tmpvar_11.z);
            lengthSq_36 = (tmpvar_37 * tmpvar_37);
            lengthSq_36 = (lengthSq_36 + (tmpvar_38 * tmpvar_38));
            lengthSq_36 = (lengthSq_36 + (tmpvar_39 * tmpvar_39));
            highp vec4 tmpvar_40;
            tmpvar_40 = max (lengthSq_36, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_36 = tmpvar_40;
            ndotl_35 = (tmpvar_37 * tmpvar_13.x);
            ndotl_35 = (ndotl_35 + (tmpvar_38 * tmpvar_13.y));
            ndotl_35 = (ndotl_35 + (tmpvar_39 * tmpvar_13.z));
            highp vec4 tmpvar_41;
            tmpvar_41 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_35 * inversesqrt(tmpvar_40)));
            ndotl_35 = tmpvar_41;
            highp vec4 tmpvar_42;
            tmpvar_42 = (tmpvar_41 * (1.0/((1.0 + 
              (tmpvar_40 * lightAttenSq_33)
            ))));
            col_34 = (lightColor0_29 * tmpvar_42.x);
            col_34 = (col_34 + (lightColor1_30 * tmpvar_42.y));
            col_34 = (col_34 + (lightColor2_31 * tmpvar_42.z));
            col_34 = (col_34 + (lightColor3_32 * tmpvar_42.w));
            tmpvar_7 = (tmpvar_7 + col_34);
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            mediump vec3 tmpvar_14;
            tmpvar_14 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_14;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_17;
            tmpvar_17 = dot (tmpvar_11, tmpvar_16);
            worldN_1.x = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_16);
            worldN_1.y = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_16);
            worldN_1.z = tmpvar_19;
            highp vec3 tmpvar_20;
            tmpvar_20 = normalize(worldN_1);
            worldN_1 = tmpvar_20;
            tmpvar_3 = tmpvar_20;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_21;
            halfDir_21 = worldViewDir_4;
            lowp vec4 c_22;
            lowp float spec_23;
            lowp float tmpvar_24;
            tmpvar_24 = max (0.0, dot (tmpvar_3, halfDir_21));
            mediump float tmpvar_25;
            tmpvar_25 = (pow (tmpvar_24, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_23 = tmpvar_25;
            c_22.xyz = (((tmpvar_15.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_23));
            c_22.w = 1.0;
            c_2 = (c_2 + c_22);
            highp float tmpvar_26;
            tmpvar_26 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_26));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            highp vec3 lightColor0_29;
            lightColor0_29 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_30;
            lightColor1_30 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_31;
            lightColor2_31 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_32;
            lightColor3_32 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_33;
            lightAttenSq_33 = unity_4LightAtten0;
            highp vec3 col_34;
            highp vec4 ndotl_35;
            highp vec4 lengthSq_36;
            highp vec4 tmpvar_37;
            tmpvar_37 = (unity_4LightPosX0 - tmpvar_11.x);
            highp vec4 tmpvar_38;
            tmpvar_38 = (unity_4LightPosY0 - tmpvar_11.y);
            highp vec4 tmpvar_39;
            tmpvar_39 = (unity_4LightPosZ0 - tmpvar_11.z);
            lengthSq_36 = (tmpvar_37 * tmpvar_37);
            lengthSq_36 = (lengthSq_36 + (tmpvar_38 * tmpvar_38));
            lengthSq_36 = (lengthSq_36 + (tmpvar_39 * tmpvar_39));
            highp vec4 tmpvar_40;
            tmpvar_40 = max (lengthSq_36, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_36 = tmpvar_40;
            ndotl_35 = (tmpvar_37 * tmpvar_13.x);
            ndotl_35 = (ndotl_35 + (tmpvar_38 * tmpvar_13.y));
            ndotl_35 = (ndotl_35 + (tmpvar_39 * tmpvar_13.z));
            highp vec4 tmpvar_41;
            tmpvar_41 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_35 * inversesqrt(tmpvar_40)));
            ndotl_35 = tmpvar_41;
            highp vec4 tmpvar_42;
            tmpvar_42 = (tmpvar_41 * (1.0/((1.0 + 
              (tmpvar_40 * lightAttenSq_33)
            ))));
            col_34 = (lightColor0_29 * tmpvar_42.x);
            col_34 = (col_34 + (lightColor1_30 * tmpvar_42.y));
            col_34 = (col_34 + (lightColor2_31 * tmpvar_42.z));
            col_34 = (col_34 + (lightColor3_32 * tmpvar_42.w));
            tmpvar_7 = (tmpvar_7 + col_34);
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            mediump vec3 tmpvar_14;
            tmpvar_14 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_14;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_17;
            tmpvar_17 = dot (tmpvar_11, tmpvar_16);
            worldN_1.x = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_16);
            worldN_1.y = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_16);
            worldN_1.z = tmpvar_19;
            highp vec3 tmpvar_20;
            tmpvar_20 = normalize(worldN_1);
            worldN_1 = tmpvar_20;
            tmpvar_3 = tmpvar_20;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_21;
            halfDir_21 = worldViewDir_4;
            lowp vec4 c_22;
            lowp float spec_23;
            lowp float tmpvar_24;
            tmpvar_24 = max (0.0, dot (tmpvar_3, halfDir_21));
            mediump float tmpvar_25;
            tmpvar_25 = (pow (tmpvar_24, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_23 = tmpvar_25;
            c_22.xyz = (((tmpvar_15.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_23));
            c_22.w = 1.0;
            c_2 = (c_2 + c_22);
            highp float tmpvar_26;
            tmpvar_26 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_26));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            highp vec3 lightColor0_29;
            lightColor0_29 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_30;
            lightColor1_30 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_31;
            lightColor2_31 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_32;
            lightColor3_32 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_33;
            lightAttenSq_33 = unity_4LightAtten0;
            highp vec3 col_34;
            highp vec4 ndotl_35;
            highp vec4 lengthSq_36;
            highp vec4 tmpvar_37;
            tmpvar_37 = (unity_4LightPosX0 - tmpvar_11.x);
            highp vec4 tmpvar_38;
            tmpvar_38 = (unity_4LightPosY0 - tmpvar_11.y);
            highp vec4 tmpvar_39;
            tmpvar_39 = (unity_4LightPosZ0 - tmpvar_11.z);
            lengthSq_36 = (tmpvar_37 * tmpvar_37);
            lengthSq_36 = (lengthSq_36 + (tmpvar_38 * tmpvar_38));
            lengthSq_36 = (lengthSq_36 + (tmpvar_39 * tmpvar_39));
            highp vec4 tmpvar_40;
            tmpvar_40 = max (lengthSq_36, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_36 = tmpvar_40;
            ndotl_35 = (tmpvar_37 * tmpvar_13.x);
            ndotl_35 = (ndotl_35 + (tmpvar_38 * tmpvar_13.y));
            ndotl_35 = (ndotl_35 + (tmpvar_39 * tmpvar_13.z));
            highp vec4 tmpvar_41;
            tmpvar_41 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_35 * inversesqrt(tmpvar_40)));
            ndotl_35 = tmpvar_41;
            highp vec4 tmpvar_42;
            tmpvar_42 = (tmpvar_41 * (1.0/((1.0 + 
              (tmpvar_40 * lightAttenSq_33)
            ))));
            col_34 = (lightColor0_29 * tmpvar_42.x);
            col_34 = (col_34 + (lightColor1_30 * tmpvar_42.y));
            col_34 = (col_34 + (lightColor2_31 * tmpvar_42.z));
            col_34 = (col_34 + (lightColor3_32 * tmpvar_42.w));
            tmpvar_7 = (tmpvar_7 + col_34);
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp vec3 tmpvar_3;
            highp vec3 worldViewDir_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            mediump vec3 tmpvar_14;
            tmpvar_14 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_14;
            worldViewDir_4 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_16;
            tmpvar_16 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            c_2.w = 0.0;
            lowp float tmpvar_17;
            tmpvar_17 = dot (tmpvar_11, tmpvar_16);
            worldN_1.x = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_16);
            worldN_1.y = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_16);
            worldN_1.z = tmpvar_19;
            highp vec3 tmpvar_20;
            tmpvar_20 = normalize(worldN_1);
            worldN_1 = tmpvar_20;
            tmpvar_3 = tmpvar_20;
            c_2.xyz = (tmpvar_15.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_21;
            halfDir_21 = worldViewDir_4;
            lowp vec4 c_22;
            lowp float spec_23;
            lowp float tmpvar_24;
            tmpvar_24 = max (0.0, dot (tmpvar_3, halfDir_21));
            mediump float tmpvar_25;
            tmpvar_25 = (pow (tmpvar_24, (_Shininess * 128.0)) * tmpvar_15.w);
            spec_23 = tmpvar_25;
            c_22.xyz = (((tmpvar_15.xyz * _LightColor0.xyz) * max (0.0, 
              dot (tmpvar_3, lightDir_5)
            )) + (_LightColor0.xyz * spec_23));
            c_22.w = 1.0;
            c_2 = (c_2 + c_22);
            highp float tmpvar_26;
            tmpvar_26 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_26));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat12 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
          #else
              u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat12 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
          #else
              u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          mediump float u_xlat16_9;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat12 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * vs_TEXCOORD4.xyz;
              u_xlat16_1.y = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
              u_xlat16_5.x = log2(u_xlat16_1.y);
              u_xlat16_9 = _Shininess * 128.0;
              u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
              u_xlat16_5.x = exp2(u_xlat16_5.x);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_5.x = u_xlat10_0.w * u_xlat16_5.x;
              u_xlat16_5.xyz = u_xlat16_5.xxx * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_5.xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat12 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
          #else
              u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            highp vec3 lightColor0_29;
            lightColor0_29 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_30;
            lightColor1_30 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_31;
            lightColor2_31 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_32;
            lightColor3_32 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_33;
            lightAttenSq_33 = unity_4LightAtten0;
            highp vec3 col_34;
            highp vec4 ndotl_35;
            highp vec4 lengthSq_36;
            highp vec4 tmpvar_37;
            tmpvar_37 = (unity_4LightPosX0 - tmpvar_11.x);
            highp vec4 tmpvar_38;
            tmpvar_38 = (unity_4LightPosY0 - tmpvar_11.y);
            highp vec4 tmpvar_39;
            tmpvar_39 = (unity_4LightPosZ0 - tmpvar_11.z);
            lengthSq_36 = (tmpvar_37 * tmpvar_37);
            lengthSq_36 = (lengthSq_36 + (tmpvar_38 * tmpvar_38));
            lengthSq_36 = (lengthSq_36 + (tmpvar_39 * tmpvar_39));
            highp vec4 tmpvar_40;
            tmpvar_40 = max (lengthSq_36, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_36 = tmpvar_40;
            ndotl_35 = (tmpvar_37 * tmpvar_13.x);
            ndotl_35 = (ndotl_35 + (tmpvar_38 * tmpvar_13.y));
            ndotl_35 = (ndotl_35 + (tmpvar_39 * tmpvar_13.z));
            highp vec4 tmpvar_41;
            tmpvar_41 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_35 * inversesqrt(tmpvar_40)));
            ndotl_35 = tmpvar_41;
            highp vec4 tmpvar_42;
            tmpvar_42 = (tmpvar_41 * (1.0/((1.0 + 
              (tmpvar_40 * lightAttenSq_33)
            ))));
            col_34 = (lightColor0_29 * tmpvar_42.x);
            col_34 = (col_34 + (lightColor1_30 * tmpvar_42.y));
            col_34 = (col_34 + (lightColor2_31 * tmpvar_42.z));
            col_34 = (col_34 + (lightColor3_32 * tmpvar_42.w));
            tmpvar_7 = (tmpvar_7 + col_34);
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11.xyz)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_11);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            highp vec3 tmpvar_14;
            tmpvar_14.x = xlv_TEXCOORD1.w;
            tmpvar_14.y = xlv_TEXCOORD2.w;
            tmpvar_14.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_17;
            tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_14 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_14), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_3 = tmpvar_28;
            c_2.w = 0.0;
            lowp float tmpvar_29;
            tmpvar_29 = dot (tmpvar_11, tmpvar_18);
            worldN_1.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (tmpvar_12, tmpvar_18);
            worldN_1.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_13, tmpvar_18);
            worldN_1.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_1);
            worldN_1 = tmpvar_32;
            tmpvar_4 = tmpvar_32;
            c_2.xyz = (tmpvar_17.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_33;
            halfDir_33 = tmpvar_16;
            lowp vec4 c_34;
            lowp float spec_35;
            lowp float tmpvar_36;
            tmpvar_36 = max (0.0, dot (tmpvar_4, halfDir_33));
            mediump float tmpvar_37;
            tmpvar_37 = (pow (tmpvar_36, (_Shininess * 128.0)) * tmpvar_17.w);
            spec_35 = tmpvar_37;
            c_34.xyz = (((
              (tmpvar_17.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_35)) * atten_3);
            c_34.w = 1.0;
            c_2 = (c_2 + c_34);
            highp float tmpvar_38;
            tmpvar_38 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_38));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            highp vec3 lightColor0_29;
            lightColor0_29 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_30;
            lightColor1_30 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_31;
            lightColor2_31 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_32;
            lightColor3_32 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_33;
            lightAttenSq_33 = unity_4LightAtten0;
            highp vec3 col_34;
            highp vec4 ndotl_35;
            highp vec4 lengthSq_36;
            highp vec4 tmpvar_37;
            tmpvar_37 = (unity_4LightPosX0 - tmpvar_11.x);
            highp vec4 tmpvar_38;
            tmpvar_38 = (unity_4LightPosY0 - tmpvar_11.y);
            highp vec4 tmpvar_39;
            tmpvar_39 = (unity_4LightPosZ0 - tmpvar_11.z);
            lengthSq_36 = (tmpvar_37 * tmpvar_37);
            lengthSq_36 = (lengthSq_36 + (tmpvar_38 * tmpvar_38));
            lengthSq_36 = (lengthSq_36 + (tmpvar_39 * tmpvar_39));
            highp vec4 tmpvar_40;
            tmpvar_40 = max (lengthSq_36, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_36 = tmpvar_40;
            ndotl_35 = (tmpvar_37 * tmpvar_13.x);
            ndotl_35 = (ndotl_35 + (tmpvar_38 * tmpvar_13.y));
            ndotl_35 = (ndotl_35 + (tmpvar_39 * tmpvar_13.z));
            highp vec4 tmpvar_41;
            tmpvar_41 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_35 * inversesqrt(tmpvar_40)));
            ndotl_35 = tmpvar_41;
            highp vec4 tmpvar_42;
            tmpvar_42 = (tmpvar_41 * (1.0/((1.0 + 
              (tmpvar_40 * lightAttenSq_33)
            ))));
            col_34 = (lightColor0_29 * tmpvar_42.x);
            col_34 = (col_34 + (lightColor1_30 * tmpvar_42.y));
            col_34 = (col_34 + (lightColor2_31 * tmpvar_42.z));
            col_34 = (col_34 + (lightColor3_32 * tmpvar_42.w));
            tmpvar_7 = (tmpvar_7 + col_34);
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11.xyz)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_11);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            highp vec3 tmpvar_14;
            tmpvar_14.x = xlv_TEXCOORD1.w;
            tmpvar_14.y = xlv_TEXCOORD2.w;
            tmpvar_14.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_17;
            tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_14 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_14), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_3 = tmpvar_28;
            c_2.w = 0.0;
            lowp float tmpvar_29;
            tmpvar_29 = dot (tmpvar_11, tmpvar_18);
            worldN_1.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (tmpvar_12, tmpvar_18);
            worldN_1.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_13, tmpvar_18);
            worldN_1.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_1);
            worldN_1 = tmpvar_32;
            tmpvar_4 = tmpvar_32;
            c_2.xyz = (tmpvar_17.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_33;
            halfDir_33 = tmpvar_16;
            lowp vec4 c_34;
            lowp float spec_35;
            lowp float tmpvar_36;
            tmpvar_36 = max (0.0, dot (tmpvar_4, halfDir_33));
            mediump float tmpvar_37;
            tmpvar_37 = (pow (tmpvar_36, (_Shininess * 128.0)) * tmpvar_17.w);
            spec_35 = tmpvar_37;
            c_34.xyz = (((
              (tmpvar_17.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_35)) * atten_3);
            c_34.w = 1.0;
            c_2 = (c_2 + c_34);
            highp float tmpvar_38;
            tmpvar_38 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_38));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            highp vec3 lightColor0_29;
            lightColor0_29 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_30;
            lightColor1_30 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_31;
            lightColor2_31 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_32;
            lightColor3_32 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_33;
            lightAttenSq_33 = unity_4LightAtten0;
            highp vec3 col_34;
            highp vec4 ndotl_35;
            highp vec4 lengthSq_36;
            highp vec4 tmpvar_37;
            tmpvar_37 = (unity_4LightPosX0 - tmpvar_11.x);
            highp vec4 tmpvar_38;
            tmpvar_38 = (unity_4LightPosY0 - tmpvar_11.y);
            highp vec4 tmpvar_39;
            tmpvar_39 = (unity_4LightPosZ0 - tmpvar_11.z);
            lengthSq_36 = (tmpvar_37 * tmpvar_37);
            lengthSq_36 = (lengthSq_36 + (tmpvar_38 * tmpvar_38));
            lengthSq_36 = (lengthSq_36 + (tmpvar_39 * tmpvar_39));
            highp vec4 tmpvar_40;
            tmpvar_40 = max (lengthSq_36, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_36 = tmpvar_40;
            ndotl_35 = (tmpvar_37 * tmpvar_13.x);
            ndotl_35 = (ndotl_35 + (tmpvar_38 * tmpvar_13.y));
            ndotl_35 = (ndotl_35 + (tmpvar_39 * tmpvar_13.z));
            highp vec4 tmpvar_41;
            tmpvar_41 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_35 * inversesqrt(tmpvar_40)));
            ndotl_35 = tmpvar_41;
            highp vec4 tmpvar_42;
            tmpvar_42 = (tmpvar_41 * (1.0/((1.0 + 
              (tmpvar_40 * lightAttenSq_33)
            ))));
            col_34 = (lightColor0_29 * tmpvar_42.x);
            col_34 = (col_34 + (lightColor1_30 * tmpvar_42.y));
            col_34 = (col_34 + (lightColor2_31 * tmpvar_42.z));
            col_34 = (col_34 + (lightColor3_32 * tmpvar_42.w));
            tmpvar_7 = (tmpvar_7 + col_34);
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11.xyz)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_11);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            highp vec3 tmpvar_14;
            tmpvar_14.x = xlv_TEXCOORD1.w;
            tmpvar_14.y = xlv_TEXCOORD2.w;
            tmpvar_14.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_17;
            tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_14 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_14), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_3 = tmpvar_28;
            c_2.w = 0.0;
            lowp float tmpvar_29;
            tmpvar_29 = dot (tmpvar_11, tmpvar_18);
            worldN_1.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (tmpvar_12, tmpvar_18);
            worldN_1.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_13, tmpvar_18);
            worldN_1.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_1);
            worldN_1 = tmpvar_32;
            tmpvar_4 = tmpvar_32;
            c_2.xyz = (tmpvar_17.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_33;
            halfDir_33 = tmpvar_16;
            lowp vec4 c_34;
            lowp float spec_35;
            lowp float tmpvar_36;
            tmpvar_36 = max (0.0, dot (tmpvar_4, halfDir_33));
            mediump float tmpvar_37;
            tmpvar_37 = (pow (tmpvar_36, (_Shininess * 128.0)) * tmpvar_17.w);
            spec_35 = tmpvar_37;
            c_34.xyz = (((
              (tmpvar_17.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_35)) * atten_3);
            c_34.w = 1.0;
            c_2 = (c_2 + c_34);
            highp float tmpvar_38;
            tmpvar_38 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_38));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              u_xlat16_3.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              u_xlat16_3.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              u_xlat16_3.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            highp vec3 lightColor0_29;
            lightColor0_29 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_30;
            lightColor1_30 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_31;
            lightColor2_31 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_32;
            lightColor3_32 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_33;
            lightAttenSq_33 = unity_4LightAtten0;
            highp vec3 col_34;
            highp vec4 ndotl_35;
            highp vec4 lengthSq_36;
            highp vec4 tmpvar_37;
            tmpvar_37 = (unity_4LightPosX0 - tmpvar_11.x);
            highp vec4 tmpvar_38;
            tmpvar_38 = (unity_4LightPosY0 - tmpvar_11.y);
            highp vec4 tmpvar_39;
            tmpvar_39 = (unity_4LightPosZ0 - tmpvar_11.z);
            lengthSq_36 = (tmpvar_37 * tmpvar_37);
            lengthSq_36 = (lengthSq_36 + (tmpvar_38 * tmpvar_38));
            lengthSq_36 = (lengthSq_36 + (tmpvar_39 * tmpvar_39));
            highp vec4 tmpvar_40;
            tmpvar_40 = max (lengthSq_36, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_36 = tmpvar_40;
            ndotl_35 = (tmpvar_37 * tmpvar_13.x);
            ndotl_35 = (ndotl_35 + (tmpvar_38 * tmpvar_13.y));
            ndotl_35 = (ndotl_35 + (tmpvar_39 * tmpvar_13.z));
            highp vec4 tmpvar_41;
            tmpvar_41 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_35 * inversesqrt(tmpvar_40)));
            ndotl_35 = tmpvar_41;
            highp vec4 tmpvar_42;
            tmpvar_42 = (tmpvar_41 * (1.0/((1.0 + 
              (tmpvar_40 * lightAttenSq_33)
            ))));
            col_34 = (lightColor0_29 * tmpvar_42.x);
            col_34 = (col_34 + (lightColor1_30 * tmpvar_42.y));
            col_34 = (col_34 + (lightColor2_31 * tmpvar_42.z));
            col_34 = (col_34 + (lightColor3_32 * tmpvar_42.w));
            tmpvar_7 = (tmpvar_7 + col_34);
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11.xyz)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_11);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            highp vec3 tmpvar_14;
            tmpvar_14.x = xlv_TEXCOORD1.w;
            tmpvar_14.y = xlv_TEXCOORD2.w;
            tmpvar_14.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_17;
            tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_14 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_14), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_3 = tmpvar_28;
            c_2.w = 0.0;
            lowp float tmpvar_29;
            tmpvar_29 = dot (tmpvar_11, tmpvar_18);
            worldN_1.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (tmpvar_12, tmpvar_18);
            worldN_1.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_13, tmpvar_18);
            worldN_1.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_1);
            worldN_1 = tmpvar_32;
            tmpvar_4 = tmpvar_32;
            c_2.xyz = (tmpvar_17.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_33;
            halfDir_33 = tmpvar_16;
            lowp vec4 c_34;
            lowp float spec_35;
            lowp float tmpvar_36;
            tmpvar_36 = max (0.0, dot (tmpvar_4, halfDir_33));
            mediump float tmpvar_37;
            tmpvar_37 = (pow (tmpvar_36, (_Shininess * 128.0)) * tmpvar_17.w);
            spec_35 = tmpvar_37;
            c_34.xyz = (((
              (tmpvar_17.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_35)) * atten_3);
            c_34.w = 1.0;
            c_2 = (c_2 + c_34);
            highp float tmpvar_38;
            tmpvar_38 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_38));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            highp vec3 lightColor0_29;
            lightColor0_29 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_30;
            lightColor1_30 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_31;
            lightColor2_31 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_32;
            lightColor3_32 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_33;
            lightAttenSq_33 = unity_4LightAtten0;
            highp vec3 col_34;
            highp vec4 ndotl_35;
            highp vec4 lengthSq_36;
            highp vec4 tmpvar_37;
            tmpvar_37 = (unity_4LightPosX0 - tmpvar_11.x);
            highp vec4 tmpvar_38;
            tmpvar_38 = (unity_4LightPosY0 - tmpvar_11.y);
            highp vec4 tmpvar_39;
            tmpvar_39 = (unity_4LightPosZ0 - tmpvar_11.z);
            lengthSq_36 = (tmpvar_37 * tmpvar_37);
            lengthSq_36 = (lengthSq_36 + (tmpvar_38 * tmpvar_38));
            lengthSq_36 = (lengthSq_36 + (tmpvar_39 * tmpvar_39));
            highp vec4 tmpvar_40;
            tmpvar_40 = max (lengthSq_36, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_36 = tmpvar_40;
            ndotl_35 = (tmpvar_37 * tmpvar_13.x);
            ndotl_35 = (ndotl_35 + (tmpvar_38 * tmpvar_13.y));
            ndotl_35 = (ndotl_35 + (tmpvar_39 * tmpvar_13.z));
            highp vec4 tmpvar_41;
            tmpvar_41 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_35 * inversesqrt(tmpvar_40)));
            ndotl_35 = tmpvar_41;
            highp vec4 tmpvar_42;
            tmpvar_42 = (tmpvar_41 * (1.0/((1.0 + 
              (tmpvar_40 * lightAttenSq_33)
            ))));
            col_34 = (lightColor0_29 * tmpvar_42.x);
            col_34 = (col_34 + (lightColor1_30 * tmpvar_42.y));
            col_34 = (col_34 + (lightColor2_31 * tmpvar_42.z));
            col_34 = (col_34 + (lightColor3_32 * tmpvar_42.w));
            tmpvar_7 = (tmpvar_7 + col_34);
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11.xyz)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_11);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            highp vec3 tmpvar_14;
            tmpvar_14.x = xlv_TEXCOORD1.w;
            tmpvar_14.y = xlv_TEXCOORD2.w;
            tmpvar_14.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_17;
            tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_14 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_14), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_3 = tmpvar_28;
            c_2.w = 0.0;
            lowp float tmpvar_29;
            tmpvar_29 = dot (tmpvar_11, tmpvar_18);
            worldN_1.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (tmpvar_12, tmpvar_18);
            worldN_1.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_13, tmpvar_18);
            worldN_1.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_1);
            worldN_1 = tmpvar_32;
            tmpvar_4 = tmpvar_32;
            c_2.xyz = (tmpvar_17.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_33;
            halfDir_33 = tmpvar_16;
            lowp vec4 c_34;
            lowp float spec_35;
            lowp float tmpvar_36;
            tmpvar_36 = max (0.0, dot (tmpvar_4, halfDir_33));
            mediump float tmpvar_37;
            tmpvar_37 = (pow (tmpvar_36, (_Shininess * 128.0)) * tmpvar_17.w);
            spec_35 = tmpvar_37;
            c_34.xyz = (((
              (tmpvar_17.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_35)) * atten_3);
            c_34.w = 1.0;
            c_2 = (c_2 + c_34);
            highp float tmpvar_38;
            tmpvar_38 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_38));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 shlight_1;
            lowp vec3 worldBinormal_2;
            lowp float tangentSign_3;
            lowp vec3 worldTangent_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            lowp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_4 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_3 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_4.zxy) - (tmpvar_13.zxy * worldTangent_4.yzx)) * tangentSign_3);
            worldBinormal_2 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_4.x;
            tmpvar_18.y = worldBinormal_2.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_4.y;
            tmpvar_19.y = worldBinormal_2.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_4.z;
            tmpvar_20.y = worldBinormal_2.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 tmpvar_21;
            tmpvar_21 = _WorldSpaceLightPos0.xyz;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = tmpvar_13;
            mediump vec4 normal_23;
            normal_23 = tmpvar_22;
            mediump vec3 res_24;
            mediump vec3 x_25;
            x_25.x = dot (unity_SHAr, normal_23);
            x_25.y = dot (unity_SHAg, normal_23);
            x_25.z = dot (unity_SHAb, normal_23);
            mediump vec3 x1_26;
            mediump vec4 tmpvar_27;
            tmpvar_27 = (normal_23.xyzz * normal_23.yzzx);
            x1_26.x = dot (unity_SHBr, tmpvar_27);
            x1_26.y = dot (unity_SHBg, tmpvar_27);
            x1_26.z = dot (unity_SHBb, tmpvar_27);
            res_24 = (x_25 + (x1_26 + (unity_SHC.xyz * 
              ((normal_23.x * normal_23.x) - (normal_23.y * normal_23.y))
            )));
            mediump vec3 tmpvar_28;
            tmpvar_28 = max (((1.055 * 
              pow (max (res_24, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_24 = tmpvar_28;
            shlight_1 = tmpvar_28;
            tmpvar_7 = shlight_1;
            highp vec3 lightColor0_29;
            lightColor0_29 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_30;
            lightColor1_30 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_31;
            lightColor2_31 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_32;
            lightColor3_32 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_33;
            lightAttenSq_33 = unity_4LightAtten0;
            highp vec3 col_34;
            highp vec4 ndotl_35;
            highp vec4 lengthSq_36;
            highp vec4 tmpvar_37;
            tmpvar_37 = (unity_4LightPosX0 - tmpvar_11.x);
            highp vec4 tmpvar_38;
            tmpvar_38 = (unity_4LightPosY0 - tmpvar_11.y);
            highp vec4 tmpvar_39;
            tmpvar_39 = (unity_4LightPosZ0 - tmpvar_11.z);
            lengthSq_36 = (tmpvar_37 * tmpvar_37);
            lengthSq_36 = (lengthSq_36 + (tmpvar_38 * tmpvar_38));
            lengthSq_36 = (lengthSq_36 + (tmpvar_39 * tmpvar_39));
            highp vec4 tmpvar_40;
            tmpvar_40 = max (lengthSq_36, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_36 = tmpvar_40;
            ndotl_35 = (tmpvar_37 * tmpvar_13.x);
            ndotl_35 = (ndotl_35 + (tmpvar_38 * tmpvar_13.y));
            ndotl_35 = (ndotl_35 + (tmpvar_39 * tmpvar_13.z));
            highp vec4 tmpvar_41;
            tmpvar_41 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_35 * inversesqrt(tmpvar_40)));
            ndotl_35 = tmpvar_41;
            highp vec4 tmpvar_42;
            tmpvar_42 = (tmpvar_41 * (1.0/((1.0 + 
              (tmpvar_40 * lightAttenSq_33)
            ))));
            col_34 = (lightColor0_29 * tmpvar_42.x);
            col_34 = (col_34 + (lightColor1_30 * tmpvar_42.y));
            col_34 = (col_34 + (lightColor2_31 * tmpvar_42.z));
            col_34 = (col_34 + (lightColor3_32 * tmpvar_42.w));
            tmpvar_7 = (tmpvar_7 + col_34);
            tmpvar_5.y = tangentSign_3;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = normalize((normalize(
              (_WorldSpaceCameraPos - tmpvar_11.xyz)
            ) + normalize(tmpvar_21)));
            xlv_TEXCOORD5 = tmpvar_7;
            xlv_TEXCOORD7 = (unity_WorldToShadow[0] * tmpvar_11);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform mediump float _Shininess;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying lowp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec4 c_2;
            lowp float atten_3;
            lowp vec3 tmpvar_4;
            lowp vec3 lightDir_5;
            lowp vec3 _unity_binormal_6;
            lowp vec3 _unity_normal_7;
            lowp vec3 _unity_tangent_8;
            highp vec3 tmpvar_9;
            tmpvar_9.x = xlv_TEXCOORD1.x;
            tmpvar_9.y = xlv_TEXCOORD2.x;
            tmpvar_9.z = xlv_TEXCOORD3.x;
            _unity_tangent_8 = tmpvar_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.z;
            tmpvar_10.y = xlv_TEXCOORD2.z;
            tmpvar_10.z = xlv_TEXCOORD3.z;
            _unity_normal_7 = tmpvar_10;
            _unity_binormal_6 = (((_unity_normal_7.yzx * _unity_tangent_8.zxy) - (_unity_normal_7.zxy * _unity_tangent_8.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_11;
            tmpvar_11.x = _unity_tangent_8.x;
            tmpvar_11.y = _unity_binormal_6.x;
            tmpvar_11.z = _unity_normal_7.x;
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_8.y;
            tmpvar_12.y = _unity_binormal_6.y;
            tmpvar_12.z = _unity_normal_7.y;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_8.z;
            tmpvar_13.y = _unity_binormal_6.z;
            tmpvar_13.z = _unity_normal_7.z;
            highp vec3 tmpvar_14;
            tmpvar_14.x = xlv_TEXCOORD1.w;
            tmpvar_14.y = xlv_TEXCOORD2.w;
            tmpvar_14.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_5 = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(xlv_TEXCOORD4);
            lowp vec4 tmpvar_17;
            tmpvar_17 = texture2D (_MainTex, xlv_TEXCOORD0);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_14 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_14), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD7.xy).x > xlv_TEXCOORD7.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_3 = tmpvar_28;
            c_2.w = 0.0;
            lowp float tmpvar_29;
            tmpvar_29 = dot (tmpvar_11, tmpvar_18);
            worldN_1.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (tmpvar_12, tmpvar_18);
            worldN_1.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_13, tmpvar_18);
            worldN_1.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_1);
            worldN_1 = tmpvar_32;
            tmpvar_4 = tmpvar_32;
            c_2.xyz = (tmpvar_17.xyz * xlv_TEXCOORD5);
            lowp vec3 halfDir_33;
            halfDir_33 = tmpvar_16;
            lowp vec4 c_34;
            lowp float spec_35;
            lowp float tmpvar_36;
            tmpvar_36 = max (0.0, dot (tmpvar_4, halfDir_33));
            mediump float tmpvar_37;
            tmpvar_37 = (pow (tmpvar_36, (_Shininess * 128.0)) * tmpvar_17.w);
            spec_35 = tmpvar_37;
            c_34.xyz = (((
              (tmpvar_17.xyz * _LightColor0.xyz)
             * 
              max (0.0, dot (tmpvar_4, lightDir_5))
            ) + (_LightColor0.xyz * spec_35)) * atten_3);
            c_34.w = 1.0;
            c_2 = (c_2 + c_34);
            highp float tmpvar_38;
            tmpvar_38 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_38));
            c_2.w = 1.0;
            gl_FragData[0] = c_2;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              u_xlat16_3.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              u_xlat16_3.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          float u_xlat19;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD6 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat18 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat19 = inversesqrt(u_xlat19);
              u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat18 = dot(_WorldSpaceLightPos0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * _WorldSpaceLightPos0.xyz;
              u_xlat3.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat18 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = u_xlat3.xyz * vec3(u_xlat18) + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              vs_TEXCOORD4.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_1 = u_xlat2.yzzx * u_xlat2.xyzz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_4.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat4 = u_xlat2.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat5 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat5 * u_xlat2.xxxx + u_xlat4;
              u_xlat2 = u_xlat0 * u_xlat2.zzzz + u_xlat4;
              u_xlat1 = u_xlat5 * u_xlat5 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + u_xlat3.xyz;
              vs_TEXCOORD5.xyz = u_xlat0.xyz;
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump float _Shininess;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD6;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump vec3 u_xlat16_9;
          mediump float u_xlat16_15;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9.x = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9.x + u_xlat16_3.x;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_9.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_9.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_9.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_9.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat16_9.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat18 = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * vs_TEXCOORD4.xyz;
              u_xlat16_9.y = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_9.xy = max(u_xlat16_9.xy, vec2(0.0, 0.0));
              u_xlat16_15 = log2(u_xlat16_9.y);
              u_xlat16_21 = _Shininess * 128.0;
              u_xlat16_15 = u_xlat16_15 * u_xlat16_21;
              u_xlat16_15 = exp2(u_xlat16_15);
              u_xlat10_0 = texture(_MainTex, vs_TEXCOORD0.xy);
              u_xlat16_15 = u_xlat10_0.w * u_xlat16_15;
              u_xlat16_4.xyz = vec3(u_xlat16_15) * _LightColor0.xyz;
              u_xlat16_5.xyz = u_xlat10_0.xyz * _LightColor0.xyz;
              u_xlat16_9.xyz = u_xlat16_5.xyz * u_xlat16_9.xxx + u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_9.xyz;
              u_xlat16_3.xyz = u_xlat10_0.xyz * vs_TEXCOORD5.xyz + u_xlat16_3.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD6;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
      }
      Program "fp"
      {
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
      }
      
    } // end phase
  }
  FallBack "Mobile/VertexLit"
}
