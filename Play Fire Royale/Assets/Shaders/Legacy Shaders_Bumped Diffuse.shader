Shader "Legacy Shaders/Bumped Diffuse"
{
  Properties
  {
    _Color ("Main Color", Color) = (1,1,1,1)
    _MainTex ("Base (RGB)", 2D) = "white" {}
    _BumpMap ("Normalmap", 2D) = "bump" {}
  }
  SubShader
  {
    Tags
    { 
      "RenderType" = "Opaque"
    }
    LOD 300
    Pass // ind: 1, name: FORWARD
    {
      Name "FORWARD"
      Tags
      { 
        "LIGHTMODE" = "FORWARDBASE"
        "RenderType" = "Opaque"
        "SHADOWSUPPORT" = "true"
      }
      LOD 300
      GpuProgramID 46116
      // m_ProgramMask = 6
      !!! *******************************************************************************************
      !!! Allow restore shader as UnityLab format - only available for DevX GameRecovery license type
      !!! *******************************************************************************************
      Program "vp"
      {
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_20;
            lowp vec4 c_21;
            lowp float diff_22;
            mediump float tmpvar_23;
            tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_22 = tmpvar_23;
            c_21.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_22);
            c_21.w = tmpvar_14.w;
            c_20.w = c_21.w;
            c_20.xyz = c_21.xyz;
            c_4.xyz = c_20.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_20;
            lowp vec4 c_21;
            lowp float diff_22;
            mediump float tmpvar_23;
            tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_22 = tmpvar_23;
            c_21.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_22);
            c_21.w = tmpvar_14.w;
            c_20.w = c_21.w;
            c_20.xyz = c_21.xyz;
            c_4.xyz = c_20.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_20;
            lowp vec4 c_21;
            lowp float diff_22;
            mediump float tmpvar_23;
            tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_22 = tmpvar_23;
            c_21.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_22);
            c_21.w = tmpvar_14.w;
            c_20.w = c_21.w;
            c_20.xyz = c_21.xyz;
            c_4.xyz = c_20.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              SV_Target0.xyz = u_xlat16_1.xxx * u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              SV_Target0.xyz = u_xlat16_1.xxx * u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              SV_Target0.xyz = u_xlat16_1.xxx * u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            mediump vec3 normal_17;
            normal_17 = tmpvar_9;
            mediump vec4 tmpvar_18;
            tmpvar_18.w = 1.0;
            tmpvar_18.xyz = normal_17;
            mediump vec3 res_19;
            mediump vec3 x_20;
            x_20.x = dot (unity_SHAr, tmpvar_18);
            x_20.y = dot (unity_SHAg, tmpvar_18);
            x_20.z = dot (unity_SHAb, tmpvar_18);
            mediump vec3 x1_21;
            mediump vec4 tmpvar_22;
            tmpvar_22 = (normal_17.xyzz * normal_17.yzzx);
            x1_21.x = dot (unity_SHBr, tmpvar_22);
            x1_21.y = dot (unity_SHBg, tmpvar_22);
            x1_21.z = dot (unity_SHBb, tmpvar_22);
            res_19 = (x_20 + (x1_21 + (unity_SHC.xyz * 
              ((normal_17.x * normal_17.x) - (normal_17.y * normal_17.y))
            )));
            mediump vec3 tmpvar_23;
            tmpvar_23 = max (((1.055 * 
              pow (max (res_19, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_19 = tmpvar_23;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), tmpvar_23);
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_20;
            lowp vec4 c_21;
            lowp float diff_22;
            mediump float tmpvar_23;
            tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_22 = tmpvar_23;
            c_21.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_22);
            c_21.w = tmpvar_14.w;
            c_20.w = c_21.w;
            c_20.xyz = (c_21.xyz + (tmpvar_14.xyz * xlv_TEXCOORD4));
            c_4.xyz = c_20.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            mediump vec3 normal_17;
            normal_17 = tmpvar_9;
            mediump vec4 tmpvar_18;
            tmpvar_18.w = 1.0;
            tmpvar_18.xyz = normal_17;
            mediump vec3 res_19;
            mediump vec3 x_20;
            x_20.x = dot (unity_SHAr, tmpvar_18);
            x_20.y = dot (unity_SHAg, tmpvar_18);
            x_20.z = dot (unity_SHAb, tmpvar_18);
            mediump vec3 x1_21;
            mediump vec4 tmpvar_22;
            tmpvar_22 = (normal_17.xyzz * normal_17.yzzx);
            x1_21.x = dot (unity_SHBr, tmpvar_22);
            x1_21.y = dot (unity_SHBg, tmpvar_22);
            x1_21.z = dot (unity_SHBb, tmpvar_22);
            res_19 = (x_20 + (x1_21 + (unity_SHC.xyz * 
              ((normal_17.x * normal_17.x) - (normal_17.y * normal_17.y))
            )));
            mediump vec3 tmpvar_23;
            tmpvar_23 = max (((1.055 * 
              pow (max (res_19, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_19 = tmpvar_23;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), tmpvar_23);
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_20;
            lowp vec4 c_21;
            lowp float diff_22;
            mediump float tmpvar_23;
            tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_22 = tmpvar_23;
            c_21.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_22);
            c_21.w = tmpvar_14.w;
            c_20.w = c_21.w;
            c_20.xyz = (c_21.xyz + (tmpvar_14.xyz * xlv_TEXCOORD4));
            c_4.xyz = c_20.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            mediump vec3 normal_17;
            normal_17 = tmpvar_9;
            mediump vec4 tmpvar_18;
            tmpvar_18.w = 1.0;
            tmpvar_18.xyz = normal_17;
            mediump vec3 res_19;
            mediump vec3 x_20;
            x_20.x = dot (unity_SHAr, tmpvar_18);
            x_20.y = dot (unity_SHAg, tmpvar_18);
            x_20.z = dot (unity_SHAb, tmpvar_18);
            mediump vec3 x1_21;
            mediump vec4 tmpvar_22;
            tmpvar_22 = (normal_17.xyzz * normal_17.yzzx);
            x1_21.x = dot (unity_SHBr, tmpvar_22);
            x1_21.y = dot (unity_SHBg, tmpvar_22);
            x1_21.z = dot (unity_SHBb, tmpvar_22);
            res_19 = (x_20 + (x1_21 + (unity_SHC.xyz * 
              ((normal_17.x * normal_17.x) - (normal_17.y * normal_17.y))
            )));
            mediump vec3 tmpvar_23;
            tmpvar_23 = max (((1.055 * 
              pow (max (res_19, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_19 = tmpvar_23;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), tmpvar_23);
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_20;
            lowp vec4 c_21;
            lowp float diff_22;
            mediump float tmpvar_23;
            tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_22 = tmpvar_23;
            c_21.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_22);
            c_21.w = tmpvar_14.w;
            c_20.w = c_21.w;
            c_20.xyz = (c_21.xyz + (tmpvar_14.xyz * xlv_TEXCOORD4));
            c_4.xyz = c_20.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat2 = vec4(u_xlat18) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat1.z;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzwx * u_xlat2.xywz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD4.xyz = u_xlat1.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * vs_TEXCOORD4.xyz;
              SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat2 = vec4(u_xlat18) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat1.z;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzwx * u_xlat2.xywz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD4.xyz = u_xlat1.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * vs_TEXCOORD4.xyz;
              SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat2 = vec4(u_xlat18) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat1.z;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzwx * u_xlat2.xywz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD4.xyz = u_xlat1.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * vs_TEXCOORD4.xyz;
              SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 tmpvar_20;
            lowp vec4 tmpvar_21;
            tmpvar_21 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_20 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_21.w) * tmpvar_21.xyz), unity_DynamicLightmap_HDR.yyy);
            lowp vec4 c_22;
            lowp vec4 c_23;
            lowp float diff_24;
            mediump float tmpvar_25;
            tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_24 = tmpvar_25;
            c_23.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_24);
            c_23.w = tmpvar_14.w;
            c_22.w = c_23.w;
            c_22.xyz = (c_23.xyz + (tmpvar_14.xyz * tmpvar_20));
            c_4.xyz = c_22.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 tmpvar_20;
            lowp vec4 tmpvar_21;
            tmpvar_21 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_20 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_21.w) * tmpvar_21.xyz), unity_DynamicLightmap_HDR.yyy);
            lowp vec4 c_22;
            lowp vec4 c_23;
            lowp float diff_24;
            mediump float tmpvar_25;
            tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_24 = tmpvar_25;
            c_23.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_24);
            c_23.w = tmpvar_14.w;
            c_22.w = c_23.w;
            c_22.xyz = (c_23.xyz + (tmpvar_14.xyz * tmpvar_20));
            c_4.xyz = c_22.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 tmpvar_20;
            lowp vec4 tmpvar_21;
            tmpvar_21 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_20 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_21.w) * tmpvar_21.xyz), unity_DynamicLightmap_HDR.yyy);
            lowp vec4 c_22;
            lowp vec4 c_23;
            lowp float diff_24;
            mediump float tmpvar_25;
            tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_24 = tmpvar_25;
            c_23.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_24);
            c_23.w = tmpvar_14.w;
            c_22.w = c_23.w;
            c_22.xyz = (c_23.xyz + (tmpvar_14.xyz * tmpvar_20));
            c_4.xyz = c_22.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_0.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_0.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_0.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 normalWorld_20;
            normalWorld_20 = tmpvar_5;
            mediump vec4 realtimeDirTex_21;
            mediump vec3 tmpvar_22;
            lowp vec4 tmpvar_23;
            tmpvar_23 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_24;
            tmpvar_24 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_21 = tmpvar_24;
            lowp vec4 dirTex_25;
            dirTex_25 = realtimeDirTex_21;
            lowp vec3 y_26;
            y_26 = (dirTex_25.xyz - 0.5);
            lowp float tmpvar_27;
            tmpvar_27 = max (0.0001, dirTex_25.w);
            tmpvar_22 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_23.w) * tmpvar_23.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_20, y_26)
             + 0.5)) / tmpvar_27);
            lowp vec4 c_28;
            lowp vec4 c_29;
            lowp float diff_30;
            mediump float tmpvar_31;
            tmpvar_31 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_30 = tmpvar_31;
            c_29.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_30);
            c_29.w = tmpvar_14.w;
            c_28.w = c_29.w;
            c_28.xyz = (c_29.xyz + (tmpvar_14.xyz * tmpvar_22));
            c_4.xyz = c_28.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 normalWorld_20;
            normalWorld_20 = tmpvar_5;
            mediump vec4 realtimeDirTex_21;
            mediump vec3 tmpvar_22;
            lowp vec4 tmpvar_23;
            tmpvar_23 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_24;
            tmpvar_24 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_21 = tmpvar_24;
            lowp vec4 dirTex_25;
            dirTex_25 = realtimeDirTex_21;
            lowp vec3 y_26;
            y_26 = (dirTex_25.xyz - 0.5);
            lowp float tmpvar_27;
            tmpvar_27 = max (0.0001, dirTex_25.w);
            tmpvar_22 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_23.w) * tmpvar_23.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_20, y_26)
             + 0.5)) / tmpvar_27);
            lowp vec4 c_28;
            lowp vec4 c_29;
            lowp float diff_30;
            mediump float tmpvar_31;
            tmpvar_31 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_30 = tmpvar_31;
            c_29.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_30);
            c_29.w = tmpvar_14.w;
            c_28.w = c_29.w;
            c_28.xyz = (c_29.xyz + (tmpvar_14.xyz * tmpvar_22));
            c_4.xyz = c_28.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 normalWorld_20;
            normalWorld_20 = tmpvar_5;
            mediump vec4 realtimeDirTex_21;
            mediump vec3 tmpvar_22;
            lowp vec4 tmpvar_23;
            tmpvar_23 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_24;
            tmpvar_24 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_21 = tmpvar_24;
            lowp vec4 dirTex_25;
            dirTex_25 = realtimeDirTex_21;
            lowp vec3 y_26;
            y_26 = (dirTex_25.xyz - 0.5);
            lowp float tmpvar_27;
            tmpvar_27 = max (0.0001, dirTex_25.w);
            tmpvar_22 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_23.w) * tmpvar_23.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_20, y_26)
             + 0.5)) / tmpvar_27);
            lowp vec4 c_28;
            lowp vec4 c_29;
            lowp float diff_30;
            mediump float tmpvar_31;
            tmpvar_31 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_30 = tmpvar_31;
            c_29.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_30);
            c_29.w = tmpvar_14.w;
            c_28.w = c_29.w;
            c_28.xyz = (c_29.xyz + (tmpvar_14.xyz * tmpvar_22));
            c_4.xyz = c_28.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          lowp vec3 u_xlat10_4;
          mediump vec3 u_xlat16_8;
          mediump float u_xlat16_15;
          mediump float u_xlat16_16;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_3.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_3.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_15 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_16 = dot(u_xlat16_0.xyz, u_xlat16_3.xyz);
              u_xlat16_3.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_3.x = max(u_xlat16_3.x, 0.0);
              u_xlat16_16 = u_xlat16_16 + 0.5;
              u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz / vec3(u_xlat16_15);
              u_xlat10_4.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_4.xyz = u_xlat10_4.xyz * _Color.xyz;
              u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              u_xlat16_8.xyz = u_xlat16_4.xyz * _LightColor0.xyz;
              SV_Target0.xyz = u_xlat16_8.xyz * u_xlat16_3.xxx + u_xlat16_1.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          lowp vec3 u_xlat10_4;
          mediump vec3 u_xlat16_8;
          mediump float u_xlat16_15;
          mediump float u_xlat16_16;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_3.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_3.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_15 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_16 = dot(u_xlat16_0.xyz, u_xlat16_3.xyz);
              u_xlat16_3.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_3.x = max(u_xlat16_3.x, 0.0);
              u_xlat16_16 = u_xlat16_16 + 0.5;
              u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz / vec3(u_xlat16_15);
              u_xlat10_4.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_4.xyz = u_xlat10_4.xyz * _Color.xyz;
              u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              u_xlat16_8.xyz = u_xlat16_4.xyz * _LightColor0.xyz;
              SV_Target0.xyz = u_xlat16_8.xyz * u_xlat16_3.xxx + u_xlat16_1.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          lowp vec3 u_xlat10_4;
          mediump vec3 u_xlat16_8;
          mediump float u_xlat16_15;
          mediump float u_xlat16_16;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_3.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_3.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_15 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_16 = dot(u_xlat16_0.xyz, u_xlat16_3.xyz);
              u_xlat16_3.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_3.x = max(u_xlat16_3.x, 0.0);
              u_xlat16_16 = u_xlat16_16 + 0.5;
              u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz / vec3(u_xlat16_15);
              u_xlat10_4.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_4.xyz = u_xlat10_4.xyz * _Color.xyz;
              u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              u_xlat16_8.xyz = u_xlat16_4.xyz * _LightColor0.xyz;
              SV_Target0.xyz = u_xlat16_8.xyz * u_xlat16_3.xxx + u_xlat16_1.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_8);
            xlv_TEXCOORD7 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_33;
            tmpvar_33 = (tmpvar_2 * tmpvar_1);
            tmpvar_2 = tmpvar_33;
            lowp vec4 c_34;
            lowp vec4 c_35;
            lowp float diff_36;
            mediump float tmpvar_37;
            tmpvar_37 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_36 = tmpvar_37;
            c_35.xyz = ((tmpvar_17.xyz * tmpvar_33) * diff_36);
            c_35.w = tmpvar_17.w;
            c_34.w = c_35.w;
            c_34.xyz = c_35.xyz;
            c_5.xyz = c_34.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_8);
            xlv_TEXCOORD7 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_33;
            tmpvar_33 = (tmpvar_2 * tmpvar_1);
            tmpvar_2 = tmpvar_33;
            lowp vec4 c_34;
            lowp vec4 c_35;
            lowp float diff_36;
            mediump float tmpvar_37;
            tmpvar_37 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_36 = tmpvar_37;
            c_35.xyz = ((tmpvar_17.xyz * tmpvar_33) * diff_36);
            c_35.w = tmpvar_17.w;
            c_34.w = c_35.w;
            c_34.xyz = c_35.xyz;
            c_5.xyz = c_34.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_8);
            xlv_TEXCOORD7 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_33;
            tmpvar_33 = (tmpvar_2 * tmpvar_1);
            tmpvar_2 = tmpvar_33;
            lowp vec4 c_34;
            lowp vec4 c_35;
            lowp float diff_36;
            mediump float tmpvar_37;
            tmpvar_37 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_36 = tmpvar_37;
            c_35.xyz = ((tmpvar_17.xyz * tmpvar_33) * diff_36);
            c_35.w = tmpvar_17.w;
            c_34.w = c_35.w;
            c_34.xyz = c_35.xyz;
            c_5.xyz = c_34.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              SV_Target0.xyz = vec3(u_xlat16_21) * u_xlat16_3.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              SV_Target0.xyz = vec3(u_xlat16_21) * u_xlat16_3.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              SV_Target0.xyz = vec3(u_xlat16_21) * u_xlat16_3.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            mediump vec3 normal_18;
            normal_18 = tmpvar_10;
            mediump vec3 x1_19;
            mediump vec4 tmpvar_20;
            tmpvar_20 = (normal_18.xyzz * normal_18.yzzx);
            x1_19.x = dot (unity_SHBr, tmpvar_20);
            x1_19.y = dot (unity_SHBg, tmpvar_20);
            x1_19.z = dot (unity_SHBb, tmpvar_20);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = (x1_19 + (unity_SHC.xyz * (
              (normal_18.x * normal_18.x)
             - 
              (normal_18.y * normal_18.y)
            )));
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_8);
            xlv_TEXCOORD7 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_33;
            normalWorld_33 = tmpvar_7;
            mediump vec3 tmpvar_34;
            tmpvar_34 = (tmpvar_2 * tmpvar_1);
            mediump vec4 tmpvar_35;
            tmpvar_35.w = 1.0;
            tmpvar_35.xyz = normalWorld_33;
            mediump vec3 x_36;
            x_36.x = dot (unity_SHAr, tmpvar_35);
            x_36.y = dot (unity_SHAg, tmpvar_35);
            x_36.z = dot (unity_SHAb, tmpvar_35);
            mediump vec3 tmpvar_37;
            tmpvar_37 = max (((1.055 * 
              pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_36)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            tmpvar_2 = tmpvar_34;
            lowp vec4 c_38;
            lowp vec4 c_39;
            lowp float diff_40;
            mediump float tmpvar_41;
            tmpvar_41 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_40 = tmpvar_41;
            c_39.xyz = ((tmpvar_17.xyz * tmpvar_34) * diff_40);
            c_39.w = tmpvar_17.w;
            c_38.w = c_39.w;
            c_38.xyz = (c_39.xyz + (tmpvar_17.xyz * tmpvar_37));
            c_5.xyz = c_38.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            mediump vec3 normal_18;
            normal_18 = tmpvar_10;
            mediump vec3 x1_19;
            mediump vec4 tmpvar_20;
            tmpvar_20 = (normal_18.xyzz * normal_18.yzzx);
            x1_19.x = dot (unity_SHBr, tmpvar_20);
            x1_19.y = dot (unity_SHBg, tmpvar_20);
            x1_19.z = dot (unity_SHBb, tmpvar_20);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = (x1_19 + (unity_SHC.xyz * (
              (normal_18.x * normal_18.x)
             - 
              (normal_18.y * normal_18.y)
            )));
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_8);
            xlv_TEXCOORD7 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_33;
            normalWorld_33 = tmpvar_7;
            mediump vec3 tmpvar_34;
            tmpvar_34 = (tmpvar_2 * tmpvar_1);
            mediump vec4 tmpvar_35;
            tmpvar_35.w = 1.0;
            tmpvar_35.xyz = normalWorld_33;
            mediump vec3 x_36;
            x_36.x = dot (unity_SHAr, tmpvar_35);
            x_36.y = dot (unity_SHAg, tmpvar_35);
            x_36.z = dot (unity_SHAb, tmpvar_35);
            mediump vec3 tmpvar_37;
            tmpvar_37 = max (((1.055 * 
              pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_36)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            tmpvar_2 = tmpvar_34;
            lowp vec4 c_38;
            lowp vec4 c_39;
            lowp float diff_40;
            mediump float tmpvar_41;
            tmpvar_41 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_40 = tmpvar_41;
            c_39.xyz = ((tmpvar_17.xyz * tmpvar_34) * diff_40);
            c_39.w = tmpvar_17.w;
            c_38.w = c_39.w;
            c_38.xyz = (c_39.xyz + (tmpvar_17.xyz * tmpvar_37));
            c_5.xyz = c_38.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            mediump vec3 normal_18;
            normal_18 = tmpvar_10;
            mediump vec3 x1_19;
            mediump vec4 tmpvar_20;
            tmpvar_20 = (normal_18.xyzz * normal_18.yzzx);
            x1_19.x = dot (unity_SHBr, tmpvar_20);
            x1_19.y = dot (unity_SHBg, tmpvar_20);
            x1_19.z = dot (unity_SHBb, tmpvar_20);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = (x1_19 + (unity_SHC.xyz * (
              (normal_18.x * normal_18.x)
             - 
              (normal_18.y * normal_18.y)
            )));
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_8);
            xlv_TEXCOORD7 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_33;
            normalWorld_33 = tmpvar_7;
            mediump vec3 tmpvar_34;
            tmpvar_34 = (tmpvar_2 * tmpvar_1);
            mediump vec4 tmpvar_35;
            tmpvar_35.w = 1.0;
            tmpvar_35.xyz = normalWorld_33;
            mediump vec3 x_36;
            x_36.x = dot (unity_SHAr, tmpvar_35);
            x_36.y = dot (unity_SHAg, tmpvar_35);
            x_36.z = dot (unity_SHAb, tmpvar_35);
            mediump vec3 tmpvar_37;
            tmpvar_37 = max (((1.055 * 
              pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_36)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            tmpvar_2 = tmpvar_34;
            lowp vec4 c_38;
            lowp vec4 c_39;
            lowp float diff_40;
            mediump float tmpvar_41;
            tmpvar_41 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_40 = tmpvar_41;
            c_39.xyz = ((tmpvar_17.xyz * tmpvar_34) * diff_40);
            c_39.w = tmpvar_17.w;
            c_38.w = c_39.w;
            c_38.xyz = (c_39.xyz + (tmpvar_17.xyz * tmpvar_37));
            c_5.xyz = c_38.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump float u_xlat16_4;
          mediump vec3 u_xlat16_5;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2 = u_xlat0.xxxx * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
              u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.z = u_xlat2.w;
              u_xlat16_4 = u_xlat2.y * u_xlat2.y;
              u_xlat16_4 = u_xlat2.x * u_xlat2.x + (-u_xlat16_4);
              u_xlat16_0 = u_xlat2.ywzx * u_xlat2;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_4) + u_xlat16_5.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec4 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec3 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat1.w = 1.0;
              u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
              u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
              u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
              u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_1.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump float u_xlat16_4;
          mediump vec3 u_xlat16_5;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2 = u_xlat0.xxxx * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
              u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.z = u_xlat2.w;
              u_xlat16_4 = u_xlat2.y * u_xlat2.y;
              u_xlat16_4 = u_xlat2.x * u_xlat2.x + (-u_xlat16_4);
              u_xlat16_0 = u_xlat2.ywzx * u_xlat2;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_4) + u_xlat16_5.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec4 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec3 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat1.w = 1.0;
              u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
              u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
              u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
              u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_1.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump float u_xlat16_4;
          mediump vec3 u_xlat16_5;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2 = u_xlat0.xxxx * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
              u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.z = u_xlat2.w;
              u_xlat16_4 = u_xlat2.y * u_xlat2.y;
              u_xlat16_4 = u_xlat2.x * u_xlat2.x + (-u_xlat16_4);
              u_xlat16_0 = u_xlat2.ywzx * u_xlat2;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_4) + u_xlat16_5.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec4 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec3 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat1.w = 1.0;
              u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
              u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
              u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
              u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_1.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_8);
            xlv_TEXCOORD7 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_33;
            mediump vec3 tmpvar_34;
            tmpvar_33 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_35;
            tmpvar_35 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_34 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_35.w) * tmpvar_35.xyz), unity_DynamicLightmap_HDR.yyy);
            tmpvar_2 = tmpvar_33;
            lowp vec4 c_36;
            lowp vec4 c_37;
            lowp float diff_38;
            mediump float tmpvar_39;
            tmpvar_39 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_38 = tmpvar_39;
            c_37.xyz = ((tmpvar_17.xyz * tmpvar_33) * diff_38);
            c_37.w = tmpvar_17.w;
            c_36.w = c_37.w;
            c_36.xyz = (c_37.xyz + (tmpvar_17.xyz * tmpvar_34));
            c_5.xyz = c_36.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_8);
            xlv_TEXCOORD7 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_33;
            mediump vec3 tmpvar_34;
            tmpvar_33 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_35;
            tmpvar_35 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_34 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_35.w) * tmpvar_35.xyz), unity_DynamicLightmap_HDR.yyy);
            tmpvar_2 = tmpvar_33;
            lowp vec4 c_36;
            lowp vec4 c_37;
            lowp float diff_38;
            mediump float tmpvar_39;
            tmpvar_39 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_38 = tmpvar_39;
            c_37.xyz = ((tmpvar_17.xyz * tmpvar_33) * diff_38);
            c_37.w = tmpvar_17.w;
            c_36.w = c_37.w;
            c_36.xyz = (c_37.xyz + (tmpvar_17.xyz * tmpvar_34));
            c_5.xyz = c_36.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_8);
            xlv_TEXCOORD7 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_33;
            mediump vec3 tmpvar_34;
            tmpvar_33 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_35;
            tmpvar_35 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_34 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_35.w) * tmpvar_35.xyz), unity_DynamicLightmap_HDR.yyy);
            tmpvar_2 = tmpvar_33;
            lowp vec4 c_36;
            lowp vec4 c_37;
            lowp float diff_38;
            mediump float tmpvar_39;
            tmpvar_39 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_38 = tmpvar_39;
            c_37.xyz = ((tmpvar_17.xyz * tmpvar_33) * diff_38);
            c_37.w = tmpvar_17.w;
            c_36.w = c_37.w;
            c_36.xyz = (c_37.xyz + (tmpvar_17.xyz * tmpvar_34));
            c_5.xyz = c_36.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat16_1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat16_1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat16_1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_8);
            xlv_TEXCOORD7 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_33;
            normalWorld_33 = tmpvar_7;
            mediump vec4 realtimeDirTex_34;
            mediump vec3 tmpvar_35;
            mediump vec3 tmpvar_36;
            tmpvar_35 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_37;
            tmpvar_37 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_38;
            tmpvar_38 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_34 = tmpvar_38;
            lowp vec4 dirTex_39;
            dirTex_39 = realtimeDirTex_34;
            lowp vec3 y_40;
            y_40 = (dirTex_39.xyz - 0.5);
            lowp float tmpvar_41;
            tmpvar_41 = max (0.0001, dirTex_39.w);
            tmpvar_36 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_37.w) * tmpvar_37.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_33, y_40)
             + 0.5)) / tmpvar_41);
            tmpvar_2 = tmpvar_35;
            lowp vec4 c_42;
            lowp vec4 c_43;
            lowp float diff_44;
            mediump float tmpvar_45;
            tmpvar_45 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_44 = tmpvar_45;
            c_43.xyz = ((tmpvar_17.xyz * tmpvar_35) * diff_44);
            c_43.w = tmpvar_17.w;
            c_42.w = c_43.w;
            c_42.xyz = (c_43.xyz + (tmpvar_17.xyz * tmpvar_36));
            c_5.xyz = c_42.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_8);
            xlv_TEXCOORD7 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_33;
            normalWorld_33 = tmpvar_7;
            mediump vec4 realtimeDirTex_34;
            mediump vec3 tmpvar_35;
            mediump vec3 tmpvar_36;
            tmpvar_35 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_37;
            tmpvar_37 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_38;
            tmpvar_38 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_34 = tmpvar_38;
            lowp vec4 dirTex_39;
            dirTex_39 = realtimeDirTex_34;
            lowp vec3 y_40;
            y_40 = (dirTex_39.xyz - 0.5);
            lowp float tmpvar_41;
            tmpvar_41 = max (0.0001, dirTex_39.w);
            tmpvar_36 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_37.w) * tmpvar_37.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_33, y_40)
             + 0.5)) / tmpvar_41);
            tmpvar_2 = tmpvar_35;
            lowp vec4 c_42;
            lowp vec4 c_43;
            lowp float diff_44;
            mediump float tmpvar_45;
            tmpvar_45 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_44 = tmpvar_45;
            c_43.xyz = ((tmpvar_17.xyz * tmpvar_35) * diff_44);
            c_43.w = tmpvar_17.w;
            c_42.w = c_43.w;
            c_42.xyz = (c_43.xyz + (tmpvar_17.xyz * tmpvar_36));
            c_5.xyz = c_42.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_8);
            xlv_TEXCOORD7 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_33;
            normalWorld_33 = tmpvar_7;
            mediump vec4 realtimeDirTex_34;
            mediump vec3 tmpvar_35;
            mediump vec3 tmpvar_36;
            tmpvar_35 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_37;
            tmpvar_37 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_38;
            tmpvar_38 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_34 = tmpvar_38;
            lowp vec4 dirTex_39;
            dirTex_39 = realtimeDirTex_34;
            lowp vec3 y_40;
            y_40 = (dirTex_39.xyz - 0.5);
            lowp float tmpvar_41;
            tmpvar_41 = max (0.0001, dirTex_39.w);
            tmpvar_36 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_37.w) * tmpvar_37.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_33, y_40)
             + 0.5)) / tmpvar_41);
            tmpvar_2 = tmpvar_35;
            lowp vec4 c_42;
            lowp vec4 c_43;
            lowp float diff_44;
            mediump float tmpvar_45;
            tmpvar_45 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_44 = tmpvar_45;
            c_43.xyz = ((tmpvar_17.xyz * tmpvar_35) * diff_44);
            c_43.w = tmpvar_17.w;
            c_42.w = c_43.w;
            c_42.xyz = (c_43.xyz + (tmpvar_17.xyz * tmpvar_36));
            c_5.xyz = c_42.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          mediump vec3 u_xlat16_6;
          vec3 u_xlat7;
          lowp float u_xlat10_7;
          mediump float u_xlat16_10;
          float u_xlat21;
          mediump float u_xlat16_21;
          mediump float u_xlat16_24;
          mediump float u_xlat16_25;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = sqrt(u_xlat21);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat7.x = (-u_xlat0.x) + u_xlat21;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat7.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat7.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat7.xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat7.xyz;
              u_xlat7.xyz = u_xlat7.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat7.xy,u_xlat7.z);
              u_xlat10_7 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_7 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_10 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_10 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_24 = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(u_xlat16_24);
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_5.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_6.x = dot(vs_TEXCOORD1.xyz, u_xlat16_5.xyz);
              u_xlat16_6.y = dot(vs_TEXCOORD2.xyz, u_xlat16_5.xyz);
              u_xlat16_6.z = dot(vs_TEXCOORD3.xyz, u_xlat16_5.xyz);
              u_xlat16_21 = dot(u_xlat16_6.xyz, u_xlat16_6.xyz);
              u_xlat16_21 = inversesqrt(u_xlat16_21);
              u_xlat16_1.xyz = vec3(u_xlat16_21) * u_xlat16_6.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_5.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_21 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_24 = dot(u_xlat16_1.xyz, u_xlat16_5.xyz);
              u_xlat16_25 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_25 = max(u_xlat16_25, 0.0);
              u_xlat16_24 = u_xlat16_24 + 0.5;
              u_xlat16_4.xyz = vec3(u_xlat16_24) * u_xlat16_4.xyz;
              u_xlat16_1.xyz = u_xlat16_4.xyz / vec3(u_xlat16_21);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_25) + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          mediump vec3 u_xlat16_6;
          vec3 u_xlat7;
          lowp float u_xlat10_7;
          mediump float u_xlat16_10;
          float u_xlat21;
          mediump float u_xlat16_21;
          mediump float u_xlat16_24;
          mediump float u_xlat16_25;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = sqrt(u_xlat21);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat7.x = (-u_xlat0.x) + u_xlat21;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat7.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat7.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat7.xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat7.xyz;
              u_xlat7.xyz = u_xlat7.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat7.xy,u_xlat7.z);
              u_xlat10_7 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_7 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_10 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_10 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_24 = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(u_xlat16_24);
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_5.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_6.x = dot(vs_TEXCOORD1.xyz, u_xlat16_5.xyz);
              u_xlat16_6.y = dot(vs_TEXCOORD2.xyz, u_xlat16_5.xyz);
              u_xlat16_6.z = dot(vs_TEXCOORD3.xyz, u_xlat16_5.xyz);
              u_xlat16_21 = dot(u_xlat16_6.xyz, u_xlat16_6.xyz);
              u_xlat16_21 = inversesqrt(u_xlat16_21);
              u_xlat16_1.xyz = vec3(u_xlat16_21) * u_xlat16_6.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_5.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_21 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_24 = dot(u_xlat16_1.xyz, u_xlat16_5.xyz);
              u_xlat16_25 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_25 = max(u_xlat16_25, 0.0);
              u_xlat16_24 = u_xlat16_24 + 0.5;
              u_xlat16_4.xyz = vec3(u_xlat16_24) * u_xlat16_4.xyz;
              u_xlat16_1.xyz = u_xlat16_4.xyz / vec3(u_xlat16_21);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_25) + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          mediump vec3 u_xlat16_6;
          vec3 u_xlat7;
          lowp float u_xlat10_7;
          mediump float u_xlat16_10;
          float u_xlat21;
          mediump float u_xlat16_21;
          mediump float u_xlat16_24;
          mediump float u_xlat16_25;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = sqrt(u_xlat21);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat7.x = (-u_xlat0.x) + u_xlat21;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat7.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat7.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat7.xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat7.xyz;
              u_xlat7.xyz = u_xlat7.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat7.xy,u_xlat7.z);
              u_xlat10_7 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_7 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_10 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_10 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_24 = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(u_xlat16_24);
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_5.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_6.x = dot(vs_TEXCOORD1.xyz, u_xlat16_5.xyz);
              u_xlat16_6.y = dot(vs_TEXCOORD2.xyz, u_xlat16_5.xyz);
              u_xlat16_6.z = dot(vs_TEXCOORD3.xyz, u_xlat16_5.xyz);
              u_xlat16_21 = dot(u_xlat16_6.xyz, u_xlat16_6.xyz);
              u_xlat16_21 = inversesqrt(u_xlat16_21);
              u_xlat16_1.xyz = vec3(u_xlat16_21) * u_xlat16_6.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_5.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_21 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_24 = dot(u_xlat16_1.xyz, u_xlat16_5.xyz);
              u_xlat16_25 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_25 = max(u_xlat16_25, 0.0);
              u_xlat16_24 = u_xlat16_24 + 0.5;
              u_xlat16_4.xyz = vec3(u_xlat16_24) * u_xlat16_4.xyz;
              u_xlat16_1.xyz = u_xlat16_4.xyz / vec3(u_xlat16_21);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_25) + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_20;
            lowp vec4 c_21;
            lowp float diff_22;
            mediump float tmpvar_23;
            tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_22 = tmpvar_23;
            c_21.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_22);
            c_21.w = tmpvar_14.w;
            c_20.w = c_21.w;
            c_20.xyz = c_21.xyz;
            c_4.xyz = c_20.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_20;
            lowp vec4 c_21;
            lowp float diff_22;
            mediump float tmpvar_23;
            tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_22 = tmpvar_23;
            c_21.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_22);
            c_21.w = tmpvar_14.w;
            c_20.w = c_21.w;
            c_20.xyz = c_21.xyz;
            c_4.xyz = c_20.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_20;
            lowp vec4 c_21;
            lowp float diff_22;
            mediump float tmpvar_23;
            tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_22 = tmpvar_23;
            c_21.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_22);
            c_21.w = tmpvar_14.w;
            c_20.w = c_21.w;
            c_20.xyz = c_21.xyz;
            c_4.xyz = c_20.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              SV_Target0.xyz = u_xlat16_1.xxx * u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              SV_Target0.xyz = u_xlat16_1.xxx * u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              SV_Target0.xyz = u_xlat16_1.xxx * u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            mediump vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            highp vec3 lightColor0_18;
            lightColor0_18 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_19;
            lightColor1_19 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_20;
            lightColor2_20 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_21;
            lightColor3_21 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_22;
            lightAttenSq_22 = unity_4LightAtten0;
            highp vec3 col_23;
            highp vec4 ndotl_24;
            highp vec4 lengthSq_25;
            highp vec4 tmpvar_26;
            tmpvar_26 = (unity_4LightPosX0 - tmpvar_8.x);
            highp vec4 tmpvar_27;
            tmpvar_27 = (unity_4LightPosY0 - tmpvar_8.y);
            highp vec4 tmpvar_28;
            tmpvar_28 = (unity_4LightPosZ0 - tmpvar_8.z);
            lengthSq_25 = (tmpvar_26 * tmpvar_26);
            lengthSq_25 = (lengthSq_25 + (tmpvar_27 * tmpvar_27));
            lengthSq_25 = (lengthSq_25 + (tmpvar_28 * tmpvar_28));
            highp vec4 tmpvar_29;
            tmpvar_29 = max (lengthSq_25, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_25 = tmpvar_29;
            ndotl_24 = (tmpvar_26 * tmpvar_10.x);
            ndotl_24 = (ndotl_24 + (tmpvar_27 * tmpvar_10.y));
            ndotl_24 = (ndotl_24 + (tmpvar_28 * tmpvar_10.z));
            highp vec4 tmpvar_30;
            tmpvar_30 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_24 * inversesqrt(tmpvar_29)));
            ndotl_24 = tmpvar_30;
            highp vec4 tmpvar_31;
            tmpvar_31 = (tmpvar_30 * (1.0/((1.0 + 
              (tmpvar_29 * lightAttenSq_22)
            ))));
            col_23 = (lightColor0_18 * tmpvar_31.x);
            col_23 = (col_23 + (lightColor1_19 * tmpvar_31.y));
            col_23 = (col_23 + (lightColor2_20 * tmpvar_31.z));
            col_23 = (col_23 + (lightColor3_21 * tmpvar_31.w));
            tmpvar_5 = col_23;
            mediump vec3 normal_32;
            normal_32 = tmpvar_10;
            mediump vec3 ambient_33;
            mediump vec4 tmpvar_34;
            tmpvar_34.w = 1.0;
            tmpvar_34.xyz = normal_32;
            mediump vec3 res_35;
            mediump vec3 x_36;
            x_36.x = dot (unity_SHAr, tmpvar_34);
            x_36.y = dot (unity_SHAg, tmpvar_34);
            x_36.z = dot (unity_SHAb, tmpvar_34);
            mediump vec3 x1_37;
            mediump vec4 tmpvar_38;
            tmpvar_38 = (normal_32.xyzz * normal_32.yzzx);
            x1_37.x = dot (unity_SHBr, tmpvar_38);
            x1_37.y = dot (unity_SHBg, tmpvar_38);
            x1_37.z = dot (unity_SHBb, tmpvar_38);
            res_35 = (x_36 + (x1_37 + (unity_SHC.xyz * 
              ((normal_32.x * normal_32.x) - (normal_32.y * normal_32.y))
            )));
            mediump vec3 tmpvar_39;
            tmpvar_39 = max (((1.055 * 
              pow (max (res_35, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_35 = tmpvar_39;
            ambient_33 = (tmpvar_5 + max (vec3(0.0, 0.0, 0.0), tmpvar_39));
            tmpvar_5 = ambient_33;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = ambient_33;
            xlv_TEXCOORD6 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_20;
            lowp vec4 c_21;
            lowp float diff_22;
            mediump float tmpvar_23;
            tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_22 = tmpvar_23;
            c_21.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_22);
            c_21.w = tmpvar_14.w;
            c_20.w = c_21.w;
            c_20.xyz = (c_21.xyz + (tmpvar_14.xyz * xlv_TEXCOORD4));
            c_4.xyz = c_20.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            mediump vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            highp vec3 lightColor0_18;
            lightColor0_18 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_19;
            lightColor1_19 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_20;
            lightColor2_20 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_21;
            lightColor3_21 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_22;
            lightAttenSq_22 = unity_4LightAtten0;
            highp vec3 col_23;
            highp vec4 ndotl_24;
            highp vec4 lengthSq_25;
            highp vec4 tmpvar_26;
            tmpvar_26 = (unity_4LightPosX0 - tmpvar_8.x);
            highp vec4 tmpvar_27;
            tmpvar_27 = (unity_4LightPosY0 - tmpvar_8.y);
            highp vec4 tmpvar_28;
            tmpvar_28 = (unity_4LightPosZ0 - tmpvar_8.z);
            lengthSq_25 = (tmpvar_26 * tmpvar_26);
            lengthSq_25 = (lengthSq_25 + (tmpvar_27 * tmpvar_27));
            lengthSq_25 = (lengthSq_25 + (tmpvar_28 * tmpvar_28));
            highp vec4 tmpvar_29;
            tmpvar_29 = max (lengthSq_25, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_25 = tmpvar_29;
            ndotl_24 = (tmpvar_26 * tmpvar_10.x);
            ndotl_24 = (ndotl_24 + (tmpvar_27 * tmpvar_10.y));
            ndotl_24 = (ndotl_24 + (tmpvar_28 * tmpvar_10.z));
            highp vec4 tmpvar_30;
            tmpvar_30 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_24 * inversesqrt(tmpvar_29)));
            ndotl_24 = tmpvar_30;
            highp vec4 tmpvar_31;
            tmpvar_31 = (tmpvar_30 * (1.0/((1.0 + 
              (tmpvar_29 * lightAttenSq_22)
            ))));
            col_23 = (lightColor0_18 * tmpvar_31.x);
            col_23 = (col_23 + (lightColor1_19 * tmpvar_31.y));
            col_23 = (col_23 + (lightColor2_20 * tmpvar_31.z));
            col_23 = (col_23 + (lightColor3_21 * tmpvar_31.w));
            tmpvar_5 = col_23;
            mediump vec3 normal_32;
            normal_32 = tmpvar_10;
            mediump vec3 ambient_33;
            mediump vec4 tmpvar_34;
            tmpvar_34.w = 1.0;
            tmpvar_34.xyz = normal_32;
            mediump vec3 res_35;
            mediump vec3 x_36;
            x_36.x = dot (unity_SHAr, tmpvar_34);
            x_36.y = dot (unity_SHAg, tmpvar_34);
            x_36.z = dot (unity_SHAb, tmpvar_34);
            mediump vec3 x1_37;
            mediump vec4 tmpvar_38;
            tmpvar_38 = (normal_32.xyzz * normal_32.yzzx);
            x1_37.x = dot (unity_SHBr, tmpvar_38);
            x1_37.y = dot (unity_SHBg, tmpvar_38);
            x1_37.z = dot (unity_SHBb, tmpvar_38);
            res_35 = (x_36 + (x1_37 + (unity_SHC.xyz * 
              ((normal_32.x * normal_32.x) - (normal_32.y * normal_32.y))
            )));
            mediump vec3 tmpvar_39;
            tmpvar_39 = max (((1.055 * 
              pow (max (res_35, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_35 = tmpvar_39;
            ambient_33 = (tmpvar_5 + max (vec3(0.0, 0.0, 0.0), tmpvar_39));
            tmpvar_5 = ambient_33;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = ambient_33;
            xlv_TEXCOORD6 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_20;
            lowp vec4 c_21;
            lowp float diff_22;
            mediump float tmpvar_23;
            tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_22 = tmpvar_23;
            c_21.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_22);
            c_21.w = tmpvar_14.w;
            c_20.w = c_21.w;
            c_20.xyz = (c_21.xyz + (tmpvar_14.xyz * xlv_TEXCOORD4));
            c_4.xyz = c_20.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            mediump vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            highp vec3 lightColor0_18;
            lightColor0_18 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_19;
            lightColor1_19 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_20;
            lightColor2_20 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_21;
            lightColor3_21 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_22;
            lightAttenSq_22 = unity_4LightAtten0;
            highp vec3 col_23;
            highp vec4 ndotl_24;
            highp vec4 lengthSq_25;
            highp vec4 tmpvar_26;
            tmpvar_26 = (unity_4LightPosX0 - tmpvar_8.x);
            highp vec4 tmpvar_27;
            tmpvar_27 = (unity_4LightPosY0 - tmpvar_8.y);
            highp vec4 tmpvar_28;
            tmpvar_28 = (unity_4LightPosZ0 - tmpvar_8.z);
            lengthSq_25 = (tmpvar_26 * tmpvar_26);
            lengthSq_25 = (lengthSq_25 + (tmpvar_27 * tmpvar_27));
            lengthSq_25 = (lengthSq_25 + (tmpvar_28 * tmpvar_28));
            highp vec4 tmpvar_29;
            tmpvar_29 = max (lengthSq_25, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_25 = tmpvar_29;
            ndotl_24 = (tmpvar_26 * tmpvar_10.x);
            ndotl_24 = (ndotl_24 + (tmpvar_27 * tmpvar_10.y));
            ndotl_24 = (ndotl_24 + (tmpvar_28 * tmpvar_10.z));
            highp vec4 tmpvar_30;
            tmpvar_30 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_24 * inversesqrt(tmpvar_29)));
            ndotl_24 = tmpvar_30;
            highp vec4 tmpvar_31;
            tmpvar_31 = (tmpvar_30 * (1.0/((1.0 + 
              (tmpvar_29 * lightAttenSq_22)
            ))));
            col_23 = (lightColor0_18 * tmpvar_31.x);
            col_23 = (col_23 + (lightColor1_19 * tmpvar_31.y));
            col_23 = (col_23 + (lightColor2_20 * tmpvar_31.z));
            col_23 = (col_23 + (lightColor3_21 * tmpvar_31.w));
            tmpvar_5 = col_23;
            mediump vec3 normal_32;
            normal_32 = tmpvar_10;
            mediump vec3 ambient_33;
            mediump vec4 tmpvar_34;
            tmpvar_34.w = 1.0;
            tmpvar_34.xyz = normal_32;
            mediump vec3 res_35;
            mediump vec3 x_36;
            x_36.x = dot (unity_SHAr, tmpvar_34);
            x_36.y = dot (unity_SHAg, tmpvar_34);
            x_36.z = dot (unity_SHAb, tmpvar_34);
            mediump vec3 x1_37;
            mediump vec4 tmpvar_38;
            tmpvar_38 = (normal_32.xyzz * normal_32.yzzx);
            x1_37.x = dot (unity_SHBr, tmpvar_38);
            x1_37.y = dot (unity_SHBg, tmpvar_38);
            x1_37.z = dot (unity_SHBb, tmpvar_38);
            res_35 = (x_36 + (x1_37 + (unity_SHC.xyz * 
              ((normal_32.x * normal_32.x) - (normal_32.y * normal_32.y))
            )));
            mediump vec3 tmpvar_39;
            tmpvar_39 = max (((1.055 * 
              pow (max (res_35, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_35 = tmpvar_39;
            ambient_33 = (tmpvar_5 + max (vec3(0.0, 0.0, 0.0), tmpvar_39));
            tmpvar_5 = ambient_33;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD4 = ambient_33;
            xlv_TEXCOORD6 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_20;
            lowp vec4 c_21;
            lowp float diff_22;
            mediump float tmpvar_23;
            tmpvar_23 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_22 = tmpvar_23;
            c_21.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_22);
            c_21.w = tmpvar_14.w;
            c_20.w = c_21.w;
            c_20.xyz = (c_21.xyz + (tmpvar_14.xyz * xlv_TEXCOORD4));
            c_4.xyz = c_20.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          vec4 u_xlat6;
          mediump vec3 u_xlat16_6;
          float u_xlat21;
          float u_xlat22;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = inversesqrt(u_xlat21);
              u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat22 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat22 = inversesqrt(u_xlat22);
              u_xlat2 = vec4(u_xlat22) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
              u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat21) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat4.xyz = u_xlat2.xyw;
              vs_TEXCOORD1.z = u_xlat4.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat4.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat4.z;
              u_xlat16_5.x = u_xlat4.y * u_xlat4.y;
              u_xlat16_5.x = u_xlat4.x * u_xlat4.x + (-u_xlat16_5.x);
              u_xlat16_1 = u_xlat2.ywzx * u_xlat2;
              u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
              u_xlat4.w = 1.0;
              u_xlat16_6.x = dot(unity_SHAr, u_xlat4);
              u_xlat16_6.y = dot(unity_SHAg, u_xlat4);
              u_xlat16_6.z = dot(unity_SHAb, u_xlat4);
              u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
              u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_5.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat5 = u_xlat4.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat6 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat6 * u_xlat4.xxxx + u_xlat5;
              u_xlat2 = u_xlat0 * u_xlat2.wwzw + u_xlat4;
              u_xlat1 = u_xlat6 * u_xlat6 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              vs_TEXCOORD4.xyz = u_xlat3.xyz + u_xlat0.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * vs_TEXCOORD4.xyz;
              SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          vec4 u_xlat6;
          mediump vec3 u_xlat16_6;
          float u_xlat21;
          float u_xlat22;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = inversesqrt(u_xlat21);
              u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat22 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat22 = inversesqrt(u_xlat22);
              u_xlat2 = vec4(u_xlat22) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
              u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat21) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat4.xyz = u_xlat2.xyw;
              vs_TEXCOORD1.z = u_xlat4.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat4.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat4.z;
              u_xlat16_5.x = u_xlat4.y * u_xlat4.y;
              u_xlat16_5.x = u_xlat4.x * u_xlat4.x + (-u_xlat16_5.x);
              u_xlat16_1 = u_xlat2.ywzx * u_xlat2;
              u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
              u_xlat4.w = 1.0;
              u_xlat16_6.x = dot(unity_SHAr, u_xlat4);
              u_xlat16_6.y = dot(unity_SHAg, u_xlat4);
              u_xlat16_6.z = dot(unity_SHAb, u_xlat4);
              u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
              u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_5.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat5 = u_xlat4.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat6 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat6 * u_xlat4.xxxx + u_xlat5;
              u_xlat2 = u_xlat0 * u_xlat2.wwzw + u_xlat4;
              u_xlat1 = u_xlat6 * u_xlat6 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              vs_TEXCOORD4.xyz = u_xlat3.xyz + u_xlat0.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * vs_TEXCOORD4.xyz;
              SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          vec4 u_xlat6;
          mediump vec3 u_xlat16_6;
          float u_xlat21;
          float u_xlat22;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = inversesqrt(u_xlat21);
              u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat22 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat22 = inversesqrt(u_xlat22);
              u_xlat2 = vec4(u_xlat22) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
              u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat21) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat4.xyz = u_xlat2.xyw;
              vs_TEXCOORD1.z = u_xlat4.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat4.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat4.z;
              u_xlat16_5.x = u_xlat4.y * u_xlat4.y;
              u_xlat16_5.x = u_xlat4.x * u_xlat4.x + (-u_xlat16_5.x);
              u_xlat16_1 = u_xlat2.ywzx * u_xlat2;
              u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
              u_xlat4.w = 1.0;
              u_xlat16_6.x = dot(unity_SHAr, u_xlat4);
              u_xlat16_6.y = dot(unity_SHAg, u_xlat4);
              u_xlat16_6.z = dot(unity_SHAb, u_xlat4);
              u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
              u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_5.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat5 = u_xlat4.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat6 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat6 * u_xlat4.xxxx + u_xlat5;
              u_xlat2 = u_xlat0 * u_xlat2.wwzw + u_xlat4;
              u_xlat1 = u_xlat6 * u_xlat6 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              vs_TEXCOORD4.xyz = u_xlat3.xyz + u_xlat0.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * vs_TEXCOORD4.xyz;
              SV_Target0.xyz = u_xlat16_4.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 tmpvar_20;
            lowp vec4 tmpvar_21;
            tmpvar_21 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_20 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_21.w) * tmpvar_21.xyz), unity_DynamicLightmap_HDR.yyy);
            lowp vec4 c_22;
            lowp vec4 c_23;
            lowp float diff_24;
            mediump float tmpvar_25;
            tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_24 = tmpvar_25;
            c_23.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_24);
            c_23.w = tmpvar_14.w;
            c_22.w = c_23.w;
            c_22.xyz = (c_23.xyz + (tmpvar_14.xyz * tmpvar_20));
            c_4.xyz = c_22.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 tmpvar_20;
            lowp vec4 tmpvar_21;
            tmpvar_21 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_20 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_21.w) * tmpvar_21.xyz), unity_DynamicLightmap_HDR.yyy);
            lowp vec4 c_22;
            lowp vec4 c_23;
            lowp float diff_24;
            mediump float tmpvar_25;
            tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_24 = tmpvar_25;
            c_23.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_24);
            c_23.w = tmpvar_14.w;
            c_22.w = c_23.w;
            c_22.xyz = (c_23.xyz + (tmpvar_14.xyz * tmpvar_20));
            c_4.xyz = c_22.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 tmpvar_20;
            lowp vec4 tmpvar_21;
            tmpvar_21 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_20 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_21.w) * tmpvar_21.xyz), unity_DynamicLightmap_HDR.yyy);
            lowp vec4 c_22;
            lowp vec4 c_23;
            lowp float diff_24;
            mediump float tmpvar_25;
            tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_24 = tmpvar_25;
            c_23.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_24);
            c_23.w = tmpvar_14.w;
            c_22.w = c_23.w;
            c_22.xyz = (c_23.xyz + (tmpvar_14.xyz * tmpvar_20));
            c_4.xyz = c_22.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_0.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_0.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_0.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 normalWorld_20;
            normalWorld_20 = tmpvar_5;
            mediump vec4 realtimeDirTex_21;
            mediump vec3 tmpvar_22;
            lowp vec4 tmpvar_23;
            tmpvar_23 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_24;
            tmpvar_24 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_21 = tmpvar_24;
            lowp vec4 dirTex_25;
            dirTex_25 = realtimeDirTex_21;
            lowp vec3 y_26;
            y_26 = (dirTex_25.xyz - 0.5);
            lowp float tmpvar_27;
            tmpvar_27 = max (0.0001, dirTex_25.w);
            tmpvar_22 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_23.w) * tmpvar_23.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_20, y_26)
             + 0.5)) / tmpvar_27);
            lowp vec4 c_28;
            lowp vec4 c_29;
            lowp float diff_30;
            mediump float tmpvar_31;
            tmpvar_31 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_30 = tmpvar_31;
            c_29.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_30);
            c_29.w = tmpvar_14.w;
            c_28.w = c_29.w;
            c_28.xyz = (c_29.xyz + (tmpvar_14.xyz * tmpvar_22));
            c_4.xyz = c_28.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 normalWorld_20;
            normalWorld_20 = tmpvar_5;
            mediump vec4 realtimeDirTex_21;
            mediump vec3 tmpvar_22;
            lowp vec4 tmpvar_23;
            tmpvar_23 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_24;
            tmpvar_24 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_21 = tmpvar_24;
            lowp vec4 dirTex_25;
            dirTex_25 = realtimeDirTex_21;
            lowp vec3 y_26;
            y_26 = (dirTex_25.xyz - 0.5);
            lowp float tmpvar_27;
            tmpvar_27 = max (0.0001, dirTex_25.w);
            tmpvar_22 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_23.w) * tmpvar_23.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_20, y_26)
             + 0.5)) / tmpvar_27);
            lowp vec4 c_28;
            lowp vec4 c_29;
            lowp float diff_30;
            mediump float tmpvar_31;
            tmpvar_31 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_30 = tmpvar_31;
            c_29.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_30);
            c_29.w = tmpvar_14.w;
            c_28.w = c_29.w;
            c_28.xyz = (c_29.xyz + (tmpvar_14.xyz * tmpvar_22));
            c_4.xyz = c_28.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            tmpvar_6.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            highp vec3 tmpvar_10;
            tmpvar_10 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_8 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_7 = tmpvar_12;
            mediump vec3 tmpvar_13;
            tmpvar_13 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_13;
            lowp vec4 tmpvar_14;
            tmpvar_14 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_15;
            tmpvar_15 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_0_9, tmpvar_15);
            worldN_3.x = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_1_8, tmpvar_15);
            worldN_3.y = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_2_7, tmpvar_15);
            worldN_3.z = tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_19 = normalize(worldN_3);
            worldN_3 = tmpvar_19;
            tmpvar_5 = tmpvar_19;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 normalWorld_20;
            normalWorld_20 = tmpvar_5;
            mediump vec4 realtimeDirTex_21;
            mediump vec3 tmpvar_22;
            lowp vec4 tmpvar_23;
            tmpvar_23 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_24;
            tmpvar_24 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_21 = tmpvar_24;
            lowp vec4 dirTex_25;
            dirTex_25 = realtimeDirTex_21;
            lowp vec3 y_26;
            y_26 = (dirTex_25.xyz - 0.5);
            lowp float tmpvar_27;
            tmpvar_27 = max (0.0001, dirTex_25.w);
            tmpvar_22 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_23.w) * tmpvar_23.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_20, y_26)
             + 0.5)) / tmpvar_27);
            lowp vec4 c_28;
            lowp vec4 c_29;
            lowp float diff_30;
            mediump float tmpvar_31;
            tmpvar_31 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_30 = tmpvar_31;
            c_29.xyz = ((tmpvar_14.xyz * tmpvar_1) * diff_30);
            c_29.w = tmpvar_14.w;
            c_28.w = c_29.w;
            c_28.xyz = (c_29.xyz + (tmpvar_14.xyz * tmpvar_22));
            c_4.xyz = c_28.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          lowp vec3 u_xlat10_4;
          mediump vec3 u_xlat16_8;
          mediump float u_xlat16_15;
          mediump float u_xlat16_16;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_3.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_3.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_15 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_16 = dot(u_xlat16_0.xyz, u_xlat16_3.xyz);
              u_xlat16_3.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_3.x = max(u_xlat16_3.x, 0.0);
              u_xlat16_16 = u_xlat16_16 + 0.5;
              u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz / vec3(u_xlat16_15);
              u_xlat10_4.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_4.xyz = u_xlat10_4.xyz * _Color.xyz;
              u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              u_xlat16_8.xyz = u_xlat16_4.xyz * _LightColor0.xyz;
              SV_Target0.xyz = u_xlat16_8.xyz * u_xlat16_3.xxx + u_xlat16_1.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          lowp vec3 u_xlat10_4;
          mediump vec3 u_xlat16_8;
          mediump float u_xlat16_15;
          mediump float u_xlat16_16;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_3.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_3.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_15 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_16 = dot(u_xlat16_0.xyz, u_xlat16_3.xyz);
              u_xlat16_3.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_3.x = max(u_xlat16_3.x, 0.0);
              u_xlat16_16 = u_xlat16_16 + 0.5;
              u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz / vec3(u_xlat16_15);
              u_xlat10_4.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_4.xyz = u_xlat10_4.xyz * _Color.xyz;
              u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              u_xlat16_8.xyz = u_xlat16_4.xyz * _LightColor0.xyz;
              SV_Target0.xyz = u_xlat16_8.xyz * u_xlat16_3.xxx + u_xlat16_1.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          lowp vec3 u_xlat10_4;
          mediump vec3 u_xlat16_8;
          mediump float u_xlat16_15;
          mediump float u_xlat16_16;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_3.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_3.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_15 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_16 = dot(u_xlat16_0.xyz, u_xlat16_3.xyz);
              u_xlat16_3.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_3.x = max(u_xlat16_3.x, 0.0);
              u_xlat16_16 = u_xlat16_16 + 0.5;
              u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz / vec3(u_xlat16_15);
              u_xlat10_4.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_4.xyz = u_xlat10_4.xyz * _Color.xyz;
              u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              u_xlat16_8.xyz = u_xlat16_4.xyz * _LightColor0.xyz;
              SV_Target0.xyz = u_xlat16_8.xyz * u_xlat16_3.xxx + u_xlat16_1.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_8);
            xlv_TEXCOORD7 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_33;
            tmpvar_33 = (tmpvar_2 * tmpvar_1);
            tmpvar_2 = tmpvar_33;
            lowp vec4 c_34;
            lowp vec4 c_35;
            lowp float diff_36;
            mediump float tmpvar_37;
            tmpvar_37 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_36 = tmpvar_37;
            c_35.xyz = ((tmpvar_17.xyz * tmpvar_33) * diff_36);
            c_35.w = tmpvar_17.w;
            c_34.w = c_35.w;
            c_34.xyz = c_35.xyz;
            c_5.xyz = c_34.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_8);
            xlv_TEXCOORD7 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_33;
            tmpvar_33 = (tmpvar_2 * tmpvar_1);
            tmpvar_2 = tmpvar_33;
            lowp vec4 c_34;
            lowp vec4 c_35;
            lowp float diff_36;
            mediump float tmpvar_37;
            tmpvar_37 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_36 = tmpvar_37;
            c_35.xyz = ((tmpvar_17.xyz * tmpvar_33) * diff_36);
            c_35.w = tmpvar_17.w;
            c_34.w = c_35.w;
            c_34.xyz = c_35.xyz;
            c_5.xyz = c_34.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_8);
            xlv_TEXCOORD7 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_33;
            tmpvar_33 = (tmpvar_2 * tmpvar_1);
            tmpvar_2 = tmpvar_33;
            lowp vec4 c_34;
            lowp vec4 c_35;
            lowp float diff_36;
            mediump float tmpvar_37;
            tmpvar_37 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_36 = tmpvar_37;
            c_35.xyz = ((tmpvar_17.xyz * tmpvar_33) * diff_36);
            c_35.w = tmpvar_17.w;
            c_34.w = c_35.w;
            c_34.xyz = c_35.xyz;
            c_5.xyz = c_34.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              SV_Target0.xyz = vec3(u_xlat16_21) * u_xlat16_3.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              SV_Target0.xyz = vec3(u_xlat16_21) * u_xlat16_3.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              SV_Target0.xyz = vec3(u_xlat16_21) * u_xlat16_3.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            mediump vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_8 = tmpvar_9.xyz;
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_WorldToObject[0].xyz;
            tmpvar_10[1] = unity_WorldToObject[1].xyz;
            tmpvar_10[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((_glesNormal * tmpvar_10));
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_13;
            highp float tmpvar_14;
            tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15 = (((tmpvar_11.yzx * worldTangent_3.zxy) - (tmpvar_11.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_15;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.x;
            tmpvar_16.y = worldBinormal_1.x;
            tmpvar_16.z = tmpvar_11.x;
            tmpvar_16.w = tmpvar_8.x;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.y;
            tmpvar_17.y = worldBinormal_1.y;
            tmpvar_17.z = tmpvar_11.y;
            tmpvar_17.w = tmpvar_8.y;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.z;
            tmpvar_18.y = worldBinormal_1.z;
            tmpvar_18.z = tmpvar_11.z;
            tmpvar_18.w = tmpvar_8.z;
            highp vec3 lightColor0_19;
            lightColor0_19 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_20;
            lightColor1_20 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_21;
            lightColor2_21 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_22;
            lightColor3_22 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_23;
            lightAttenSq_23 = unity_4LightAtten0;
            highp vec3 col_24;
            highp vec4 ndotl_25;
            highp vec4 lengthSq_26;
            highp vec4 tmpvar_27;
            tmpvar_27 = (unity_4LightPosX0 - tmpvar_9.x);
            highp vec4 tmpvar_28;
            tmpvar_28 = (unity_4LightPosY0 - tmpvar_9.y);
            highp vec4 tmpvar_29;
            tmpvar_29 = (unity_4LightPosZ0 - tmpvar_9.z);
            lengthSq_26 = (tmpvar_27 * tmpvar_27);
            lengthSq_26 = (lengthSq_26 + (tmpvar_28 * tmpvar_28));
            lengthSq_26 = (lengthSq_26 + (tmpvar_29 * tmpvar_29));
            highp vec4 tmpvar_30;
            tmpvar_30 = max (lengthSq_26, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_26 = tmpvar_30;
            ndotl_25 = (tmpvar_27 * tmpvar_11.x);
            ndotl_25 = (ndotl_25 + (tmpvar_28 * tmpvar_11.y));
            ndotl_25 = (ndotl_25 + (tmpvar_29 * tmpvar_11.z));
            highp vec4 tmpvar_31;
            tmpvar_31 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_25 * inversesqrt(tmpvar_30)));
            ndotl_25 = tmpvar_31;
            highp vec4 tmpvar_32;
            tmpvar_32 = (tmpvar_31 * (1.0/((1.0 + 
              (tmpvar_30 * lightAttenSq_23)
            ))));
            col_24 = (lightColor0_19 * tmpvar_32.x);
            col_24 = (col_24 + (lightColor1_20 * tmpvar_32.y));
            col_24 = (col_24 + (lightColor2_21 * tmpvar_32.z));
            col_24 = (col_24 + (lightColor3_22 * tmpvar_32.w));
            tmpvar_5 = col_24;
            mediump vec3 normal_33;
            normal_33 = tmpvar_11;
            mediump vec3 ambient_34;
            mediump vec3 x1_35;
            mediump vec4 tmpvar_36;
            tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
            x1_35.x = dot (unity_SHBr, tmpvar_36);
            x1_35.y = dot (unity_SHBg, tmpvar_36);
            x1_35.z = dot (unity_SHBb, tmpvar_36);
            ambient_34 = ((tmpvar_5 * (
              (tmpvar_5 * ((tmpvar_5 * 0.305306) + 0.6821711))
             + 0.01252288)) + (x1_35 + (unity_SHC.xyz * 
              ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
            )));
            tmpvar_5 = ambient_34;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_16;
            xlv_TEXCOORD2 = tmpvar_17;
            xlv_TEXCOORD3 = tmpvar_18;
            xlv_TEXCOORD4 = ambient_34;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_9);
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_33;
            normalWorld_33 = tmpvar_7;
            mediump vec3 tmpvar_34;
            tmpvar_34 = (tmpvar_2 * tmpvar_1);
            mediump vec4 tmpvar_35;
            tmpvar_35.w = 1.0;
            tmpvar_35.xyz = normalWorld_33;
            mediump vec3 x_36;
            x_36.x = dot (unity_SHAr, tmpvar_35);
            x_36.y = dot (unity_SHAg, tmpvar_35);
            x_36.z = dot (unity_SHAb, tmpvar_35);
            mediump vec3 tmpvar_37;
            tmpvar_37 = max (((1.055 * 
              pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_36)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            tmpvar_2 = tmpvar_34;
            lowp vec4 c_38;
            lowp vec4 c_39;
            lowp float diff_40;
            mediump float tmpvar_41;
            tmpvar_41 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_40 = tmpvar_41;
            c_39.xyz = ((tmpvar_17.xyz * tmpvar_34) * diff_40);
            c_39.w = tmpvar_17.w;
            c_38.w = c_39.w;
            c_38.xyz = (c_39.xyz + (tmpvar_17.xyz * tmpvar_37));
            c_5.xyz = c_38.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            mediump vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_8 = tmpvar_9.xyz;
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_WorldToObject[0].xyz;
            tmpvar_10[1] = unity_WorldToObject[1].xyz;
            tmpvar_10[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((_glesNormal * tmpvar_10));
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_13;
            highp float tmpvar_14;
            tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15 = (((tmpvar_11.yzx * worldTangent_3.zxy) - (tmpvar_11.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_15;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.x;
            tmpvar_16.y = worldBinormal_1.x;
            tmpvar_16.z = tmpvar_11.x;
            tmpvar_16.w = tmpvar_8.x;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.y;
            tmpvar_17.y = worldBinormal_1.y;
            tmpvar_17.z = tmpvar_11.y;
            tmpvar_17.w = tmpvar_8.y;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.z;
            tmpvar_18.y = worldBinormal_1.z;
            tmpvar_18.z = tmpvar_11.z;
            tmpvar_18.w = tmpvar_8.z;
            highp vec3 lightColor0_19;
            lightColor0_19 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_20;
            lightColor1_20 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_21;
            lightColor2_21 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_22;
            lightColor3_22 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_23;
            lightAttenSq_23 = unity_4LightAtten0;
            highp vec3 col_24;
            highp vec4 ndotl_25;
            highp vec4 lengthSq_26;
            highp vec4 tmpvar_27;
            tmpvar_27 = (unity_4LightPosX0 - tmpvar_9.x);
            highp vec4 tmpvar_28;
            tmpvar_28 = (unity_4LightPosY0 - tmpvar_9.y);
            highp vec4 tmpvar_29;
            tmpvar_29 = (unity_4LightPosZ0 - tmpvar_9.z);
            lengthSq_26 = (tmpvar_27 * tmpvar_27);
            lengthSq_26 = (lengthSq_26 + (tmpvar_28 * tmpvar_28));
            lengthSq_26 = (lengthSq_26 + (tmpvar_29 * tmpvar_29));
            highp vec4 tmpvar_30;
            tmpvar_30 = max (lengthSq_26, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_26 = tmpvar_30;
            ndotl_25 = (tmpvar_27 * tmpvar_11.x);
            ndotl_25 = (ndotl_25 + (tmpvar_28 * tmpvar_11.y));
            ndotl_25 = (ndotl_25 + (tmpvar_29 * tmpvar_11.z));
            highp vec4 tmpvar_31;
            tmpvar_31 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_25 * inversesqrt(tmpvar_30)));
            ndotl_25 = tmpvar_31;
            highp vec4 tmpvar_32;
            tmpvar_32 = (tmpvar_31 * (1.0/((1.0 + 
              (tmpvar_30 * lightAttenSq_23)
            ))));
            col_24 = (lightColor0_19 * tmpvar_32.x);
            col_24 = (col_24 + (lightColor1_20 * tmpvar_32.y));
            col_24 = (col_24 + (lightColor2_21 * tmpvar_32.z));
            col_24 = (col_24 + (lightColor3_22 * tmpvar_32.w));
            tmpvar_5 = col_24;
            mediump vec3 normal_33;
            normal_33 = tmpvar_11;
            mediump vec3 ambient_34;
            mediump vec3 x1_35;
            mediump vec4 tmpvar_36;
            tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
            x1_35.x = dot (unity_SHBr, tmpvar_36);
            x1_35.y = dot (unity_SHBg, tmpvar_36);
            x1_35.z = dot (unity_SHBb, tmpvar_36);
            ambient_34 = ((tmpvar_5 * (
              (tmpvar_5 * ((tmpvar_5 * 0.305306) + 0.6821711))
             + 0.01252288)) + (x1_35 + (unity_SHC.xyz * 
              ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
            )));
            tmpvar_5 = ambient_34;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_16;
            xlv_TEXCOORD2 = tmpvar_17;
            xlv_TEXCOORD3 = tmpvar_18;
            xlv_TEXCOORD4 = ambient_34;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_9);
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_33;
            normalWorld_33 = tmpvar_7;
            mediump vec3 tmpvar_34;
            tmpvar_34 = (tmpvar_2 * tmpvar_1);
            mediump vec4 tmpvar_35;
            tmpvar_35.w = 1.0;
            tmpvar_35.xyz = normalWorld_33;
            mediump vec3 x_36;
            x_36.x = dot (unity_SHAr, tmpvar_35);
            x_36.y = dot (unity_SHAg, tmpvar_35);
            x_36.z = dot (unity_SHAb, tmpvar_35);
            mediump vec3 tmpvar_37;
            tmpvar_37 = max (((1.055 * 
              pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_36)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            tmpvar_2 = tmpvar_34;
            lowp vec4 c_38;
            lowp vec4 c_39;
            lowp float diff_40;
            mediump float tmpvar_41;
            tmpvar_41 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_40 = tmpvar_41;
            c_39.xyz = ((tmpvar_17.xyz * tmpvar_34) * diff_40);
            c_39.w = tmpvar_17.w;
            c_38.w = c_39.w;
            c_38.xyz = (c_39.xyz + (tmpvar_17.xyz * tmpvar_37));
            c_5.xyz = c_38.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            mediump vec3 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_8 = tmpvar_9.xyz;
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_WorldToObject[0].xyz;
            tmpvar_10[1] = unity_WorldToObject[1].xyz;
            tmpvar_10[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((_glesNormal * tmpvar_10));
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_12[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_12[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((tmpvar_12 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_13;
            highp float tmpvar_14;
            tmpvar_14 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15 = (((tmpvar_11.yzx * worldTangent_3.zxy) - (tmpvar_11.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_15;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.x;
            tmpvar_16.y = worldBinormal_1.x;
            tmpvar_16.z = tmpvar_11.x;
            tmpvar_16.w = tmpvar_8.x;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.y;
            tmpvar_17.y = worldBinormal_1.y;
            tmpvar_17.z = tmpvar_11.y;
            tmpvar_17.w = tmpvar_8.y;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.z;
            tmpvar_18.y = worldBinormal_1.z;
            tmpvar_18.z = tmpvar_11.z;
            tmpvar_18.w = tmpvar_8.z;
            highp vec3 lightColor0_19;
            lightColor0_19 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_20;
            lightColor1_20 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_21;
            lightColor2_21 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_22;
            lightColor3_22 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_23;
            lightAttenSq_23 = unity_4LightAtten0;
            highp vec3 col_24;
            highp vec4 ndotl_25;
            highp vec4 lengthSq_26;
            highp vec4 tmpvar_27;
            tmpvar_27 = (unity_4LightPosX0 - tmpvar_9.x);
            highp vec4 tmpvar_28;
            tmpvar_28 = (unity_4LightPosY0 - tmpvar_9.y);
            highp vec4 tmpvar_29;
            tmpvar_29 = (unity_4LightPosZ0 - tmpvar_9.z);
            lengthSq_26 = (tmpvar_27 * tmpvar_27);
            lengthSq_26 = (lengthSq_26 + (tmpvar_28 * tmpvar_28));
            lengthSq_26 = (lengthSq_26 + (tmpvar_29 * tmpvar_29));
            highp vec4 tmpvar_30;
            tmpvar_30 = max (lengthSq_26, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_26 = tmpvar_30;
            ndotl_25 = (tmpvar_27 * tmpvar_11.x);
            ndotl_25 = (ndotl_25 + (tmpvar_28 * tmpvar_11.y));
            ndotl_25 = (ndotl_25 + (tmpvar_29 * tmpvar_11.z));
            highp vec4 tmpvar_31;
            tmpvar_31 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_25 * inversesqrt(tmpvar_30)));
            ndotl_25 = tmpvar_31;
            highp vec4 tmpvar_32;
            tmpvar_32 = (tmpvar_31 * (1.0/((1.0 + 
              (tmpvar_30 * lightAttenSq_23)
            ))));
            col_24 = (lightColor0_19 * tmpvar_32.x);
            col_24 = (col_24 + (lightColor1_20 * tmpvar_32.y));
            col_24 = (col_24 + (lightColor2_21 * tmpvar_32.z));
            col_24 = (col_24 + (lightColor3_22 * tmpvar_32.w));
            tmpvar_5 = col_24;
            mediump vec3 normal_33;
            normal_33 = tmpvar_11;
            mediump vec3 ambient_34;
            mediump vec3 x1_35;
            mediump vec4 tmpvar_36;
            tmpvar_36 = (normal_33.xyzz * normal_33.yzzx);
            x1_35.x = dot (unity_SHBr, tmpvar_36);
            x1_35.y = dot (unity_SHBg, tmpvar_36);
            x1_35.z = dot (unity_SHBb, tmpvar_36);
            ambient_34 = ((tmpvar_5 * (
              (tmpvar_5 * ((tmpvar_5 * 0.305306) + 0.6821711))
             + 0.01252288)) + (x1_35 + (unity_SHC.xyz * 
              ((normal_33.x * normal_33.x) - (normal_33.y * normal_33.y))
            )));
            tmpvar_5 = ambient_34;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_16;
            xlv_TEXCOORD2 = tmpvar_17;
            xlv_TEXCOORD3 = tmpvar_18;
            xlv_TEXCOORD4 = ambient_34;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_9);
            xlv_TEXCOORD7 = tmpvar_6;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_33;
            normalWorld_33 = tmpvar_7;
            mediump vec3 tmpvar_34;
            tmpvar_34 = (tmpvar_2 * tmpvar_1);
            mediump vec4 tmpvar_35;
            tmpvar_35.w = 1.0;
            tmpvar_35.xyz = normalWorld_33;
            mediump vec3 x_36;
            x_36.x = dot (unity_SHAr, tmpvar_35);
            x_36.y = dot (unity_SHAg, tmpvar_35);
            x_36.z = dot (unity_SHAb, tmpvar_35);
            mediump vec3 tmpvar_37;
            tmpvar_37 = max (((1.055 * 
              pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_36)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            tmpvar_2 = tmpvar_34;
            lowp vec4 c_38;
            lowp vec4 c_39;
            lowp float diff_40;
            mediump float tmpvar_41;
            tmpvar_41 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_40 = tmpvar_41;
            c_39.xyz = ((tmpvar_17.xyz * tmpvar_34) * diff_40);
            c_39.w = tmpvar_17.w;
            c_38.w = c_39.w;
            c_38.xyz = (c_39.xyz + (tmpvar_17.xyz * tmpvar_37));
            c_5.xyz = c_38.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          mediump vec4 u_xlat16_2;
          vec4 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_5;
          mediump vec3 u_xlat16_6;
          float u_xlat21;
          float u_xlat22;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = inversesqrt(u_xlat21);
              u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat22 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat22 = inversesqrt(u_xlat22);
              u_xlat2 = vec4(u_xlat22) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
              u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat21) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.w;
              u_xlat1 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat2.yyyy * u_xlat3;
              u_xlat3 = u_xlat3 * u_xlat3;
              u_xlat3 = u_xlat1 * u_xlat1 + u_xlat3;
              u_xlat1 = u_xlat1 * u_xlat2.xxxx + u_xlat4;
              u_xlat1 = u_xlat0 * u_xlat2.wwzw + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat3 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat3;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat1.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017) + vec3(0.682171106, 0.682171106, 0.682171106);
              u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);
              u_xlat16_5.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_5.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_5.x);
              u_xlat16_2 = u_xlat2.ywzx * u_xlat2;
              u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
              u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
              u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
              u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
              vs_TEXCOORD4.xyz = u_xlat0.xyz * u_xlat1.xyz + u_xlat16_5.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec4 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec3 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat1.w = 1.0;
              u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
              u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
              u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
              u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_1.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          mediump vec4 u_xlat16_2;
          vec4 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_5;
          mediump vec3 u_xlat16_6;
          float u_xlat21;
          float u_xlat22;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = inversesqrt(u_xlat21);
              u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat22 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat22 = inversesqrt(u_xlat22);
              u_xlat2 = vec4(u_xlat22) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
              u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat21) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.w;
              u_xlat1 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat2.yyyy * u_xlat3;
              u_xlat3 = u_xlat3 * u_xlat3;
              u_xlat3 = u_xlat1 * u_xlat1 + u_xlat3;
              u_xlat1 = u_xlat1 * u_xlat2.xxxx + u_xlat4;
              u_xlat1 = u_xlat0 * u_xlat2.wwzw + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat3 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat3;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat1.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017) + vec3(0.682171106, 0.682171106, 0.682171106);
              u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);
              u_xlat16_5.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_5.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_5.x);
              u_xlat16_2 = u_xlat2.ywzx * u_xlat2;
              u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
              u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
              u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
              u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
              vs_TEXCOORD4.xyz = u_xlat0.xyz * u_xlat1.xyz + u_xlat16_5.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec4 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec3 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat1.w = 1.0;
              u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
              u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
              u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
              u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_1.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          mediump vec4 u_xlat16_2;
          vec4 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_5;
          mediump vec3 u_xlat16_6;
          float u_xlat21;
          float u_xlat22;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = inversesqrt(u_xlat21);
              u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat22 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat22 = inversesqrt(u_xlat22);
              u_xlat2 = vec4(u_xlat22) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
              u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat21) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.w;
              u_xlat1 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat2.yyyy * u_xlat3;
              u_xlat3 = u_xlat3 * u_xlat3;
              u_xlat3 = u_xlat1 * u_xlat1 + u_xlat3;
              u_xlat1 = u_xlat1 * u_xlat2.xxxx + u_xlat4;
              u_xlat1 = u_xlat0 * u_xlat2.wwzw + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat3 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat3;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat1.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017) + vec3(0.682171106, 0.682171106, 0.682171106);
              u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);
              u_xlat16_5.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_5.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_5.x);
              u_xlat16_2 = u_xlat2.ywzx * u_xlat2;
              u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
              u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
              u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
              u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
              vs_TEXCOORD4.xyz = u_xlat0.xyz * u_xlat1.xyz + u_xlat16_5.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec4 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec3 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat1.w = 1.0;
              u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
              u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
              u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
              u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_1.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_8);
            xlv_TEXCOORD7 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_33;
            mediump vec3 tmpvar_34;
            tmpvar_33 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_35;
            tmpvar_35 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_34 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_35.w) * tmpvar_35.xyz), unity_DynamicLightmap_HDR.yyy);
            tmpvar_2 = tmpvar_33;
            lowp vec4 c_36;
            lowp vec4 c_37;
            lowp float diff_38;
            mediump float tmpvar_39;
            tmpvar_39 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_38 = tmpvar_39;
            c_37.xyz = ((tmpvar_17.xyz * tmpvar_33) * diff_38);
            c_37.w = tmpvar_17.w;
            c_36.w = c_37.w;
            c_36.xyz = (c_37.xyz + (tmpvar_17.xyz * tmpvar_34));
            c_5.xyz = c_36.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_8);
            xlv_TEXCOORD7 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_33;
            mediump vec3 tmpvar_34;
            tmpvar_33 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_35;
            tmpvar_35 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_34 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_35.w) * tmpvar_35.xyz), unity_DynamicLightmap_HDR.yyy);
            tmpvar_2 = tmpvar_33;
            lowp vec4 c_36;
            lowp vec4 c_37;
            lowp float diff_38;
            mediump float tmpvar_39;
            tmpvar_39 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_38 = tmpvar_39;
            c_37.xyz = ((tmpvar_17.xyz * tmpvar_33) * diff_38);
            c_37.w = tmpvar_17.w;
            c_36.w = c_37.w;
            c_36.xyz = (c_37.xyz + (tmpvar_17.xyz * tmpvar_34));
            c_5.xyz = c_36.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_8);
            xlv_TEXCOORD7 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_33;
            mediump vec3 tmpvar_34;
            tmpvar_33 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_35;
            tmpvar_35 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_34 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_35.w) * tmpvar_35.xyz), unity_DynamicLightmap_HDR.yyy);
            tmpvar_2 = tmpvar_33;
            lowp vec4 c_36;
            lowp vec4 c_37;
            lowp float diff_38;
            mediump float tmpvar_39;
            tmpvar_39 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_38 = tmpvar_39;
            c_37.xyz = ((tmpvar_17.xyz * tmpvar_33) * diff_38);
            c_37.w = tmpvar_17.w;
            c_36.w = c_37.w;
            c_36.xyz = (c_37.xyz + (tmpvar_17.xyz * tmpvar_34));
            c_5.xyz = c_36.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat16_1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat16_1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat16_1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_8);
            xlv_TEXCOORD7 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_33;
            normalWorld_33 = tmpvar_7;
            mediump vec4 realtimeDirTex_34;
            mediump vec3 tmpvar_35;
            mediump vec3 tmpvar_36;
            tmpvar_35 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_37;
            tmpvar_37 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_38;
            tmpvar_38 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_34 = tmpvar_38;
            lowp vec4 dirTex_39;
            dirTex_39 = realtimeDirTex_34;
            lowp vec3 y_40;
            y_40 = (dirTex_39.xyz - 0.5);
            lowp float tmpvar_41;
            tmpvar_41 = max (0.0001, dirTex_39.w);
            tmpvar_36 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_37.w) * tmpvar_37.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_33, y_40)
             + 0.5)) / tmpvar_41);
            tmpvar_2 = tmpvar_35;
            lowp vec4 c_42;
            lowp vec4 c_43;
            lowp float diff_44;
            mediump float tmpvar_45;
            tmpvar_45 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_44 = tmpvar_45;
            c_43.xyz = ((tmpvar_17.xyz * tmpvar_35) * diff_44);
            c_43.w = tmpvar_17.w;
            c_42.w = c_43.w;
            c_42.xyz = (c_43.xyz + (tmpvar_17.xyz * tmpvar_36));
            c_5.xyz = c_42.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_8);
            xlv_TEXCOORD7 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_33;
            normalWorld_33 = tmpvar_7;
            mediump vec4 realtimeDirTex_34;
            mediump vec3 tmpvar_35;
            mediump vec3 tmpvar_36;
            tmpvar_35 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_37;
            tmpvar_37 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_38;
            tmpvar_38 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_34 = tmpvar_38;
            lowp vec4 dirTex_39;
            dirTex_39 = realtimeDirTex_34;
            lowp vec3 y_40;
            y_40 = (dirTex_39.xyz - 0.5);
            lowp float tmpvar_41;
            tmpvar_41 = max (0.0001, dirTex_39.w);
            tmpvar_36 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_37.w) * tmpvar_37.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_33, y_40)
             + 0.5)) / tmpvar_41);
            tmpvar_2 = tmpvar_35;
            lowp vec4 c_42;
            lowp vec4 c_43;
            lowp float diff_44;
            mediump float tmpvar_45;
            tmpvar_45 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_44 = tmpvar_45;
            c_43.xyz = ((tmpvar_17.xyz * tmpvar_35) * diff_44);
            c_43.w = tmpvar_17.w;
            c_42.w = c_43.w;
            c_42.xyz = (c_43.xyz + (tmpvar_17.xyz * tmpvar_36));
            c_5.xyz = c_42.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_7 = tmpvar_8.xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_7.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_7.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_8);
            xlv_TEXCOORD7 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_10 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_9 = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15.x = xlv_TEXCOORD1.w;
            tmpvar_15.y = xlv_TEXCOORD2.w;
            tmpvar_15.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_16;
            tmpvar_16 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_18;
            tmpvar_18 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_19;
            highp vec4 v_20;
            v_20.x = unity_MatrixV[0].z;
            v_20.y = unity_MatrixV[1].z;
            v_20.z = unity_MatrixV[2].z;
            v_20.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_21;
            tmpvar_21 = (tmpvar_15 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_22;
            highp float tmpvar_23;
            tmpvar_23 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_15), v_20.xyz), sqrt(dot (tmpvar_21, tmpvar_21)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_22 = tmpvar_23;
            lowp float tmpvar_24;
            highp float lightShadowDataX_25;
            mediump float tmpvar_26;
            tmpvar_26 = _LightShadowData.x;
            lightShadowDataX_25 = tmpvar_26;
            highp float tmpvar_27;
            tmpvar_27 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_25);
            tmpvar_24 = tmpvar_27;
            realtimeShadowAttenuation_19 = tmpvar_24;
            mediump float tmpvar_28;
            tmpvar_28 = mix (realtimeShadowAttenuation_19, 1.0, tmpvar_22);
            atten_6 = tmpvar_28;
            lowp float tmpvar_29;
            tmpvar_29 = dot (_unity_tbn_0_11, tmpvar_18);
            worldN_4.x = tmpvar_29;
            lowp float tmpvar_30;
            tmpvar_30 = dot (_unity_tbn_1_10, tmpvar_18);
            worldN_4.y = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (_unity_tbn_2_9, tmpvar_18);
            worldN_4.z = tmpvar_31;
            highp vec3 tmpvar_32;
            tmpvar_32 = normalize(worldN_4);
            worldN_4 = tmpvar_32;
            tmpvar_7 = tmpvar_32;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_33;
            normalWorld_33 = tmpvar_7;
            mediump vec4 realtimeDirTex_34;
            mediump vec3 tmpvar_35;
            mediump vec3 tmpvar_36;
            tmpvar_35 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_37;
            tmpvar_37 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_38;
            tmpvar_38 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_34 = tmpvar_38;
            lowp vec4 dirTex_39;
            dirTex_39 = realtimeDirTex_34;
            lowp vec3 y_40;
            y_40 = (dirTex_39.xyz - 0.5);
            lowp float tmpvar_41;
            tmpvar_41 = max (0.0001, dirTex_39.w);
            tmpvar_36 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_37.w) * tmpvar_37.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_33, y_40)
             + 0.5)) / tmpvar_41);
            tmpvar_2 = tmpvar_35;
            lowp vec4 c_42;
            lowp vec4 c_43;
            lowp float diff_44;
            mediump float tmpvar_45;
            tmpvar_45 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_44 = tmpvar_45;
            c_43.xyz = ((tmpvar_17.xyz * tmpvar_35) * diff_44);
            c_43.w = tmpvar_17.w;
            c_42.w = c_43.w;
            c_42.xyz = (c_43.xyz + (tmpvar_17.xyz * tmpvar_36));
            c_5.xyz = c_42.xyz;
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          mediump vec3 u_xlat16_6;
          vec3 u_xlat7;
          lowp float u_xlat10_7;
          mediump float u_xlat16_10;
          float u_xlat21;
          mediump float u_xlat16_21;
          mediump float u_xlat16_24;
          mediump float u_xlat16_25;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = sqrt(u_xlat21);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat7.x = (-u_xlat0.x) + u_xlat21;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat7.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat7.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat7.xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat7.xyz;
              u_xlat7.xyz = u_xlat7.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat7.xy,u_xlat7.z);
              u_xlat10_7 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_7 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_10 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_10 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_24 = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(u_xlat16_24);
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_5.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_6.x = dot(vs_TEXCOORD1.xyz, u_xlat16_5.xyz);
              u_xlat16_6.y = dot(vs_TEXCOORD2.xyz, u_xlat16_5.xyz);
              u_xlat16_6.z = dot(vs_TEXCOORD3.xyz, u_xlat16_5.xyz);
              u_xlat16_21 = dot(u_xlat16_6.xyz, u_xlat16_6.xyz);
              u_xlat16_21 = inversesqrt(u_xlat16_21);
              u_xlat16_1.xyz = vec3(u_xlat16_21) * u_xlat16_6.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_5.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_21 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_24 = dot(u_xlat16_1.xyz, u_xlat16_5.xyz);
              u_xlat16_25 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_25 = max(u_xlat16_25, 0.0);
              u_xlat16_24 = u_xlat16_24 + 0.5;
              u_xlat16_4.xyz = vec3(u_xlat16_24) * u_xlat16_4.xyz;
              u_xlat16_1.xyz = u_xlat16_4.xyz / vec3(u_xlat16_21);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_25) + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          mediump vec3 u_xlat16_6;
          vec3 u_xlat7;
          lowp float u_xlat10_7;
          mediump float u_xlat16_10;
          float u_xlat21;
          mediump float u_xlat16_21;
          mediump float u_xlat16_24;
          mediump float u_xlat16_25;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = sqrt(u_xlat21);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat7.x = (-u_xlat0.x) + u_xlat21;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat7.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat7.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat7.xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat7.xyz;
              u_xlat7.xyz = u_xlat7.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat7.xy,u_xlat7.z);
              u_xlat10_7 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_7 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_10 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_10 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_24 = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(u_xlat16_24);
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_5.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_6.x = dot(vs_TEXCOORD1.xyz, u_xlat16_5.xyz);
              u_xlat16_6.y = dot(vs_TEXCOORD2.xyz, u_xlat16_5.xyz);
              u_xlat16_6.z = dot(vs_TEXCOORD3.xyz, u_xlat16_5.xyz);
              u_xlat16_21 = dot(u_xlat16_6.xyz, u_xlat16_6.xyz);
              u_xlat16_21 = inversesqrt(u_xlat16_21);
              u_xlat16_1.xyz = vec3(u_xlat16_21) * u_xlat16_6.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_5.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_21 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_24 = dot(u_xlat16_1.xyz, u_xlat16_5.xyz);
              u_xlat16_25 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_25 = max(u_xlat16_25, 0.0);
              u_xlat16_24 = u_xlat16_24 + 0.5;
              u_xlat16_4.xyz = vec3(u_xlat16_24) * u_xlat16_4.xyz;
              u_xlat16_1.xyz = u_xlat16_4.xyz / vec3(u_xlat16_21);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_25) + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          mediump vec3 u_xlat16_6;
          vec3 u_xlat7;
          lowp float u_xlat10_7;
          mediump float u_xlat16_10;
          float u_xlat21;
          mediump float u_xlat16_21;
          mediump float u_xlat16_24;
          mediump float u_xlat16_25;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = sqrt(u_xlat21);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat7.x = (-u_xlat0.x) + u_xlat21;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat7.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat7.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat7.xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat7.xyz;
              u_xlat7.xyz = u_xlat7.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat7.xy,u_xlat7.z);
              u_xlat10_7 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_7 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_10 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_10 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_24 = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(u_xlat16_24);
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_5.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_6.x = dot(vs_TEXCOORD1.xyz, u_xlat16_5.xyz);
              u_xlat16_6.y = dot(vs_TEXCOORD2.xyz, u_xlat16_5.xyz);
              u_xlat16_6.z = dot(vs_TEXCOORD3.xyz, u_xlat16_5.xyz);
              u_xlat16_21 = dot(u_xlat16_6.xyz, u_xlat16_6.xyz);
              u_xlat16_21 = inversesqrt(u_xlat16_21);
              u_xlat16_1.xyz = vec3(u_xlat16_21) * u_xlat16_6.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_5.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_21 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_24 = dot(u_xlat16_1.xyz, u_xlat16_5.xyz);
              u_xlat16_25 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_25 = max(u_xlat16_25, 0.0);
              u_xlat16_24 = u_xlat16_24 + 0.5;
              u_xlat16_4.xyz = vec3(u_xlat16_24) * u_xlat16_4.xyz;
              u_xlat16_1.xyz = u_xlat16_4.xyz / vec3(u_xlat16_21);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              SV_Target0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_25) + u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            tmpvar_10 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_WorldToObject[0].xyz;
            tmpvar_11[1] = unity_WorldToObject[1].xyz;
            tmpvar_11[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((_glesNormal * tmpvar_11));
            highp mat3 tmpvar_13;
            tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_14;
            highp float tmpvar_15;
            tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = (((tmpvar_12.yzx * worldTangent_3.zxy) - (tmpvar_12.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.x;
            tmpvar_17.y = worldBinormal_1.x;
            tmpvar_17.z = tmpvar_12.x;
            tmpvar_17.w = tmpvar_10.x;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.y;
            tmpvar_18.y = worldBinormal_1.y;
            tmpvar_18.z = tmpvar_12.y;
            tmpvar_18.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_18.xzw;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.z;
            tmpvar_19.y = worldBinormal_1.z;
            tmpvar_19.z = tmpvar_12.z;
            tmpvar_19.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_19.xzw;
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_17;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_22;
            lowp float diff_23;
            mediump float tmpvar_24;
            tmpvar_24 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_23 = tmpvar_24;
            c_22.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_23);
            c_22.w = tmpvar_16.w;
            highp float tmpvar_25;
            tmpvar_25 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_22.xyz, vec3(tmpvar_25));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            tmpvar_10 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_WorldToObject[0].xyz;
            tmpvar_11[1] = unity_WorldToObject[1].xyz;
            tmpvar_11[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((_glesNormal * tmpvar_11));
            highp mat3 tmpvar_13;
            tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_14;
            highp float tmpvar_15;
            tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = (((tmpvar_12.yzx * worldTangent_3.zxy) - (tmpvar_12.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.x;
            tmpvar_17.y = worldBinormal_1.x;
            tmpvar_17.z = tmpvar_12.x;
            tmpvar_17.w = tmpvar_10.x;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.y;
            tmpvar_18.y = worldBinormal_1.y;
            tmpvar_18.z = tmpvar_12.y;
            tmpvar_18.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_18.xzw;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.z;
            tmpvar_19.y = worldBinormal_1.z;
            tmpvar_19.z = tmpvar_12.z;
            tmpvar_19.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_19.xzw;
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_17;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_22;
            lowp float diff_23;
            mediump float tmpvar_24;
            tmpvar_24 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_23 = tmpvar_24;
            c_22.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_23);
            c_22.w = tmpvar_16.w;
            highp float tmpvar_25;
            tmpvar_25 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_22.xyz, vec3(tmpvar_25));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            tmpvar_10 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_WorldToObject[0].xyz;
            tmpvar_11[1] = unity_WorldToObject[1].xyz;
            tmpvar_11[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((_glesNormal * tmpvar_11));
            highp mat3 tmpvar_13;
            tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_14;
            highp float tmpvar_15;
            tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = (((tmpvar_12.yzx * worldTangent_3.zxy) - (tmpvar_12.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.x;
            tmpvar_17.y = worldBinormal_1.x;
            tmpvar_17.z = tmpvar_12.x;
            tmpvar_17.w = tmpvar_10.x;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.y;
            tmpvar_18.y = worldBinormal_1.y;
            tmpvar_18.z = tmpvar_12.y;
            tmpvar_18.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_18.xzw;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.z;
            tmpvar_19.y = worldBinormal_1.z;
            tmpvar_19.z = tmpvar_12.z;
            tmpvar_19.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_19.xzw;
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_17;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_22;
            lowp float diff_23;
            mediump float tmpvar_24;
            tmpvar_24 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_23 = tmpvar_24;
            c_22.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_23);
            c_22.w = tmpvar_16.w;
            highp float tmpvar_25;
            tmpvar_25 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_22.xyz, vec3(tmpvar_25));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          float u_xlat9;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_0.xyz = u_xlat16_4.xyz * u_xlat16_1.xxx + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          float u_xlat9;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_0.xyz = u_xlat16_4.xyz * u_xlat16_1.xxx + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          float u_xlat9;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_0.xyz = u_xlat16_4.xyz * u_xlat16_1.xxx + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            tmpvar_10 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_WorldToObject[0].xyz;
            tmpvar_11[1] = unity_WorldToObject[1].xyz;
            tmpvar_11[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((_glesNormal * tmpvar_11));
            highp mat3 tmpvar_13;
            tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_14;
            highp float tmpvar_15;
            tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = (((tmpvar_12.yzx * worldTangent_3.zxy) - (tmpvar_12.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.x;
            tmpvar_17.y = worldBinormal_1.x;
            tmpvar_17.z = tmpvar_12.x;
            tmpvar_17.w = tmpvar_10.x;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.y;
            tmpvar_18.y = worldBinormal_1.y;
            tmpvar_18.z = tmpvar_12.y;
            tmpvar_18.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_18.xzw;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.z;
            tmpvar_19.y = worldBinormal_1.z;
            tmpvar_19.z = tmpvar_12.z;
            tmpvar_19.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_19.xzw;
            mediump vec3 normal_20;
            normal_20 = tmpvar_12;
            mediump vec4 tmpvar_21;
            tmpvar_21.w = 1.0;
            tmpvar_21.xyz = normal_20;
            mediump vec3 res_22;
            mediump vec3 x_23;
            x_23.x = dot (unity_SHAr, tmpvar_21);
            x_23.y = dot (unity_SHAg, tmpvar_21);
            x_23.z = dot (unity_SHAb, tmpvar_21);
            mediump vec3 x1_24;
            mediump vec4 tmpvar_25;
            tmpvar_25 = (normal_20.xyzz * normal_20.yzzx);
            x1_24.x = dot (unity_SHBr, tmpvar_25);
            x1_24.y = dot (unity_SHBg, tmpvar_25);
            x1_24.z = dot (unity_SHBb, tmpvar_25);
            res_22 = (x_23 + (x1_24 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_26;
            tmpvar_26 = max (((1.055 * 
              pow (max (res_22, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_22 = tmpvar_26;
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_17;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), tmpvar_26);
            xlv_TEXCOORD6 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_22;
            lowp vec4 c_23;
            lowp float diff_24;
            mediump float tmpvar_25;
            tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_24 = tmpvar_25;
            c_23.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_24);
            c_23.w = tmpvar_16.w;
            c_22.w = c_23.w;
            c_22.xyz = (c_23.xyz + (tmpvar_16.xyz * xlv_TEXCOORD4));
            highp float tmpvar_26;
            tmpvar_26 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_22.xyz, vec3(tmpvar_26));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            tmpvar_10 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_WorldToObject[0].xyz;
            tmpvar_11[1] = unity_WorldToObject[1].xyz;
            tmpvar_11[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((_glesNormal * tmpvar_11));
            highp mat3 tmpvar_13;
            tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_14;
            highp float tmpvar_15;
            tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = (((tmpvar_12.yzx * worldTangent_3.zxy) - (tmpvar_12.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.x;
            tmpvar_17.y = worldBinormal_1.x;
            tmpvar_17.z = tmpvar_12.x;
            tmpvar_17.w = tmpvar_10.x;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.y;
            tmpvar_18.y = worldBinormal_1.y;
            tmpvar_18.z = tmpvar_12.y;
            tmpvar_18.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_18.xzw;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.z;
            tmpvar_19.y = worldBinormal_1.z;
            tmpvar_19.z = tmpvar_12.z;
            tmpvar_19.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_19.xzw;
            mediump vec3 normal_20;
            normal_20 = tmpvar_12;
            mediump vec4 tmpvar_21;
            tmpvar_21.w = 1.0;
            tmpvar_21.xyz = normal_20;
            mediump vec3 res_22;
            mediump vec3 x_23;
            x_23.x = dot (unity_SHAr, tmpvar_21);
            x_23.y = dot (unity_SHAg, tmpvar_21);
            x_23.z = dot (unity_SHAb, tmpvar_21);
            mediump vec3 x1_24;
            mediump vec4 tmpvar_25;
            tmpvar_25 = (normal_20.xyzz * normal_20.yzzx);
            x1_24.x = dot (unity_SHBr, tmpvar_25);
            x1_24.y = dot (unity_SHBg, tmpvar_25);
            x1_24.z = dot (unity_SHBb, tmpvar_25);
            res_22 = (x_23 + (x1_24 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_26;
            tmpvar_26 = max (((1.055 * 
              pow (max (res_22, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_22 = tmpvar_26;
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_17;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), tmpvar_26);
            xlv_TEXCOORD6 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_22;
            lowp vec4 c_23;
            lowp float diff_24;
            mediump float tmpvar_25;
            tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_24 = tmpvar_25;
            c_23.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_24);
            c_23.w = tmpvar_16.w;
            c_22.w = c_23.w;
            c_22.xyz = (c_23.xyz + (tmpvar_16.xyz * xlv_TEXCOORD4));
            highp float tmpvar_26;
            tmpvar_26 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_22.xyz, vec3(tmpvar_26));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            tmpvar_10 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_WorldToObject[0].xyz;
            tmpvar_11[1] = unity_WorldToObject[1].xyz;
            tmpvar_11[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((_glesNormal * tmpvar_11));
            highp mat3 tmpvar_13;
            tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_14;
            highp float tmpvar_15;
            tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = (((tmpvar_12.yzx * worldTangent_3.zxy) - (tmpvar_12.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.x;
            tmpvar_17.y = worldBinormal_1.x;
            tmpvar_17.z = tmpvar_12.x;
            tmpvar_17.w = tmpvar_10.x;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.y;
            tmpvar_18.y = worldBinormal_1.y;
            tmpvar_18.z = tmpvar_12.y;
            tmpvar_18.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_18.xzw;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.z;
            tmpvar_19.y = worldBinormal_1.z;
            tmpvar_19.z = tmpvar_12.z;
            tmpvar_19.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_19.xzw;
            mediump vec3 normal_20;
            normal_20 = tmpvar_12;
            mediump vec4 tmpvar_21;
            tmpvar_21.w = 1.0;
            tmpvar_21.xyz = normal_20;
            mediump vec3 res_22;
            mediump vec3 x_23;
            x_23.x = dot (unity_SHAr, tmpvar_21);
            x_23.y = dot (unity_SHAg, tmpvar_21);
            x_23.z = dot (unity_SHAb, tmpvar_21);
            mediump vec3 x1_24;
            mediump vec4 tmpvar_25;
            tmpvar_25 = (normal_20.xyzz * normal_20.yzzx);
            x1_24.x = dot (unity_SHBr, tmpvar_25);
            x1_24.y = dot (unity_SHBg, tmpvar_25);
            x1_24.z = dot (unity_SHBb, tmpvar_25);
            res_22 = (x_23 + (x1_24 + (unity_SHC.xyz * 
              ((normal_20.x * normal_20.x) - (normal_20.y * normal_20.y))
            )));
            mediump vec3 tmpvar_26;
            tmpvar_26 = max (((1.055 * 
              pow (max (res_22, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_22 = tmpvar_26;
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_17;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = max (vec3(0.0, 0.0, 0.0), tmpvar_26);
            xlv_TEXCOORD6 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_22;
            lowp vec4 c_23;
            lowp float diff_24;
            mediump float tmpvar_25;
            tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_24 = tmpvar_25;
            c_23.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_24);
            c_23.w = tmpvar_16.w;
            c_22.w = c_23.w;
            c_22.xyz = (c_23.xyz + (tmpvar_16.xyz * xlv_TEXCOORD4));
            highp float tmpvar_26;
            tmpvar_26 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_22.xyz, vec3(tmpvar_26));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat2 = vec4(u_xlat18) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat1.z;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzwx * u_xlat2.xywz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD4.xyz = u_xlat1.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          float u_xlat9;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_4.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat2 = vec4(u_xlat18) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat1.z;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzwx * u_xlat2.xywz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD4.xyz = u_xlat1.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          float u_xlat9;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_4.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat2 = vec4(u_xlat18) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat1.z;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.z = u_xlat2.z;
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzwx * u_xlat2.xywz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD4.xyz = u_xlat1.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          float u_xlat9;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_4.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 tmpvar_22;
            lowp vec4 tmpvar_23;
            tmpvar_23 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_22 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_23.w) * tmpvar_23.xyz), unity_DynamicLightmap_HDR.yyy);
            lowp vec4 c_24;
            lowp vec4 c_25;
            lowp float diff_26;
            mediump float tmpvar_27;
            tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_26 = tmpvar_27;
            c_25.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_26);
            c_25.w = tmpvar_16.w;
            c_24.w = c_25.w;
            c_24.xyz = (c_25.xyz + (tmpvar_16.xyz * tmpvar_22));
            highp float tmpvar_28;
            tmpvar_28 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_24.xyz, vec3(tmpvar_28));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 tmpvar_22;
            lowp vec4 tmpvar_23;
            tmpvar_23 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_22 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_23.w) * tmpvar_23.xyz), unity_DynamicLightmap_HDR.yyy);
            lowp vec4 c_24;
            lowp vec4 c_25;
            lowp float diff_26;
            mediump float tmpvar_27;
            tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_26 = tmpvar_27;
            c_25.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_26);
            c_25.w = tmpvar_16.w;
            c_24.w = c_25.w;
            c_24.xyz = (c_25.xyz + (tmpvar_16.xyz * tmpvar_22));
            highp float tmpvar_28;
            tmpvar_28 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_24.xyz, vec3(tmpvar_28));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 tmpvar_22;
            lowp vec4 tmpvar_23;
            tmpvar_23 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_22 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_23.w) * tmpvar_23.xyz), unity_DynamicLightmap_HDR.yyy);
            lowp vec4 c_24;
            lowp vec4 c_25;
            lowp float diff_26;
            mediump float tmpvar_27;
            tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_26 = tmpvar_27;
            c_25.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_26);
            c_25.w = tmpvar_16.w;
            c_24.w = c_25.w;
            c_24.xyz = (c_25.xyz + (tmpvar_16.xyz * tmpvar_22));
            highp float tmpvar_28;
            tmpvar_28 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_24.xyz, vec3(tmpvar_28));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          float u_xlat9;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_0.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          float u_xlat9;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_0.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          float u_xlat9;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_0.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 normalWorld_22;
            normalWorld_22 = tmpvar_5;
            mediump vec4 realtimeDirTex_23;
            mediump vec3 tmpvar_24;
            lowp vec4 tmpvar_25;
            tmpvar_25 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_26;
            tmpvar_26 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_23 = tmpvar_26;
            lowp vec4 dirTex_27;
            dirTex_27 = realtimeDirTex_23;
            lowp vec3 y_28;
            y_28 = (dirTex_27.xyz - 0.5);
            lowp float tmpvar_29;
            tmpvar_29 = max (0.0001, dirTex_27.w);
            tmpvar_24 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_25.w) * tmpvar_25.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_22, y_28)
             + 0.5)) / tmpvar_29);
            lowp vec4 c_30;
            lowp vec4 c_31;
            lowp float diff_32;
            mediump float tmpvar_33;
            tmpvar_33 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_32 = tmpvar_33;
            c_31.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_32);
            c_31.w = tmpvar_16.w;
            c_30.w = c_31.w;
            c_30.xyz = (c_31.xyz + (tmpvar_16.xyz * tmpvar_24));
            highp float tmpvar_34;
            tmpvar_34 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_30.xyz, vec3(tmpvar_34));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 normalWorld_22;
            normalWorld_22 = tmpvar_5;
            mediump vec4 realtimeDirTex_23;
            mediump vec3 tmpvar_24;
            lowp vec4 tmpvar_25;
            tmpvar_25 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_26;
            tmpvar_26 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_23 = tmpvar_26;
            lowp vec4 dirTex_27;
            dirTex_27 = realtimeDirTex_23;
            lowp vec3 y_28;
            y_28 = (dirTex_27.xyz - 0.5);
            lowp float tmpvar_29;
            tmpvar_29 = max (0.0001, dirTex_27.w);
            tmpvar_24 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_25.w) * tmpvar_25.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_22, y_28)
             + 0.5)) / tmpvar_29);
            lowp vec4 c_30;
            lowp vec4 c_31;
            lowp float diff_32;
            mediump float tmpvar_33;
            tmpvar_33 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_32 = tmpvar_33;
            c_31.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_32);
            c_31.w = tmpvar_16.w;
            c_30.w = c_31.w;
            c_30.xyz = (c_31.xyz + (tmpvar_16.xyz * tmpvar_24));
            highp float tmpvar_34;
            tmpvar_34 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_30.xyz, vec3(tmpvar_34));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 normalWorld_22;
            normalWorld_22 = tmpvar_5;
            mediump vec4 realtimeDirTex_23;
            mediump vec3 tmpvar_24;
            lowp vec4 tmpvar_25;
            tmpvar_25 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_26;
            tmpvar_26 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_23 = tmpvar_26;
            lowp vec4 dirTex_27;
            dirTex_27 = realtimeDirTex_23;
            lowp vec3 y_28;
            y_28 = (dirTex_27.xyz - 0.5);
            lowp float tmpvar_29;
            tmpvar_29 = max (0.0001, dirTex_27.w);
            tmpvar_24 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_25.w) * tmpvar_25.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_22, y_28)
             + 0.5)) / tmpvar_29);
            lowp vec4 c_30;
            lowp vec4 c_31;
            lowp float diff_32;
            mediump float tmpvar_33;
            tmpvar_33 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_32 = tmpvar_33;
            c_31.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_32);
            c_31.w = tmpvar_16.w;
            c_30.w = c_31.w;
            c_30.xyz = (c_31.xyz + (tmpvar_16.xyz * tmpvar_24));
            highp float tmpvar_34;
            tmpvar_34 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_30.xyz, vec3(tmpvar_34));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          lowp vec3 u_xlat10_4;
          mediump vec3 u_xlat16_8;
          float u_xlat15;
          mediump float u_xlat16_15;
          mediump float u_xlat16_16;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_3.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_3.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_15 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_16 = dot(u_xlat16_0.xyz, u_xlat16_3.xyz);
              u_xlat16_3.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_3.x = max(u_xlat16_3.x, 0.0);
              u_xlat16_16 = u_xlat16_16 + 0.5;
              u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz / vec3(u_xlat16_15);
              u_xlat10_4.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_4.xyz = u_xlat10_4.xyz * _Color.xyz;
              u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              u_xlat16_8.xyz = u_xlat16_4.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_8.xyz * u_xlat16_3.xxx + u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat15 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
          #else
              u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          lowp vec3 u_xlat10_4;
          mediump vec3 u_xlat16_8;
          float u_xlat15;
          mediump float u_xlat16_15;
          mediump float u_xlat16_16;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_3.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_3.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_15 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_16 = dot(u_xlat16_0.xyz, u_xlat16_3.xyz);
              u_xlat16_3.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_3.x = max(u_xlat16_3.x, 0.0);
              u_xlat16_16 = u_xlat16_16 + 0.5;
              u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz / vec3(u_xlat16_15);
              u_xlat10_4.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_4.xyz = u_xlat10_4.xyz * _Color.xyz;
              u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              u_xlat16_8.xyz = u_xlat16_4.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_8.xyz * u_xlat16_3.xxx + u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat15 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
          #else
              u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          lowp vec3 u_xlat10_4;
          mediump vec3 u_xlat16_8;
          float u_xlat15;
          mediump float u_xlat16_15;
          mediump float u_xlat16_16;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_3.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_3.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_15 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_16 = dot(u_xlat16_0.xyz, u_xlat16_3.xyz);
              u_xlat16_3.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_3.x = max(u_xlat16_3.x, 0.0);
              u_xlat16_16 = u_xlat16_16 + 0.5;
              u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz / vec3(u_xlat16_15);
              u_xlat10_4.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_4.xyz = u_xlat10_4.xyz * _Color.xyz;
              u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              u_xlat16_8.xyz = u_xlat16_4.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_8.xyz * u_xlat16_3.xxx + u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat15 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
          #else
              u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_11);
            xlv_TEXCOORD7 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_35;
            tmpvar_35 = (tmpvar_2 * tmpvar_1);
            tmpvar_2 = tmpvar_35;
            lowp vec4 c_36;
            lowp float diff_37;
            mediump float tmpvar_38;
            tmpvar_38 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_37 = tmpvar_38;
            c_36.xyz = ((tmpvar_19.xyz * tmpvar_35) * diff_37);
            c_36.w = tmpvar_19.w;
            highp float tmpvar_39;
            tmpvar_39 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_36.xyz, vec3(tmpvar_39));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_11);
            xlv_TEXCOORD7 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_35;
            tmpvar_35 = (tmpvar_2 * tmpvar_1);
            tmpvar_2 = tmpvar_35;
            lowp vec4 c_36;
            lowp float diff_37;
            mediump float tmpvar_38;
            tmpvar_38 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_37 = tmpvar_38;
            c_36.xyz = ((tmpvar_19.xyz * tmpvar_35) * diff_37);
            c_36.w = tmpvar_19.w;
            highp float tmpvar_39;
            tmpvar_39 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_36.xyz, vec3(tmpvar_39));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_11);
            xlv_TEXCOORD7 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_35;
            tmpvar_35 = (tmpvar_2 * tmpvar_1);
            tmpvar_2 = tmpvar_35;
            lowp vec4 c_36;
            lowp float diff_37;
            mediump float tmpvar_38;
            tmpvar_38 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_37 = tmpvar_38;
            c_36.xyz = ((tmpvar_19.xyz * tmpvar_35) * diff_37);
            c_36.w = tmpvar_19.w;
            highp float tmpvar_39;
            tmpvar_39 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_36.xyz, vec3(tmpvar_39));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat16_0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat16_0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat16_0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            mediump vec3 normal_21;
            normal_21 = tmpvar_13;
            mediump vec3 x1_22;
            mediump vec4 tmpvar_23;
            tmpvar_23 = (normal_21.xyzz * normal_21.yzzx);
            x1_22.x = dot (unity_SHBr, tmpvar_23);
            x1_22.y = dot (unity_SHBg, tmpvar_23);
            x1_22.z = dot (unity_SHBb, tmpvar_23);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = (x1_22 + (unity_SHC.xyz * (
              (normal_21.x * normal_21.x)
             - 
              (normal_21.y * normal_21.y)
            )));
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_11);
            xlv_TEXCOORD7 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_35;
            normalWorld_35 = tmpvar_7;
            mediump vec3 tmpvar_36;
            tmpvar_36 = (tmpvar_2 * tmpvar_1);
            mediump vec4 tmpvar_37;
            tmpvar_37.w = 1.0;
            tmpvar_37.xyz = normalWorld_35;
            mediump vec3 x_38;
            x_38.x = dot (unity_SHAr, tmpvar_37);
            x_38.y = dot (unity_SHAg, tmpvar_37);
            x_38.z = dot (unity_SHAb, tmpvar_37);
            mediump vec3 tmpvar_39;
            tmpvar_39 = max (((1.055 * 
              pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_38)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            tmpvar_2 = tmpvar_36;
            lowp vec4 c_40;
            lowp vec4 c_41;
            lowp float diff_42;
            mediump float tmpvar_43;
            tmpvar_43 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_42 = tmpvar_43;
            c_41.xyz = ((tmpvar_19.xyz * tmpvar_36) * diff_42);
            c_41.w = tmpvar_19.w;
            c_40.w = c_41.w;
            c_40.xyz = (c_41.xyz + (tmpvar_19.xyz * tmpvar_39));
            highp float tmpvar_44;
            tmpvar_44 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_40.xyz, vec3(tmpvar_44));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            mediump vec3 normal_21;
            normal_21 = tmpvar_13;
            mediump vec3 x1_22;
            mediump vec4 tmpvar_23;
            tmpvar_23 = (normal_21.xyzz * normal_21.yzzx);
            x1_22.x = dot (unity_SHBr, tmpvar_23);
            x1_22.y = dot (unity_SHBg, tmpvar_23);
            x1_22.z = dot (unity_SHBb, tmpvar_23);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = (x1_22 + (unity_SHC.xyz * (
              (normal_21.x * normal_21.x)
             - 
              (normal_21.y * normal_21.y)
            )));
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_11);
            xlv_TEXCOORD7 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_35;
            normalWorld_35 = tmpvar_7;
            mediump vec3 tmpvar_36;
            tmpvar_36 = (tmpvar_2 * tmpvar_1);
            mediump vec4 tmpvar_37;
            tmpvar_37.w = 1.0;
            tmpvar_37.xyz = normalWorld_35;
            mediump vec3 x_38;
            x_38.x = dot (unity_SHAr, tmpvar_37);
            x_38.y = dot (unity_SHAg, tmpvar_37);
            x_38.z = dot (unity_SHAb, tmpvar_37);
            mediump vec3 tmpvar_39;
            tmpvar_39 = max (((1.055 * 
              pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_38)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            tmpvar_2 = tmpvar_36;
            lowp vec4 c_40;
            lowp vec4 c_41;
            lowp float diff_42;
            mediump float tmpvar_43;
            tmpvar_43 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_42 = tmpvar_43;
            c_41.xyz = ((tmpvar_19.xyz * tmpvar_36) * diff_42);
            c_41.w = tmpvar_19.w;
            c_40.w = c_41.w;
            c_40.xyz = (c_41.xyz + (tmpvar_19.xyz * tmpvar_39));
            highp float tmpvar_44;
            tmpvar_44 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_40.xyz, vec3(tmpvar_44));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            mediump vec3 normal_21;
            normal_21 = tmpvar_13;
            mediump vec3 x1_22;
            mediump vec4 tmpvar_23;
            tmpvar_23 = (normal_21.xyzz * normal_21.yzzx);
            x1_22.x = dot (unity_SHBr, tmpvar_23);
            x1_22.y = dot (unity_SHBg, tmpvar_23);
            x1_22.z = dot (unity_SHBb, tmpvar_23);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = (x1_22 + (unity_SHC.xyz * (
              (normal_21.x * normal_21.x)
             - 
              (normal_21.y * normal_21.y)
            )));
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_11);
            xlv_TEXCOORD7 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_35;
            normalWorld_35 = tmpvar_7;
            mediump vec3 tmpvar_36;
            tmpvar_36 = (tmpvar_2 * tmpvar_1);
            mediump vec4 tmpvar_37;
            tmpvar_37.w = 1.0;
            tmpvar_37.xyz = normalWorld_35;
            mediump vec3 x_38;
            x_38.x = dot (unity_SHAr, tmpvar_37);
            x_38.y = dot (unity_SHAg, tmpvar_37);
            x_38.z = dot (unity_SHAb, tmpvar_37);
            mediump vec3 tmpvar_39;
            tmpvar_39 = max (((1.055 * 
              pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_38)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            tmpvar_2 = tmpvar_36;
            lowp vec4 c_40;
            lowp vec4 c_41;
            lowp float diff_42;
            mediump float tmpvar_43;
            tmpvar_43 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_42 = tmpvar_43;
            c_41.xyz = ((tmpvar_19.xyz * tmpvar_36) * diff_42);
            c_41.w = tmpvar_19.w;
            c_40.w = c_41.w;
            c_40.xyz = (c_41.xyz + (tmpvar_19.xyz * tmpvar_39));
            highp float tmpvar_44;
            tmpvar_44 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_40.xyz, vec3(tmpvar_44));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump float u_xlat16_4;
          mediump vec3 u_xlat16_5;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2 = u_xlat0.xxxx * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
              u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.z = u_xlat2.w;
              u_xlat16_4 = u_xlat2.y * u_xlat2.y;
              u_xlat16_4 = u_xlat2.x * u_xlat2.x + (-u_xlat16_4);
              u_xlat16_0 = u_xlat2.ywzx * u_xlat2;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_4) + u_xlat16_5.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec4 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec3 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat1.w = 1.0;
              u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
              u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
              u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
              u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_1.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump float u_xlat16_4;
          mediump vec3 u_xlat16_5;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2 = u_xlat0.xxxx * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
              u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.z = u_xlat2.w;
              u_xlat16_4 = u_xlat2.y * u_xlat2.y;
              u_xlat16_4 = u_xlat2.x * u_xlat2.x + (-u_xlat16_4);
              u_xlat16_0 = u_xlat2.ywzx * u_xlat2;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_4) + u_xlat16_5.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec4 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec3 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat1.w = 1.0;
              u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
              u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
              u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
              u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_1.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump float u_xlat16_4;
          mediump vec3 u_xlat16_5;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2 = u_xlat0.xxxx * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
              u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.z = u_xlat2.w;
              u_xlat16_4 = u_xlat2.y * u_xlat2.y;
              u_xlat16_4 = u_xlat2.x * u_xlat2.x + (-u_xlat16_4);
              u_xlat16_0 = u_xlat2.ywzx * u_xlat2;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              vs_TEXCOORD4.xyz = unity_SHC.xyz * vec3(u_xlat16_4) + u_xlat16_5.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec4 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec3 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat1.w = 1.0;
              u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
              u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
              u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
              u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_1.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_11);
            xlv_TEXCOORD7 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_35;
            mediump vec3 tmpvar_36;
            tmpvar_35 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_37;
            tmpvar_37 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_36 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_37.w) * tmpvar_37.xyz), unity_DynamicLightmap_HDR.yyy);
            tmpvar_2 = tmpvar_35;
            lowp vec4 c_38;
            lowp vec4 c_39;
            lowp float diff_40;
            mediump float tmpvar_41;
            tmpvar_41 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_40 = tmpvar_41;
            c_39.xyz = ((tmpvar_19.xyz * tmpvar_35) * diff_40);
            c_39.w = tmpvar_19.w;
            c_38.w = c_39.w;
            c_38.xyz = (c_39.xyz + (tmpvar_19.xyz * tmpvar_36));
            highp float tmpvar_42;
            tmpvar_42 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_38.xyz, vec3(tmpvar_42));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_11);
            xlv_TEXCOORD7 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_35;
            mediump vec3 tmpvar_36;
            tmpvar_35 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_37;
            tmpvar_37 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_36 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_37.w) * tmpvar_37.xyz), unity_DynamicLightmap_HDR.yyy);
            tmpvar_2 = tmpvar_35;
            lowp vec4 c_38;
            lowp vec4 c_39;
            lowp float diff_40;
            mediump float tmpvar_41;
            tmpvar_41 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_40 = tmpvar_41;
            c_39.xyz = ((tmpvar_19.xyz * tmpvar_35) * diff_40);
            c_39.w = tmpvar_19.w;
            c_38.w = c_39.w;
            c_38.xyz = (c_39.xyz + (tmpvar_19.xyz * tmpvar_36));
            highp float tmpvar_42;
            tmpvar_42 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_38.xyz, vec3(tmpvar_42));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_11);
            xlv_TEXCOORD7 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_35;
            mediump vec3 tmpvar_36;
            tmpvar_35 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_37;
            tmpvar_37 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_36 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_37.w) * tmpvar_37.xyz), unity_DynamicLightmap_HDR.yyy);
            tmpvar_2 = tmpvar_35;
            lowp vec4 c_38;
            lowp vec4 c_39;
            lowp float diff_40;
            mediump float tmpvar_41;
            tmpvar_41 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_40 = tmpvar_41;
            c_39.xyz = ((tmpvar_19.xyz * tmpvar_35) * diff_40);
            c_39.w = tmpvar_19.w;
            c_38.w = c_39.w;
            c_38.xyz = (c_39.xyz + (tmpvar_19.xyz * tmpvar_36));
            highp float tmpvar_42;
            tmpvar_42 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_38.xyz, vec3(tmpvar_42));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat16_1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat16_1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat16_1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_11);
            xlv_TEXCOORD7 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_35;
            normalWorld_35 = tmpvar_7;
            mediump vec4 realtimeDirTex_36;
            mediump vec3 tmpvar_37;
            mediump vec3 tmpvar_38;
            tmpvar_37 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_39;
            tmpvar_39 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_40;
            tmpvar_40 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_36 = tmpvar_40;
            lowp vec4 dirTex_41;
            dirTex_41 = realtimeDirTex_36;
            lowp vec3 y_42;
            y_42 = (dirTex_41.xyz - 0.5);
            lowp float tmpvar_43;
            tmpvar_43 = max (0.0001, dirTex_41.w);
            tmpvar_38 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_39.w) * tmpvar_39.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_35, y_42)
             + 0.5)) / tmpvar_43);
            tmpvar_2 = tmpvar_37;
            lowp vec4 c_44;
            lowp vec4 c_45;
            lowp float diff_46;
            mediump float tmpvar_47;
            tmpvar_47 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_46 = tmpvar_47;
            c_45.xyz = ((tmpvar_19.xyz * tmpvar_37) * diff_46);
            c_45.w = tmpvar_19.w;
            c_44.w = c_45.w;
            c_44.xyz = (c_45.xyz + (tmpvar_19.xyz * tmpvar_38));
            highp float tmpvar_48;
            tmpvar_48 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_44.xyz, vec3(tmpvar_48));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_11);
            xlv_TEXCOORD7 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_35;
            normalWorld_35 = tmpvar_7;
            mediump vec4 realtimeDirTex_36;
            mediump vec3 tmpvar_37;
            mediump vec3 tmpvar_38;
            tmpvar_37 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_39;
            tmpvar_39 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_40;
            tmpvar_40 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_36 = tmpvar_40;
            lowp vec4 dirTex_41;
            dirTex_41 = realtimeDirTex_36;
            lowp vec3 y_42;
            y_42 = (dirTex_41.xyz - 0.5);
            lowp float tmpvar_43;
            tmpvar_43 = max (0.0001, dirTex_41.w);
            tmpvar_38 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_39.w) * tmpvar_39.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_35, y_42)
             + 0.5)) / tmpvar_43);
            tmpvar_2 = tmpvar_37;
            lowp vec4 c_44;
            lowp vec4 c_45;
            lowp float diff_46;
            mediump float tmpvar_47;
            tmpvar_47 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_46 = tmpvar_47;
            c_45.xyz = ((tmpvar_19.xyz * tmpvar_37) * diff_46);
            c_45.w = tmpvar_19.w;
            c_44.w = c_45.w;
            c_44.xyz = (c_45.xyz + (tmpvar_19.xyz * tmpvar_38));
            highp float tmpvar_48;
            tmpvar_48 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_44.xyz, vec3(tmpvar_48));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_11);
            xlv_TEXCOORD7 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_35;
            normalWorld_35 = tmpvar_7;
            mediump vec4 realtimeDirTex_36;
            mediump vec3 tmpvar_37;
            mediump vec3 tmpvar_38;
            tmpvar_37 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_39;
            tmpvar_39 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_40;
            tmpvar_40 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_36 = tmpvar_40;
            lowp vec4 dirTex_41;
            dirTex_41 = realtimeDirTex_36;
            lowp vec3 y_42;
            y_42 = (dirTex_41.xyz - 0.5);
            lowp float tmpvar_43;
            tmpvar_43 = max (0.0001, dirTex_41.w);
            tmpvar_38 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_39.w) * tmpvar_39.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_35, y_42)
             + 0.5)) / tmpvar_43);
            tmpvar_2 = tmpvar_37;
            lowp vec4 c_44;
            lowp vec4 c_45;
            lowp float diff_46;
            mediump float tmpvar_47;
            tmpvar_47 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_46 = tmpvar_47;
            c_45.xyz = ((tmpvar_19.xyz * tmpvar_37) * diff_46);
            c_45.w = tmpvar_19.w;
            c_44.w = c_45.w;
            c_44.xyz = (c_45.xyz + (tmpvar_19.xyz * tmpvar_38));
            highp float tmpvar_48;
            tmpvar_48 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_44.xyz, vec3(tmpvar_48));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          mediump vec3 u_xlat16_6;
          vec3 u_xlat7;
          lowp float u_xlat10_7;
          mediump float u_xlat16_10;
          float u_xlat21;
          mediump float u_xlat16_21;
          mediump float u_xlat16_24;
          mediump float u_xlat16_25;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = sqrt(u_xlat21);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat7.x = (-u_xlat0.x) + u_xlat21;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat7.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat7.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat7.xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat7.xyz;
              u_xlat7.xyz = u_xlat7.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat7.xy,u_xlat7.z);
              u_xlat10_7 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_7 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_10 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_10 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_24 = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(u_xlat16_24);
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_5.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_6.x = dot(vs_TEXCOORD1.xyz, u_xlat16_5.xyz);
              u_xlat16_6.y = dot(vs_TEXCOORD2.xyz, u_xlat16_5.xyz);
              u_xlat16_6.z = dot(vs_TEXCOORD3.xyz, u_xlat16_5.xyz);
              u_xlat16_21 = dot(u_xlat16_6.xyz, u_xlat16_6.xyz);
              u_xlat16_21 = inversesqrt(u_xlat16_21);
              u_xlat16_1.xyz = vec3(u_xlat16_21) * u_xlat16_6.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_5.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_21 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_24 = dot(u_xlat16_1.xyz, u_xlat16_5.xyz);
              u_xlat16_25 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_25 = max(u_xlat16_25, 0.0);
              u_xlat16_24 = u_xlat16_24 + 0.5;
              u_xlat16_4.xyz = vec3(u_xlat16_24) * u_xlat16_4.xyz;
              u_xlat16_1.xyz = u_xlat16_4.xyz / vec3(u_xlat16_21);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_25) + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat21 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat21 = min(max(u_xlat21, 0.0), 1.0);
          #else
              u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat21) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          mediump vec3 u_xlat16_6;
          vec3 u_xlat7;
          lowp float u_xlat10_7;
          mediump float u_xlat16_10;
          float u_xlat21;
          mediump float u_xlat16_21;
          mediump float u_xlat16_24;
          mediump float u_xlat16_25;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = sqrt(u_xlat21);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat7.x = (-u_xlat0.x) + u_xlat21;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat7.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat7.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat7.xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat7.xyz;
              u_xlat7.xyz = u_xlat7.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat7.xy,u_xlat7.z);
              u_xlat10_7 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_7 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_10 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_10 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_24 = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(u_xlat16_24);
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_5.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_6.x = dot(vs_TEXCOORD1.xyz, u_xlat16_5.xyz);
              u_xlat16_6.y = dot(vs_TEXCOORD2.xyz, u_xlat16_5.xyz);
              u_xlat16_6.z = dot(vs_TEXCOORD3.xyz, u_xlat16_5.xyz);
              u_xlat16_21 = dot(u_xlat16_6.xyz, u_xlat16_6.xyz);
              u_xlat16_21 = inversesqrt(u_xlat16_21);
              u_xlat16_1.xyz = vec3(u_xlat16_21) * u_xlat16_6.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_5.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_21 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_24 = dot(u_xlat16_1.xyz, u_xlat16_5.xyz);
              u_xlat16_25 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_25 = max(u_xlat16_25, 0.0);
              u_xlat16_24 = u_xlat16_24 + 0.5;
              u_xlat16_4.xyz = vec3(u_xlat16_24) * u_xlat16_4.xyz;
              u_xlat16_1.xyz = u_xlat16_4.xyz / vec3(u_xlat16_21);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_25) + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat21 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat21 = min(max(u_xlat21, 0.0), 1.0);
          #else
              u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat21) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          mediump vec3 u_xlat16_6;
          vec3 u_xlat7;
          lowp float u_xlat10_7;
          mediump float u_xlat16_10;
          float u_xlat21;
          mediump float u_xlat16_21;
          mediump float u_xlat16_24;
          mediump float u_xlat16_25;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = sqrt(u_xlat21);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat7.x = (-u_xlat0.x) + u_xlat21;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat7.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat7.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat7.xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat7.xyz;
              u_xlat7.xyz = u_xlat7.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat7.xy,u_xlat7.z);
              u_xlat10_7 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_7 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_10 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_10 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_24 = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(u_xlat16_24);
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_5.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_6.x = dot(vs_TEXCOORD1.xyz, u_xlat16_5.xyz);
              u_xlat16_6.y = dot(vs_TEXCOORD2.xyz, u_xlat16_5.xyz);
              u_xlat16_6.z = dot(vs_TEXCOORD3.xyz, u_xlat16_5.xyz);
              u_xlat16_21 = dot(u_xlat16_6.xyz, u_xlat16_6.xyz);
              u_xlat16_21 = inversesqrt(u_xlat16_21);
              u_xlat16_1.xyz = vec3(u_xlat16_21) * u_xlat16_6.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_5.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_21 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_24 = dot(u_xlat16_1.xyz, u_xlat16_5.xyz);
              u_xlat16_25 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_25 = max(u_xlat16_25, 0.0);
              u_xlat16_24 = u_xlat16_24 + 0.5;
              u_xlat16_4.xyz = vec3(u_xlat16_24) * u_xlat16_4.xyz;
              u_xlat16_1.xyz = u_xlat16_4.xyz / vec3(u_xlat16_21);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_25) + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat21 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat21 = min(max(u_xlat21, 0.0), 1.0);
          #else
              u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat21) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            tmpvar_10 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_WorldToObject[0].xyz;
            tmpvar_11[1] = unity_WorldToObject[1].xyz;
            tmpvar_11[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((_glesNormal * tmpvar_11));
            highp mat3 tmpvar_13;
            tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_14;
            highp float tmpvar_15;
            tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = (((tmpvar_12.yzx * worldTangent_3.zxy) - (tmpvar_12.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.x;
            tmpvar_17.y = worldBinormal_1.x;
            tmpvar_17.z = tmpvar_12.x;
            tmpvar_17.w = tmpvar_10.x;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.y;
            tmpvar_18.y = worldBinormal_1.y;
            tmpvar_18.z = tmpvar_12.y;
            tmpvar_18.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_18.xzw;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.z;
            tmpvar_19.y = worldBinormal_1.z;
            tmpvar_19.z = tmpvar_12.z;
            tmpvar_19.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_19.xzw;
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_17;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_22;
            lowp float diff_23;
            mediump float tmpvar_24;
            tmpvar_24 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_23 = tmpvar_24;
            c_22.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_23);
            c_22.w = tmpvar_16.w;
            highp float tmpvar_25;
            tmpvar_25 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_22.xyz, vec3(tmpvar_25));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            tmpvar_10 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_WorldToObject[0].xyz;
            tmpvar_11[1] = unity_WorldToObject[1].xyz;
            tmpvar_11[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((_glesNormal * tmpvar_11));
            highp mat3 tmpvar_13;
            tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_14;
            highp float tmpvar_15;
            tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = (((tmpvar_12.yzx * worldTangent_3.zxy) - (tmpvar_12.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.x;
            tmpvar_17.y = worldBinormal_1.x;
            tmpvar_17.z = tmpvar_12.x;
            tmpvar_17.w = tmpvar_10.x;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.y;
            tmpvar_18.y = worldBinormal_1.y;
            tmpvar_18.z = tmpvar_12.y;
            tmpvar_18.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_18.xzw;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.z;
            tmpvar_19.y = worldBinormal_1.z;
            tmpvar_19.z = tmpvar_12.z;
            tmpvar_19.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_19.xzw;
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_17;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_22;
            lowp float diff_23;
            mediump float tmpvar_24;
            tmpvar_24 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_23 = tmpvar_24;
            c_22.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_23);
            c_22.w = tmpvar_16.w;
            highp float tmpvar_25;
            tmpvar_25 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_22.xyz, vec3(tmpvar_25));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            tmpvar_10 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_WorldToObject[0].xyz;
            tmpvar_11[1] = unity_WorldToObject[1].xyz;
            tmpvar_11[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((_glesNormal * tmpvar_11));
            highp mat3 tmpvar_13;
            tmpvar_13[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_13[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_13[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize((tmpvar_13 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_14;
            highp float tmpvar_15;
            tmpvar_15 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = (((tmpvar_12.yzx * worldTangent_3.zxy) - (tmpvar_12.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.x;
            tmpvar_17.y = worldBinormal_1.x;
            tmpvar_17.z = tmpvar_12.x;
            tmpvar_17.w = tmpvar_10.x;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.y;
            tmpvar_18.y = worldBinormal_1.y;
            tmpvar_18.z = tmpvar_12.y;
            tmpvar_18.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_18.xzw;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.z;
            tmpvar_19.y = worldBinormal_1.z;
            tmpvar_19.z = tmpvar_12.z;
            tmpvar_19.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_19.xzw;
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_17;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_22;
            lowp float diff_23;
            mediump float tmpvar_24;
            tmpvar_24 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_23 = tmpvar_24;
            c_22.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_23);
            c_22.w = tmpvar_16.w;
            highp float tmpvar_25;
            tmpvar_25 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_22.xyz, vec3(tmpvar_25));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          float u_xlat9;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_0.xyz = u_xlat16_4.xyz * u_xlat16_1.xxx + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          float u_xlat9;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_0.xyz = u_xlat16_4.xyz * u_xlat16_1.xxx + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          float u_xlat9;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_0.xyz = u_xlat16_4.xyz * u_xlat16_1.xxx + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            mediump vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 lightColor0_21;
            lightColor0_21 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_22;
            lightColor1_22 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_23;
            lightColor2_23 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_24;
            lightColor3_24 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_25;
            lightAttenSq_25 = unity_4LightAtten0;
            highp vec3 col_26;
            highp vec4 ndotl_27;
            highp vec4 lengthSq_28;
            highp vec4 tmpvar_29;
            tmpvar_29 = (unity_4LightPosX0 - tmpvar_11.x);
            highp vec4 tmpvar_30;
            tmpvar_30 = (unity_4LightPosY0 - tmpvar_11.y);
            highp vec4 tmpvar_31;
            tmpvar_31 = (unity_4LightPosZ0 - tmpvar_11.z);
            lengthSq_28 = (tmpvar_29 * tmpvar_29);
            lengthSq_28 = (lengthSq_28 + (tmpvar_30 * tmpvar_30));
            lengthSq_28 = (lengthSq_28 + (tmpvar_31 * tmpvar_31));
            highp vec4 tmpvar_32;
            tmpvar_32 = max (lengthSq_28, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_28 = tmpvar_32;
            ndotl_27 = (tmpvar_29 * tmpvar_13.x);
            ndotl_27 = (ndotl_27 + (tmpvar_30 * tmpvar_13.y));
            ndotl_27 = (ndotl_27 + (tmpvar_31 * tmpvar_13.z));
            highp vec4 tmpvar_33;
            tmpvar_33 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_27 * inversesqrt(tmpvar_32)));
            ndotl_27 = tmpvar_33;
            highp vec4 tmpvar_34;
            tmpvar_34 = (tmpvar_33 * (1.0/((1.0 + 
              (tmpvar_32 * lightAttenSq_25)
            ))));
            col_26 = (lightColor0_21 * tmpvar_34.x);
            col_26 = (col_26 + (lightColor1_22 * tmpvar_34.y));
            col_26 = (col_26 + (lightColor2_23 * tmpvar_34.z));
            col_26 = (col_26 + (lightColor3_24 * tmpvar_34.w));
            tmpvar_7 = col_26;
            mediump vec3 normal_35;
            normal_35 = tmpvar_13;
            mediump vec3 ambient_36;
            mediump vec4 tmpvar_37;
            tmpvar_37.w = 1.0;
            tmpvar_37.xyz = normal_35;
            mediump vec3 res_38;
            mediump vec3 x_39;
            x_39.x = dot (unity_SHAr, tmpvar_37);
            x_39.y = dot (unity_SHAg, tmpvar_37);
            x_39.z = dot (unity_SHAb, tmpvar_37);
            mediump vec3 x1_40;
            mediump vec4 tmpvar_41;
            tmpvar_41 = (normal_35.xyzz * normal_35.yzzx);
            x1_40.x = dot (unity_SHBr, tmpvar_41);
            x1_40.y = dot (unity_SHBg, tmpvar_41);
            x1_40.z = dot (unity_SHBb, tmpvar_41);
            res_38 = (x_39 + (x1_40 + (unity_SHC.xyz * 
              ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
            )));
            mediump vec3 tmpvar_42;
            tmpvar_42 = max (((1.055 * 
              pow (max (res_38, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_38 = tmpvar_42;
            ambient_36 = (tmpvar_7 + max (vec3(0.0, 0.0, 0.0), tmpvar_42));
            tmpvar_7 = ambient_36;
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = ambient_36;
            xlv_TEXCOORD6 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_22;
            lowp vec4 c_23;
            lowp float diff_24;
            mediump float tmpvar_25;
            tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_24 = tmpvar_25;
            c_23.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_24);
            c_23.w = tmpvar_16.w;
            c_22.w = c_23.w;
            c_22.xyz = (c_23.xyz + (tmpvar_16.xyz * xlv_TEXCOORD4));
            highp float tmpvar_26;
            tmpvar_26 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_22.xyz, vec3(tmpvar_26));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            mediump vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 lightColor0_21;
            lightColor0_21 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_22;
            lightColor1_22 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_23;
            lightColor2_23 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_24;
            lightColor3_24 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_25;
            lightAttenSq_25 = unity_4LightAtten0;
            highp vec3 col_26;
            highp vec4 ndotl_27;
            highp vec4 lengthSq_28;
            highp vec4 tmpvar_29;
            tmpvar_29 = (unity_4LightPosX0 - tmpvar_11.x);
            highp vec4 tmpvar_30;
            tmpvar_30 = (unity_4LightPosY0 - tmpvar_11.y);
            highp vec4 tmpvar_31;
            tmpvar_31 = (unity_4LightPosZ0 - tmpvar_11.z);
            lengthSq_28 = (tmpvar_29 * tmpvar_29);
            lengthSq_28 = (lengthSq_28 + (tmpvar_30 * tmpvar_30));
            lengthSq_28 = (lengthSq_28 + (tmpvar_31 * tmpvar_31));
            highp vec4 tmpvar_32;
            tmpvar_32 = max (lengthSq_28, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_28 = tmpvar_32;
            ndotl_27 = (tmpvar_29 * tmpvar_13.x);
            ndotl_27 = (ndotl_27 + (tmpvar_30 * tmpvar_13.y));
            ndotl_27 = (ndotl_27 + (tmpvar_31 * tmpvar_13.z));
            highp vec4 tmpvar_33;
            tmpvar_33 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_27 * inversesqrt(tmpvar_32)));
            ndotl_27 = tmpvar_33;
            highp vec4 tmpvar_34;
            tmpvar_34 = (tmpvar_33 * (1.0/((1.0 + 
              (tmpvar_32 * lightAttenSq_25)
            ))));
            col_26 = (lightColor0_21 * tmpvar_34.x);
            col_26 = (col_26 + (lightColor1_22 * tmpvar_34.y));
            col_26 = (col_26 + (lightColor2_23 * tmpvar_34.z));
            col_26 = (col_26 + (lightColor3_24 * tmpvar_34.w));
            tmpvar_7 = col_26;
            mediump vec3 normal_35;
            normal_35 = tmpvar_13;
            mediump vec3 ambient_36;
            mediump vec4 tmpvar_37;
            tmpvar_37.w = 1.0;
            tmpvar_37.xyz = normal_35;
            mediump vec3 res_38;
            mediump vec3 x_39;
            x_39.x = dot (unity_SHAr, tmpvar_37);
            x_39.y = dot (unity_SHAg, tmpvar_37);
            x_39.z = dot (unity_SHAb, tmpvar_37);
            mediump vec3 x1_40;
            mediump vec4 tmpvar_41;
            tmpvar_41 = (normal_35.xyzz * normal_35.yzzx);
            x1_40.x = dot (unity_SHBr, tmpvar_41);
            x1_40.y = dot (unity_SHBg, tmpvar_41);
            x1_40.z = dot (unity_SHBb, tmpvar_41);
            res_38 = (x_39 + (x1_40 + (unity_SHC.xyz * 
              ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
            )));
            mediump vec3 tmpvar_42;
            tmpvar_42 = max (((1.055 * 
              pow (max (res_38, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_38 = tmpvar_42;
            ambient_36 = (tmpvar_7 + max (vec3(0.0, 0.0, 0.0), tmpvar_42));
            tmpvar_7 = ambient_36;
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = ambient_36;
            xlv_TEXCOORD6 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_22;
            lowp vec4 c_23;
            lowp float diff_24;
            mediump float tmpvar_25;
            tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_24 = tmpvar_25;
            c_23.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_24);
            c_23.w = tmpvar_16.w;
            c_22.w = c_23.w;
            c_22.xyz = (c_23.xyz + (tmpvar_16.xyz * xlv_TEXCOORD4));
            highp float tmpvar_26;
            tmpvar_26 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_22.xyz, vec3(tmpvar_26));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            mediump vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            highp vec3 lightColor0_21;
            lightColor0_21 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_22;
            lightColor1_22 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_23;
            lightColor2_23 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_24;
            lightColor3_24 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_25;
            lightAttenSq_25 = unity_4LightAtten0;
            highp vec3 col_26;
            highp vec4 ndotl_27;
            highp vec4 lengthSq_28;
            highp vec4 tmpvar_29;
            tmpvar_29 = (unity_4LightPosX0 - tmpvar_11.x);
            highp vec4 tmpvar_30;
            tmpvar_30 = (unity_4LightPosY0 - tmpvar_11.y);
            highp vec4 tmpvar_31;
            tmpvar_31 = (unity_4LightPosZ0 - tmpvar_11.z);
            lengthSq_28 = (tmpvar_29 * tmpvar_29);
            lengthSq_28 = (lengthSq_28 + (tmpvar_30 * tmpvar_30));
            lengthSq_28 = (lengthSq_28 + (tmpvar_31 * tmpvar_31));
            highp vec4 tmpvar_32;
            tmpvar_32 = max (lengthSq_28, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_28 = tmpvar_32;
            ndotl_27 = (tmpvar_29 * tmpvar_13.x);
            ndotl_27 = (ndotl_27 + (tmpvar_30 * tmpvar_13.y));
            ndotl_27 = (ndotl_27 + (tmpvar_31 * tmpvar_13.z));
            highp vec4 tmpvar_33;
            tmpvar_33 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_27 * inversesqrt(tmpvar_32)));
            ndotl_27 = tmpvar_33;
            highp vec4 tmpvar_34;
            tmpvar_34 = (tmpvar_33 * (1.0/((1.0 + 
              (tmpvar_32 * lightAttenSq_25)
            ))));
            col_26 = (lightColor0_21 * tmpvar_34.x);
            col_26 = (col_26 + (lightColor1_22 * tmpvar_34.y));
            col_26 = (col_26 + (lightColor2_23 * tmpvar_34.z));
            col_26 = (col_26 + (lightColor3_24 * tmpvar_34.w));
            tmpvar_7 = col_26;
            mediump vec3 normal_35;
            normal_35 = tmpvar_13;
            mediump vec3 ambient_36;
            mediump vec4 tmpvar_37;
            tmpvar_37.w = 1.0;
            tmpvar_37.xyz = normal_35;
            mediump vec3 res_38;
            mediump vec3 x_39;
            x_39.x = dot (unity_SHAr, tmpvar_37);
            x_39.y = dot (unity_SHAg, tmpvar_37);
            x_39.z = dot (unity_SHAb, tmpvar_37);
            mediump vec3 x1_40;
            mediump vec4 tmpvar_41;
            tmpvar_41 = (normal_35.xyzz * normal_35.yzzx);
            x1_40.x = dot (unity_SHBr, tmpvar_41);
            x1_40.y = dot (unity_SHBg, tmpvar_41);
            x1_40.z = dot (unity_SHBb, tmpvar_41);
            res_38 = (x_39 + (x1_40 + (unity_SHC.xyz * 
              ((normal_35.x * normal_35.x) - (normal_35.y * normal_35.y))
            )));
            mediump vec3 tmpvar_42;
            tmpvar_42 = max (((1.055 * 
              pow (max (res_38, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_38 = tmpvar_42;
            ambient_36 = (tmpvar_7 + max (vec3(0.0, 0.0, 0.0), tmpvar_42));
            tmpvar_7 = ambient_36;
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = ambient_36;
            xlv_TEXCOORD6 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_22;
            lowp vec4 c_23;
            lowp float diff_24;
            mediump float tmpvar_25;
            tmpvar_25 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_24 = tmpvar_25;
            c_23.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_24);
            c_23.w = tmpvar_16.w;
            c_22.w = c_23.w;
            c_22.xyz = (c_23.xyz + (tmpvar_16.xyz * xlv_TEXCOORD4));
            highp float tmpvar_26;
            tmpvar_26 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_22.xyz, vec3(tmpvar_26));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          vec4 u_xlat6;
          mediump vec3 u_xlat16_6;
          float u_xlat21;
          float u_xlat22;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = inversesqrt(u_xlat21);
              u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat22 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat22 = inversesqrt(u_xlat22);
              u_xlat2 = vec4(u_xlat22) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
              u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat21) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat4.xyz = u_xlat2.xyw;
              vs_TEXCOORD1.z = u_xlat4.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat4.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat4.z;
              u_xlat16_5.x = u_xlat4.y * u_xlat4.y;
              u_xlat16_5.x = u_xlat4.x * u_xlat4.x + (-u_xlat16_5.x);
              u_xlat16_1 = u_xlat2.ywzx * u_xlat2;
              u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
              u_xlat4.w = 1.0;
              u_xlat16_6.x = dot(unity_SHAr, u_xlat4);
              u_xlat16_6.y = dot(unity_SHAg, u_xlat4);
              u_xlat16_6.z = dot(unity_SHAb, u_xlat4);
              u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
              u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_5.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat5 = u_xlat4.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat6 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat6 * u_xlat4.xxxx + u_xlat5;
              u_xlat2 = u_xlat0 * u_xlat2.wwzw + u_xlat4;
              u_xlat1 = u_xlat6 * u_xlat6 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              vs_TEXCOORD4.xyz = u_xlat3.xyz + u_xlat0.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          float u_xlat9;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_4.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          vec4 u_xlat6;
          mediump vec3 u_xlat16_6;
          float u_xlat21;
          float u_xlat22;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = inversesqrt(u_xlat21);
              u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat22 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat22 = inversesqrt(u_xlat22);
              u_xlat2 = vec4(u_xlat22) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
              u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat21) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat4.xyz = u_xlat2.xyw;
              vs_TEXCOORD1.z = u_xlat4.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat4.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat4.z;
              u_xlat16_5.x = u_xlat4.y * u_xlat4.y;
              u_xlat16_5.x = u_xlat4.x * u_xlat4.x + (-u_xlat16_5.x);
              u_xlat16_1 = u_xlat2.ywzx * u_xlat2;
              u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
              u_xlat4.w = 1.0;
              u_xlat16_6.x = dot(unity_SHAr, u_xlat4);
              u_xlat16_6.y = dot(unity_SHAg, u_xlat4);
              u_xlat16_6.z = dot(unity_SHAb, u_xlat4);
              u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
              u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_5.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat5 = u_xlat4.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat6 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat6 * u_xlat4.xxxx + u_xlat5;
              u_xlat2 = u_xlat0 * u_xlat2.wwzw + u_xlat4;
              u_xlat1 = u_xlat6 * u_xlat6 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              vs_TEXCOORD4.xyz = u_xlat3.xyz + u_xlat0.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          float u_xlat9;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_4.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          vec4 u_xlat4;
          vec4 u_xlat5;
          mediump vec3 u_xlat16_5;
          vec4 u_xlat6;
          mediump vec3 u_xlat16_6;
          float u_xlat21;
          float u_xlat22;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = inversesqrt(u_xlat21);
              u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat22 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat22 = inversesqrt(u_xlat22);
              u_xlat2 = vec4(u_xlat22) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
              u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat21) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat4.xyz = u_xlat2.xyw;
              vs_TEXCOORD1.z = u_xlat4.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat4.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat4.z;
              u_xlat16_5.x = u_xlat4.y * u_xlat4.y;
              u_xlat16_5.x = u_xlat4.x * u_xlat4.x + (-u_xlat16_5.x);
              u_xlat16_1 = u_xlat2.ywzx * u_xlat2;
              u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
              u_xlat4.w = 1.0;
              u_xlat16_6.x = dot(unity_SHAr, u_xlat4);
              u_xlat16_6.y = dot(unity_SHAg, u_xlat4);
              u_xlat16_6.z = dot(unity_SHAb, u_xlat4);
              u_xlat16_5.xyz = u_xlat16_5.xyz + u_xlat16_6.xyz;
              u_xlat16_5.xyz = max(u_xlat16_5.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat3.xyz = log2(u_xlat16_5.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat3.xyz = exp2(u_xlat3.xyz);
              u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat5 = u_xlat4.yyyy * u_xlat1;
              u_xlat1 = u_xlat1 * u_xlat1;
              u_xlat6 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat6 * u_xlat4.xxxx + u_xlat5;
              u_xlat2 = u_xlat0 * u_xlat2.wwzw + u_xlat4;
              u_xlat1 = u_xlat6 * u_xlat6 + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat1;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat1 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat2;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              vs_TEXCOORD4.xyz = u_xlat3.xyz + u_xlat0.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          float u_xlat9;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_4.xyz * u_xlat16_1.xxx + u_xlat16_2.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 tmpvar_22;
            lowp vec4 tmpvar_23;
            tmpvar_23 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_22 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_23.w) * tmpvar_23.xyz), unity_DynamicLightmap_HDR.yyy);
            lowp vec4 c_24;
            lowp vec4 c_25;
            lowp float diff_26;
            mediump float tmpvar_27;
            tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_26 = tmpvar_27;
            c_25.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_26);
            c_25.w = tmpvar_16.w;
            c_24.w = c_25.w;
            c_24.xyz = (c_25.xyz + (tmpvar_16.xyz * tmpvar_22));
            highp float tmpvar_28;
            tmpvar_28 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_24.xyz, vec3(tmpvar_28));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 tmpvar_22;
            lowp vec4 tmpvar_23;
            tmpvar_23 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_22 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_23.w) * tmpvar_23.xyz), unity_DynamicLightmap_HDR.yyy);
            lowp vec4 c_24;
            lowp vec4 c_25;
            lowp float diff_26;
            mediump float tmpvar_27;
            tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_26 = tmpvar_27;
            c_25.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_26);
            c_25.w = tmpvar_16.w;
            c_24.w = c_25.w;
            c_24.xyz = (c_25.xyz + (tmpvar_16.xyz * tmpvar_22));
            highp float tmpvar_28;
            tmpvar_28 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_24.xyz, vec3(tmpvar_28));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 tmpvar_22;
            lowp vec4 tmpvar_23;
            tmpvar_23 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_22 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_23.w) * tmpvar_23.xyz), unity_DynamicLightmap_HDR.yyy);
            lowp vec4 c_24;
            lowp vec4 c_25;
            lowp float diff_26;
            mediump float tmpvar_27;
            tmpvar_27 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_26 = tmpvar_27;
            c_25.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_26);
            c_25.w = tmpvar_16.w;
            c_24.w = c_25.w;
            c_24.xyz = (c_25.xyz + (tmpvar_16.xyz * tmpvar_22));
            highp float tmpvar_28;
            tmpvar_28 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_24.xyz, vec3(tmpvar_28));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          float u_xlat9;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_0.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          float u_xlat9;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_0.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          float u_xlat9;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_0.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
              u_xlat16_2.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_2.xyz * u_xlat16_1.xxx + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 normalWorld_22;
            normalWorld_22 = tmpvar_5;
            mediump vec4 realtimeDirTex_23;
            mediump vec3 tmpvar_24;
            lowp vec4 tmpvar_25;
            tmpvar_25 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_26;
            tmpvar_26 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_23 = tmpvar_26;
            lowp vec4 dirTex_27;
            dirTex_27 = realtimeDirTex_23;
            lowp vec3 y_28;
            y_28 = (dirTex_27.xyz - 0.5);
            lowp float tmpvar_29;
            tmpvar_29 = max (0.0001, dirTex_27.w);
            tmpvar_24 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_25.w) * tmpvar_25.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_22, y_28)
             + 0.5)) / tmpvar_29);
            lowp vec4 c_30;
            lowp vec4 c_31;
            lowp float diff_32;
            mediump float tmpvar_33;
            tmpvar_33 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_32 = tmpvar_33;
            c_31.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_32);
            c_31.w = tmpvar_16.w;
            c_30.w = c_31.w;
            c_30.xyz = (c_31.xyz + (tmpvar_16.xyz * tmpvar_24));
            highp float tmpvar_34;
            tmpvar_34 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_30.xyz, vec3(tmpvar_34));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 normalWorld_22;
            normalWorld_22 = tmpvar_5;
            mediump vec4 realtimeDirTex_23;
            mediump vec3 tmpvar_24;
            lowp vec4 tmpvar_25;
            tmpvar_25 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_26;
            tmpvar_26 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_23 = tmpvar_26;
            lowp vec4 dirTex_27;
            dirTex_27 = realtimeDirTex_23;
            lowp vec3 y_28;
            y_28 = (dirTex_27.xyz - 0.5);
            lowp float tmpvar_29;
            tmpvar_29 = max (0.0001, dirTex_27.w);
            tmpvar_24 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_25.w) * tmpvar_25.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_22, y_28)
             + 0.5)) / tmpvar_29);
            lowp vec4 c_30;
            lowp vec4 c_31;
            lowp float diff_32;
            mediump float tmpvar_33;
            tmpvar_33 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_32 = tmpvar_33;
            c_31.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_32);
            c_31.w = tmpvar_16.w;
            c_30.w = c_31.w;
            c_30.xyz = (c_31.xyz + (tmpvar_16.xyz * tmpvar_24));
            highp float tmpvar_34;
            tmpvar_34 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_30.xyz, vec3(tmpvar_34));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_11.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_8.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = tmpvar_7;
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_binormal_7;
            lowp vec3 _unity_normal_8;
            lowp vec3 _unity_tangent_9;
            highp vec3 tmpvar_10;
            tmpvar_10.x = xlv_TEXCOORD1.x;
            tmpvar_10.y = xlv_TEXCOORD2.x;
            tmpvar_10.z = xlv_TEXCOORD3.x;
            _unity_tangent_9 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11.x = xlv_TEXCOORD1.z;
            tmpvar_11.y = xlv_TEXCOORD2.z;
            tmpvar_11.z = xlv_TEXCOORD3.z;
            _unity_normal_8 = tmpvar_11;
            _unity_binormal_7 = (((_unity_normal_8.yzx * _unity_tangent_9.zxy) - (_unity_normal_8.zxy * _unity_tangent_9.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_12;
            tmpvar_12.x = _unity_tangent_9.x;
            tmpvar_12.y = _unity_binormal_7.x;
            tmpvar_12.z = _unity_normal_8.x;
            lowp vec3 tmpvar_13;
            tmpvar_13.x = _unity_tangent_9.y;
            tmpvar_13.y = _unity_binormal_7.y;
            tmpvar_13.z = _unity_normal_8.y;
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_9.z;
            tmpvar_14.y = _unity_binormal_7.z;
            tmpvar_14.z = _unity_normal_8.z;
            mediump vec3 tmpvar_15;
            tmpvar_15 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_17;
            tmpvar_17 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_18;
            tmpvar_18 = dot (tmpvar_12, tmpvar_17);
            worldN_3.x = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (tmpvar_13, tmpvar_17);
            worldN_3.y = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (tmpvar_14, tmpvar_17);
            worldN_3.z = tmpvar_20;
            highp vec3 tmpvar_21;
            tmpvar_21 = normalize(worldN_3);
            worldN_3 = tmpvar_21;
            tmpvar_5 = tmpvar_21;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            mediump vec3 normalWorld_22;
            normalWorld_22 = tmpvar_5;
            mediump vec4 realtimeDirTex_23;
            mediump vec3 tmpvar_24;
            lowp vec4 tmpvar_25;
            tmpvar_25 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_26;
            tmpvar_26 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_23 = tmpvar_26;
            lowp vec4 dirTex_27;
            dirTex_27 = realtimeDirTex_23;
            lowp vec3 y_28;
            y_28 = (dirTex_27.xyz - 0.5);
            lowp float tmpvar_29;
            tmpvar_29 = max (0.0001, dirTex_27.w);
            tmpvar_24 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_25.w) * tmpvar_25.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_22, y_28)
             + 0.5)) / tmpvar_29);
            lowp vec4 c_30;
            lowp vec4 c_31;
            lowp float diff_32;
            mediump float tmpvar_33;
            tmpvar_33 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_32 = tmpvar_33;
            c_31.xyz = ((tmpvar_16.xyz * tmpvar_1) * diff_32);
            c_31.w = tmpvar_16.w;
            c_30.w = c_31.w;
            c_30.xyz = (c_31.xyz + (tmpvar_16.xyz * tmpvar_24));
            highp float tmpvar_34;
            tmpvar_34 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_4.xyz = mix (unity_FogColor.xyz, c_30.xyz, vec3(tmpvar_34));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          lowp vec3 u_xlat10_4;
          mediump vec3 u_xlat16_8;
          float u_xlat15;
          mediump float u_xlat16_15;
          mediump float u_xlat16_16;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_3.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_3.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_15 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_16 = dot(u_xlat16_0.xyz, u_xlat16_3.xyz);
              u_xlat16_3.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_3.x = max(u_xlat16_3.x, 0.0);
              u_xlat16_16 = u_xlat16_16 + 0.5;
              u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz / vec3(u_xlat16_15);
              u_xlat10_4.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_4.xyz = u_xlat10_4.xyz * _Color.xyz;
              u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              u_xlat16_8.xyz = u_xlat16_4.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_8.xyz * u_xlat16_3.xxx + u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat15 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
          #else
              u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          lowp vec3 u_xlat10_4;
          mediump vec3 u_xlat16_8;
          float u_xlat15;
          mediump float u_xlat16_15;
          mediump float u_xlat16_16;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_3.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_3.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_15 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_16 = dot(u_xlat16_0.xyz, u_xlat16_3.xyz);
              u_xlat16_3.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_3.x = max(u_xlat16_3.x, 0.0);
              u_xlat16_16 = u_xlat16_16 + 0.5;
              u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz / vec3(u_xlat16_15);
              u_xlat10_4.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_4.xyz = u_xlat10_4.xyz * _Color.xyz;
              u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              u_xlat16_8.xyz = u_xlat16_4.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_8.xyz * u_xlat16_3.xxx + u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat15 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
          #else
              u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          lowp vec3 u_xlat10_4;
          mediump vec3 u_xlat16_8;
          float u_xlat15;
          mediump float u_xlat16_15;
          mediump float u_xlat16_16;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_3.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_3.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_15 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_16 = dot(u_xlat16_0.xyz, u_xlat16_3.xyz);
              u_xlat16_3.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_3.x = max(u_xlat16_3.x, 0.0);
              u_xlat16_16 = u_xlat16_16 + 0.5;
              u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz / vec3(u_xlat16_15);
              u_xlat10_4.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_4.xyz = u_xlat10_4.xyz * _Color.xyz;
              u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              u_xlat16_8.xyz = u_xlat16_4.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_8.xyz * u_xlat16_3.xxx + u_xlat16_1.xyz;
              u_xlat16_0.xyz = u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat15 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
          #else
              u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat15) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_11);
            xlv_TEXCOORD7 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_35;
            tmpvar_35 = (tmpvar_2 * tmpvar_1);
            tmpvar_2 = tmpvar_35;
            lowp vec4 c_36;
            lowp float diff_37;
            mediump float tmpvar_38;
            tmpvar_38 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_37 = tmpvar_38;
            c_36.xyz = ((tmpvar_19.xyz * tmpvar_35) * diff_37);
            c_36.w = tmpvar_19.w;
            highp float tmpvar_39;
            tmpvar_39 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_36.xyz, vec3(tmpvar_39));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_11);
            xlv_TEXCOORD7 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_35;
            tmpvar_35 = (tmpvar_2 * tmpvar_1);
            tmpvar_2 = tmpvar_35;
            lowp vec4 c_36;
            lowp float diff_37;
            mediump float tmpvar_38;
            tmpvar_38 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_37 = tmpvar_38;
            c_36.xyz = ((tmpvar_19.xyz * tmpvar_35) * diff_37);
            c_36.w = tmpvar_19.w;
            highp float tmpvar_39;
            tmpvar_39 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_36.xyz, vec3(tmpvar_39));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_11);
            xlv_TEXCOORD7 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_35;
            tmpvar_35 = (tmpvar_2 * tmpvar_1);
            tmpvar_2 = tmpvar_35;
            lowp vec4 c_36;
            lowp float diff_37;
            mediump float tmpvar_38;
            tmpvar_38 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_37 = tmpvar_38;
            c_36.xyz = ((tmpvar_19.xyz * tmpvar_35) * diff_37);
            c_36.w = tmpvar_19.w;
            highp float tmpvar_39;
            tmpvar_39 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_36.xyz, vec3(tmpvar_39));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat16_0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat16_0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat16_0.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            mediump vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_11;
            highp vec4 tmpvar_12;
            tmpvar_12 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_11 = tmpvar_12.xyz;
            highp mat3 tmpvar_13;
            tmpvar_13[0] = unity_WorldToObject[0].xyz;
            tmpvar_13[1] = unity_WorldToObject[1].xyz;
            tmpvar_13[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize((_glesNormal * tmpvar_13));
            highp mat3 tmpvar_15;
            tmpvar_15[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_15[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_15[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize((tmpvar_15 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_16;
            highp float tmpvar_17;
            tmpvar_17 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = (((tmpvar_14.yzx * worldTangent_3.zxy) - (tmpvar_14.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_18;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.x;
            tmpvar_19.y = worldBinormal_1.x;
            tmpvar_19.z = tmpvar_14.x;
            tmpvar_19.w = tmpvar_11.x;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.y;
            tmpvar_20.y = worldBinormal_1.y;
            tmpvar_20.z = tmpvar_14.y;
            tmpvar_20.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_20.xzw;
            highp vec4 tmpvar_21;
            tmpvar_21.x = worldTangent_3.z;
            tmpvar_21.y = worldBinormal_1.z;
            tmpvar_21.z = tmpvar_14.z;
            tmpvar_21.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_21.xzw;
            highp vec3 lightColor0_22;
            lightColor0_22 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_23;
            lightColor1_23 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_24;
            lightColor2_24 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_25;
            lightColor3_25 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_26;
            lightAttenSq_26 = unity_4LightAtten0;
            highp vec3 col_27;
            highp vec4 ndotl_28;
            highp vec4 lengthSq_29;
            highp vec4 tmpvar_30;
            tmpvar_30 = (unity_4LightPosX0 - tmpvar_12.x);
            highp vec4 tmpvar_31;
            tmpvar_31 = (unity_4LightPosY0 - tmpvar_12.y);
            highp vec4 tmpvar_32;
            tmpvar_32 = (unity_4LightPosZ0 - tmpvar_12.z);
            lengthSq_29 = (tmpvar_30 * tmpvar_30);
            lengthSq_29 = (lengthSq_29 + (tmpvar_31 * tmpvar_31));
            lengthSq_29 = (lengthSq_29 + (tmpvar_32 * tmpvar_32));
            highp vec4 tmpvar_33;
            tmpvar_33 = max (lengthSq_29, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_29 = tmpvar_33;
            ndotl_28 = (tmpvar_30 * tmpvar_14.x);
            ndotl_28 = (ndotl_28 + (tmpvar_31 * tmpvar_14.y));
            ndotl_28 = (ndotl_28 + (tmpvar_32 * tmpvar_14.z));
            highp vec4 tmpvar_34;
            tmpvar_34 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_28 * inversesqrt(tmpvar_33)));
            ndotl_28 = tmpvar_34;
            highp vec4 tmpvar_35;
            tmpvar_35 = (tmpvar_34 * (1.0/((1.0 + 
              (tmpvar_33 * lightAttenSq_26)
            ))));
            col_27 = (lightColor0_22 * tmpvar_35.x);
            col_27 = (col_27 + (lightColor1_23 * tmpvar_35.y));
            col_27 = (col_27 + (lightColor2_24 * tmpvar_35.z));
            col_27 = (col_27 + (lightColor3_25 * tmpvar_35.w));
            tmpvar_7 = col_27;
            mediump vec3 normal_36;
            normal_36 = tmpvar_14;
            mediump vec3 ambient_37;
            mediump vec3 x1_38;
            mediump vec4 tmpvar_39;
            tmpvar_39 = (normal_36.xyzz * normal_36.yzzx);
            x1_38.x = dot (unity_SHBr, tmpvar_39);
            x1_38.y = dot (unity_SHBg, tmpvar_39);
            x1_38.z = dot (unity_SHBb, tmpvar_39);
            ambient_37 = ((tmpvar_7 * (
              (tmpvar_7 * ((tmpvar_7 * 0.305306) + 0.6821711))
             + 0.01252288)) + (x1_38 + (unity_SHC.xyz * 
              ((normal_36.x * normal_36.x) - (normal_36.y * normal_36.y))
            )));
            tmpvar_7 = ambient_37;
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_19;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = ambient_37;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_12);
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_35;
            normalWorld_35 = tmpvar_7;
            mediump vec3 tmpvar_36;
            tmpvar_36 = (tmpvar_2 * tmpvar_1);
            mediump vec4 tmpvar_37;
            tmpvar_37.w = 1.0;
            tmpvar_37.xyz = normalWorld_35;
            mediump vec3 x_38;
            x_38.x = dot (unity_SHAr, tmpvar_37);
            x_38.y = dot (unity_SHAg, tmpvar_37);
            x_38.z = dot (unity_SHAb, tmpvar_37);
            mediump vec3 tmpvar_39;
            tmpvar_39 = max (((1.055 * 
              pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_38)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            tmpvar_2 = tmpvar_36;
            lowp vec4 c_40;
            lowp vec4 c_41;
            lowp float diff_42;
            mediump float tmpvar_43;
            tmpvar_43 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_42 = tmpvar_43;
            c_41.xyz = ((tmpvar_19.xyz * tmpvar_36) * diff_42);
            c_41.w = tmpvar_19.w;
            c_40.w = c_41.w;
            c_40.xyz = (c_41.xyz + (tmpvar_19.xyz * tmpvar_39));
            highp float tmpvar_44;
            tmpvar_44 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_40.xyz, vec3(tmpvar_44));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            mediump vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_11;
            highp vec4 tmpvar_12;
            tmpvar_12 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_11 = tmpvar_12.xyz;
            highp mat3 tmpvar_13;
            tmpvar_13[0] = unity_WorldToObject[0].xyz;
            tmpvar_13[1] = unity_WorldToObject[1].xyz;
            tmpvar_13[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize((_glesNormal * tmpvar_13));
            highp mat3 tmpvar_15;
            tmpvar_15[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_15[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_15[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize((tmpvar_15 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_16;
            highp float tmpvar_17;
            tmpvar_17 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = (((tmpvar_14.yzx * worldTangent_3.zxy) - (tmpvar_14.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_18;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.x;
            tmpvar_19.y = worldBinormal_1.x;
            tmpvar_19.z = tmpvar_14.x;
            tmpvar_19.w = tmpvar_11.x;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.y;
            tmpvar_20.y = worldBinormal_1.y;
            tmpvar_20.z = tmpvar_14.y;
            tmpvar_20.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_20.xzw;
            highp vec4 tmpvar_21;
            tmpvar_21.x = worldTangent_3.z;
            tmpvar_21.y = worldBinormal_1.z;
            tmpvar_21.z = tmpvar_14.z;
            tmpvar_21.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_21.xzw;
            highp vec3 lightColor0_22;
            lightColor0_22 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_23;
            lightColor1_23 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_24;
            lightColor2_24 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_25;
            lightColor3_25 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_26;
            lightAttenSq_26 = unity_4LightAtten0;
            highp vec3 col_27;
            highp vec4 ndotl_28;
            highp vec4 lengthSq_29;
            highp vec4 tmpvar_30;
            tmpvar_30 = (unity_4LightPosX0 - tmpvar_12.x);
            highp vec4 tmpvar_31;
            tmpvar_31 = (unity_4LightPosY0 - tmpvar_12.y);
            highp vec4 tmpvar_32;
            tmpvar_32 = (unity_4LightPosZ0 - tmpvar_12.z);
            lengthSq_29 = (tmpvar_30 * tmpvar_30);
            lengthSq_29 = (lengthSq_29 + (tmpvar_31 * tmpvar_31));
            lengthSq_29 = (lengthSq_29 + (tmpvar_32 * tmpvar_32));
            highp vec4 tmpvar_33;
            tmpvar_33 = max (lengthSq_29, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_29 = tmpvar_33;
            ndotl_28 = (tmpvar_30 * tmpvar_14.x);
            ndotl_28 = (ndotl_28 + (tmpvar_31 * tmpvar_14.y));
            ndotl_28 = (ndotl_28 + (tmpvar_32 * tmpvar_14.z));
            highp vec4 tmpvar_34;
            tmpvar_34 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_28 * inversesqrt(tmpvar_33)));
            ndotl_28 = tmpvar_34;
            highp vec4 tmpvar_35;
            tmpvar_35 = (tmpvar_34 * (1.0/((1.0 + 
              (tmpvar_33 * lightAttenSq_26)
            ))));
            col_27 = (lightColor0_22 * tmpvar_35.x);
            col_27 = (col_27 + (lightColor1_23 * tmpvar_35.y));
            col_27 = (col_27 + (lightColor2_24 * tmpvar_35.z));
            col_27 = (col_27 + (lightColor3_25 * tmpvar_35.w));
            tmpvar_7 = col_27;
            mediump vec3 normal_36;
            normal_36 = tmpvar_14;
            mediump vec3 ambient_37;
            mediump vec3 x1_38;
            mediump vec4 tmpvar_39;
            tmpvar_39 = (normal_36.xyzz * normal_36.yzzx);
            x1_38.x = dot (unity_SHBr, tmpvar_39);
            x1_38.y = dot (unity_SHBg, tmpvar_39);
            x1_38.z = dot (unity_SHBb, tmpvar_39);
            ambient_37 = ((tmpvar_7 * (
              (tmpvar_7 * ((tmpvar_7 * 0.305306) + 0.6821711))
             + 0.01252288)) + (x1_38 + (unity_SHC.xyz * 
              ((normal_36.x * normal_36.x) - (normal_36.y * normal_36.y))
            )));
            tmpvar_7 = ambient_37;
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_19;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = ambient_37;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_12);
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_35;
            normalWorld_35 = tmpvar_7;
            mediump vec3 tmpvar_36;
            tmpvar_36 = (tmpvar_2 * tmpvar_1);
            mediump vec4 tmpvar_37;
            tmpvar_37.w = 1.0;
            tmpvar_37.xyz = normalWorld_35;
            mediump vec3 x_38;
            x_38.x = dot (unity_SHAr, tmpvar_37);
            x_38.y = dot (unity_SHAg, tmpvar_37);
            x_38.z = dot (unity_SHAb, tmpvar_37);
            mediump vec3 tmpvar_39;
            tmpvar_39 = max (((1.055 * 
              pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_38)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            tmpvar_2 = tmpvar_36;
            lowp vec4 c_40;
            lowp vec4 c_41;
            lowp float diff_42;
            mediump float tmpvar_43;
            tmpvar_43 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_42 = tmpvar_43;
            c_41.xyz = ((tmpvar_19.xyz * tmpvar_36) * diff_42);
            c_41.w = tmpvar_19.w;
            c_40.w = c_41.w;
            c_40.xyz = (c_41.xyz + (tmpvar_19.xyz * tmpvar_39));
            highp float tmpvar_44;
            tmpvar_44 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_40.xyz, vec3(tmpvar_44));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 unity_4LightPosX0;
          uniform highp vec4 unity_4LightPosY0;
          uniform highp vec4 unity_4LightPosZ0;
          uniform mediump vec4 unity_4LightAtten0;
          uniform mediump vec4 unity_LightColor[8];
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            mediump vec3 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            highp vec4 tmpvar_10;
            tmpvar_10.w = 1.0;
            tmpvar_10.xyz = _glesVertex.xyz;
            tmpvar_9 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_10));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_11;
            highp vec4 tmpvar_12;
            tmpvar_12 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_11 = tmpvar_12.xyz;
            highp mat3 tmpvar_13;
            tmpvar_13[0] = unity_WorldToObject[0].xyz;
            tmpvar_13[1] = unity_WorldToObject[1].xyz;
            tmpvar_13[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize((_glesNormal * tmpvar_13));
            highp mat3 tmpvar_15;
            tmpvar_15[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_15[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_15[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize((tmpvar_15 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_16;
            highp float tmpvar_17;
            tmpvar_17 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = (((tmpvar_14.yzx * worldTangent_3.zxy) - (tmpvar_14.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_18;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.x;
            tmpvar_19.y = worldBinormal_1.x;
            tmpvar_19.z = tmpvar_14.x;
            tmpvar_19.w = tmpvar_11.x;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.y;
            tmpvar_20.y = worldBinormal_1.y;
            tmpvar_20.z = tmpvar_14.y;
            tmpvar_20.w = tmpvar_11.y;
            tmpvar_5.xzw = tmpvar_20.xzw;
            highp vec4 tmpvar_21;
            tmpvar_21.x = worldTangent_3.z;
            tmpvar_21.y = worldBinormal_1.z;
            tmpvar_21.z = tmpvar_14.z;
            tmpvar_21.w = tmpvar_11.z;
            tmpvar_6.xzw = tmpvar_21.xzw;
            highp vec3 lightColor0_22;
            lightColor0_22 = unity_LightColor[0].xyz;
            highp vec3 lightColor1_23;
            lightColor1_23 = unity_LightColor[1].xyz;
            highp vec3 lightColor2_24;
            lightColor2_24 = unity_LightColor[2].xyz;
            highp vec3 lightColor3_25;
            lightColor3_25 = unity_LightColor[3].xyz;
            highp vec4 lightAttenSq_26;
            lightAttenSq_26 = unity_4LightAtten0;
            highp vec3 col_27;
            highp vec4 ndotl_28;
            highp vec4 lengthSq_29;
            highp vec4 tmpvar_30;
            tmpvar_30 = (unity_4LightPosX0 - tmpvar_12.x);
            highp vec4 tmpvar_31;
            tmpvar_31 = (unity_4LightPosY0 - tmpvar_12.y);
            highp vec4 tmpvar_32;
            tmpvar_32 = (unity_4LightPosZ0 - tmpvar_12.z);
            lengthSq_29 = (tmpvar_30 * tmpvar_30);
            lengthSq_29 = (lengthSq_29 + (tmpvar_31 * tmpvar_31));
            lengthSq_29 = (lengthSq_29 + (tmpvar_32 * tmpvar_32));
            highp vec4 tmpvar_33;
            tmpvar_33 = max (lengthSq_29, vec4(1e-6, 1e-6, 1e-6, 1e-6));
            lengthSq_29 = tmpvar_33;
            ndotl_28 = (tmpvar_30 * tmpvar_14.x);
            ndotl_28 = (ndotl_28 + (tmpvar_31 * tmpvar_14.y));
            ndotl_28 = (ndotl_28 + (tmpvar_32 * tmpvar_14.z));
            highp vec4 tmpvar_34;
            tmpvar_34 = max (vec4(0.0, 0.0, 0.0, 0.0), (ndotl_28 * inversesqrt(tmpvar_33)));
            ndotl_28 = tmpvar_34;
            highp vec4 tmpvar_35;
            tmpvar_35 = (tmpvar_34 * (1.0/((1.0 + 
              (tmpvar_33 * lightAttenSq_26)
            ))));
            col_27 = (lightColor0_22 * tmpvar_35.x);
            col_27 = (col_27 + (lightColor1_23 * tmpvar_35.y));
            col_27 = (col_27 + (lightColor2_24 * tmpvar_35.z));
            col_27 = (col_27 + (lightColor3_25 * tmpvar_35.w));
            tmpvar_7 = col_27;
            mediump vec3 normal_36;
            normal_36 = tmpvar_14;
            mediump vec3 ambient_37;
            mediump vec3 x1_38;
            mediump vec4 tmpvar_39;
            tmpvar_39 = (normal_36.xyzz * normal_36.yzzx);
            x1_38.x = dot (unity_SHBr, tmpvar_39);
            x1_38.y = dot (unity_SHBg, tmpvar_39);
            x1_38.z = dot (unity_SHBb, tmpvar_39);
            ambient_37 = ((tmpvar_7 * (
              (tmpvar_7 * ((tmpvar_7 * 0.305306) + 0.6821711))
             + 0.01252288)) + (x1_38 + (unity_SHC.xyz * 
              ((normal_36.x * normal_36.x) - (normal_36.y * normal_36.y))
            )));
            tmpvar_7 = ambient_37;
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_9.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_9;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_19;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD4 = ambient_37;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_12);
            xlv_TEXCOORD7 = tmpvar_8;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_35;
            normalWorld_35 = tmpvar_7;
            mediump vec3 tmpvar_36;
            tmpvar_36 = (tmpvar_2 * tmpvar_1);
            mediump vec4 tmpvar_37;
            tmpvar_37.w = 1.0;
            tmpvar_37.xyz = normalWorld_35;
            mediump vec3 x_38;
            x_38.x = dot (unity_SHAr, tmpvar_37);
            x_38.y = dot (unity_SHAg, tmpvar_37);
            x_38.z = dot (unity_SHAb, tmpvar_37);
            mediump vec3 tmpvar_39;
            tmpvar_39 = max (((1.055 * 
              pow (max (vec3(0.0, 0.0, 0.0), (xlv_TEXCOORD4 + x_38)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            tmpvar_2 = tmpvar_36;
            lowp vec4 c_40;
            lowp vec4 c_41;
            lowp float diff_42;
            mediump float tmpvar_43;
            tmpvar_43 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_42 = tmpvar_43;
            c_41.xyz = ((tmpvar_19.xyz * tmpvar_36) * diff_42);
            c_41.w = tmpvar_19.w;
            c_40.w = c_41.w;
            c_40.xyz = (c_41.xyz + (tmpvar_19.xyz * tmpvar_39));
            highp float tmpvar_44;
            tmpvar_44 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_40.xyz, vec3(tmpvar_44));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          mediump vec4 u_xlat16_2;
          vec4 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_5;
          mediump vec3 u_xlat16_6;
          float u_xlat21;
          float u_xlat22;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = inversesqrt(u_xlat21);
              u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat22 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat22 = inversesqrt(u_xlat22);
              u_xlat2 = vec4(u_xlat22) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
              u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat21) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.w;
              u_xlat1 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat2.yyyy * u_xlat3;
              u_xlat3 = u_xlat3 * u_xlat3;
              u_xlat3 = u_xlat1 * u_xlat1 + u_xlat3;
              u_xlat1 = u_xlat1 * u_xlat2.xxxx + u_xlat4;
              u_xlat1 = u_xlat0 * u_xlat2.wwzw + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat3 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat3;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat1.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017) + vec3(0.682171106, 0.682171106, 0.682171106);
              u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);
              u_xlat16_5.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_5.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_5.x);
              u_xlat16_2 = u_xlat2.ywzx * u_xlat2;
              u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
              u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
              u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
              u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
              vs_TEXCOORD4.xyz = u_xlat0.xyz * u_xlat1.xyz + u_xlat16_5.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec4 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec3 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat1.w = 1.0;
              u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
              u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
              u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
              u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_1.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          mediump vec4 u_xlat16_2;
          vec4 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_5;
          mediump vec3 u_xlat16_6;
          float u_xlat21;
          float u_xlat22;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = inversesqrt(u_xlat21);
              u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat22 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat22 = inversesqrt(u_xlat22);
              u_xlat2 = vec4(u_xlat22) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
              u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat21) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.w;
              u_xlat1 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat2.yyyy * u_xlat3;
              u_xlat3 = u_xlat3 * u_xlat3;
              u_xlat3 = u_xlat1 * u_xlat1 + u_xlat3;
              u_xlat1 = u_xlat1 * u_xlat2.xxxx + u_xlat4;
              u_xlat1 = u_xlat0 * u_xlat2.wwzw + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat3 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat3;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat1.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017) + vec3(0.682171106, 0.682171106, 0.682171106);
              u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);
              u_xlat16_5.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_5.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_5.x);
              u_xlat16_2 = u_xlat2.ywzx * u_xlat2;
              u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
              u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
              u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
              u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
              vs_TEXCOORD4.xyz = u_xlat0.xyz * u_xlat1.xyz + u_xlat16_5.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec4 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec3 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat1.w = 1.0;
              u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
              u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
              u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
              u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_1.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 unity_4LightPosX0;
          uniform 	vec4 unity_4LightPosY0;
          uniform 	vec4 unity_4LightPosZ0;
          uniform 	mediump vec4 unity_4LightAtten0;
          uniform 	mediump vec4 unity_LightColor[8];
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out mediump vec3 vs_TEXCOORD4;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          mediump vec4 u_xlat16_2;
          vec4 u_xlat3;
          vec4 u_xlat4;
          mediump vec3 u_xlat16_5;
          mediump vec3 u_xlat16_6;
          float u_xlat21;
          float u_xlat22;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = inversesqrt(u_xlat21);
              u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
              vs_TEXCOORD1.x = u_xlat1.z;
              u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat22 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat22 = inversesqrt(u_xlat22);
              u_xlat2 = vec4(u_xlat22) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.wxy;
              u_xlat3.xyz = u_xlat2.ywx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = vec3(u_xlat21) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.w = u_xlat0.x;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat2.w;
              u_xlat1 = (-u_xlat0.xxxx) + unity_4LightPosX0;
              u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
              u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
              u_xlat4 = u_xlat2.yyyy * u_xlat3;
              u_xlat3 = u_xlat3 * u_xlat3;
              u_xlat3 = u_xlat1 * u_xlat1 + u_xlat3;
              u_xlat1 = u_xlat1 * u_xlat2.xxxx + u_xlat4;
              u_xlat1 = u_xlat0 * u_xlat2.wwzw + u_xlat1;
              u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
              u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
              u_xlat3 = inversesqrt(u_xlat0);
              u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
              u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
              u_xlat1 = u_xlat1 * u_xlat3;
              u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));
              u_xlat0 = u_xlat0 * u_xlat1;
              u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
              u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
              u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
              u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
              u_xlat1.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017) + vec3(0.682171106, 0.682171106, 0.682171106);
              u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);
              u_xlat16_5.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_5.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_5.x);
              u_xlat16_2 = u_xlat2.ywzx * u_xlat2;
              u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);
              u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);
              u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);
              u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
              vs_TEXCOORD4.xyz = u_xlat0.xyz * u_xlat1.xyz + u_xlat16_5.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD4;
          in highp float vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec4 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec3 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat1.w = 1.0;
              u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
              u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
              u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
              u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_1.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_11);
            xlv_TEXCOORD7 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_35;
            mediump vec3 tmpvar_36;
            tmpvar_35 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_37;
            tmpvar_37 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_36 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_37.w) * tmpvar_37.xyz), unity_DynamicLightmap_HDR.yyy);
            tmpvar_2 = tmpvar_35;
            lowp vec4 c_38;
            lowp vec4 c_39;
            lowp float diff_40;
            mediump float tmpvar_41;
            tmpvar_41 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_40 = tmpvar_41;
            c_39.xyz = ((tmpvar_19.xyz * tmpvar_35) * diff_40);
            c_39.w = tmpvar_19.w;
            c_38.w = c_39.w;
            c_38.xyz = (c_39.xyz + (tmpvar_19.xyz * tmpvar_36));
            highp float tmpvar_42;
            tmpvar_42 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_38.xyz, vec3(tmpvar_42));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_11);
            xlv_TEXCOORD7 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_35;
            mediump vec3 tmpvar_36;
            tmpvar_35 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_37;
            tmpvar_37 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_36 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_37.w) * tmpvar_37.xyz), unity_DynamicLightmap_HDR.yyy);
            tmpvar_2 = tmpvar_35;
            lowp vec4 c_38;
            lowp vec4 c_39;
            lowp float diff_40;
            mediump float tmpvar_41;
            tmpvar_41 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_40 = tmpvar_41;
            c_39.xyz = ((tmpvar_19.xyz * tmpvar_35) * diff_40);
            c_39.w = tmpvar_19.w;
            c_38.w = c_39.w;
            c_38.xyz = (c_39.xyz + (tmpvar_19.xyz * tmpvar_36));
            highp float tmpvar_42;
            tmpvar_42 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_38.xyz, vec3(tmpvar_42));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_11);
            xlv_TEXCOORD7 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 tmpvar_35;
            mediump vec3 tmpvar_36;
            tmpvar_35 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_37;
            tmpvar_37 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            tmpvar_36 = pow (((unity_DynamicLightmap_HDR.x * tmpvar_37.w) * tmpvar_37.xyz), unity_DynamicLightmap_HDR.yyy);
            tmpvar_2 = tmpvar_35;
            lowp vec4 c_38;
            lowp vec4 c_39;
            lowp float diff_40;
            mediump float tmpvar_41;
            tmpvar_41 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_40 = tmpvar_41;
            c_39.xyz = ((tmpvar_19.xyz * tmpvar_35) * diff_40);
            c_39.w = tmpvar_19.w;
            c_38.w = c_39.w;
            c_38.xyz = (c_39.xyz + (tmpvar_19.xyz * tmpvar_36));
            highp float tmpvar_42;
            tmpvar_42 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_38.xyz, vec3(tmpvar_42));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat16_1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat16_1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          vec3 u_xlat6;
          lowp float u_xlat10_6;
          mediump float u_xlat16_9;
          float u_xlat18;
          mediump float u_xlat16_18;
          mediump float u_xlat16_21;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = sqrt(u_xlat18);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat6.x = (-u_xlat0.x) + u_xlat18;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat6.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat6.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat6.xyz;
              u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat6.xyz;
              u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat6.xy,u_xlat6.z);
              u_xlat10_6 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_6 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_9 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_9 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_5.x = dot(vs_TEXCOORD1.xyz, u_xlat16_4.xyz);
              u_xlat16_5.y = dot(vs_TEXCOORD2.xyz, u_xlat16_4.xyz);
              u_xlat16_5.z = dot(vs_TEXCOORD3.xyz, u_xlat16_4.xyz);
              u_xlat16_18 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);
              u_xlat16_18 = inversesqrt(u_xlat16_18);
              u_xlat16_1.xyz = vec3(u_xlat16_18) * u_xlat16_5.xyz;
              u_xlat16_21 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_21 = max(u_xlat16_21, 0.0);
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_4.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * u_xlat16_4.xxx;
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_4.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_21) + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat18 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat18 = min(max(u_xlat18, 0.0), 1.0);
          #else
              u_xlat18 = clamp(u_xlat18, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat18) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_11);
            xlv_TEXCOORD7 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_35;
            normalWorld_35 = tmpvar_7;
            mediump vec4 realtimeDirTex_36;
            mediump vec3 tmpvar_37;
            mediump vec3 tmpvar_38;
            tmpvar_37 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_39;
            tmpvar_39 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_40;
            tmpvar_40 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_36 = tmpvar_40;
            lowp vec4 dirTex_41;
            dirTex_41 = realtimeDirTex_36;
            lowp vec3 y_42;
            y_42 = (dirTex_41.xyz - 0.5);
            lowp float tmpvar_43;
            tmpvar_43 = max (0.0001, dirTex_41.w);
            tmpvar_38 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_39.w) * tmpvar_39.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_35, y_42)
             + 0.5)) / tmpvar_43);
            tmpvar_2 = tmpvar_37;
            lowp vec4 c_44;
            lowp vec4 c_45;
            lowp float diff_46;
            mediump float tmpvar_47;
            tmpvar_47 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_46 = tmpvar_47;
            c_45.xyz = ((tmpvar_19.xyz * tmpvar_37) * diff_46);
            c_45.w = tmpvar_19.w;
            c_44.w = c_45.w;
            c_44.xyz = (c_45.xyz + (tmpvar_19.xyz * tmpvar_38));
            highp float tmpvar_48;
            tmpvar_48 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_44.xyz, vec3(tmpvar_48));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_11);
            xlv_TEXCOORD7 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_35;
            normalWorld_35 = tmpvar_7;
            mediump vec4 realtimeDirTex_36;
            mediump vec3 tmpvar_37;
            mediump vec3 tmpvar_38;
            tmpvar_37 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_39;
            tmpvar_39 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_40;
            tmpvar_40 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_36 = tmpvar_40;
            lowp vec4 dirTex_41;
            dirTex_41 = realtimeDirTex_36;
            lowp vec3 y_42;
            y_42 = (dirTex_41.xyz - 0.5);
            lowp float tmpvar_43;
            tmpvar_43 = max (0.0001, dirTex_41.w);
            tmpvar_38 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_39.w) * tmpvar_39.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_35, y_42)
             + 0.5)) / tmpvar_43);
            tmpvar_2 = tmpvar_37;
            lowp vec4 c_44;
            lowp vec4 c_45;
            lowp float diff_46;
            mediump float tmpvar_47;
            tmpvar_47 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_46 = tmpvar_47;
            c_45.xyz = ((tmpvar_19.xyz * tmpvar_37) * diff_46);
            c_45.w = tmpvar_19.w;
            c_44.w = c_45.w;
            c_44.xyz = (c_45.xyz + (tmpvar_19.xyz * tmpvar_38));
            highp float tmpvar_48;
            tmpvar_48 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_44.xyz, vec3(tmpvar_48));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_WorldToShadow[4];
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            highp vec4 tmpvar_8;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = _glesVertex.xyz;
            tmpvar_8 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_9));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_10;
            highp vec4 tmpvar_11;
            tmpvar_11 = (unity_ObjectToWorld * _glesVertex);
            tmpvar_10 = tmpvar_11.xyz;
            highp mat3 tmpvar_12;
            tmpvar_12[0] = unity_WorldToObject[0].xyz;
            tmpvar_12[1] = unity_WorldToObject[1].xyz;
            tmpvar_12[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_13;
            tmpvar_13 = normalize((_glesNormal * tmpvar_12));
            highp mat3 tmpvar_14;
            tmpvar_14[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_14[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_14[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize((tmpvar_14 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_15;
            highp float tmpvar_16;
            tmpvar_16 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_16;
            highp vec3 tmpvar_17;
            tmpvar_17 = (((tmpvar_13.yzx * worldTangent_3.zxy) - (tmpvar_13.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_17;
            highp vec4 tmpvar_18;
            tmpvar_18.x = worldTangent_3.x;
            tmpvar_18.y = worldBinormal_1.x;
            tmpvar_18.z = tmpvar_13.x;
            tmpvar_18.w = tmpvar_10.x;
            highp vec4 tmpvar_19;
            tmpvar_19.x = worldTangent_3.y;
            tmpvar_19.y = worldBinormal_1.y;
            tmpvar_19.z = tmpvar_13.y;
            tmpvar_19.w = tmpvar_10.y;
            tmpvar_5.xzw = tmpvar_19.xzw;
            highp vec4 tmpvar_20;
            tmpvar_20.x = worldTangent_3.z;
            tmpvar_20.y = worldBinormal_1.z;
            tmpvar_20.z = tmpvar_13.z;
            tmpvar_20.w = tmpvar_10.z;
            tmpvar_6.xzw = tmpvar_20.xzw;
            tmpvar_7.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.y = tangentSign_2;
            tmpvar_6.y = ((tmpvar_8.z * unity_FogParams.z) + unity_FogParams.w);
            gl_Position = tmpvar_8;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_18;
            xlv_TEXCOORD2 = tmpvar_5;
            xlv_TEXCOORD3 = tmpvar_6;
            xlv_TEXCOORD6 = (unity_WorldToShadow[0] * tmpvar_11);
            xlv_TEXCOORD7 = tmpvar_7;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec3 _WorldSpaceCameraPos;
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform mediump vec4 _LightShadowData;
          uniform highp vec4 unity_ShadowFadeCenterAndType;
          uniform highp mat4 unity_MatrixV;
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _ShadowMapTexture;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp vec4 xlv_TEXCOORD7;
          void main ()
          {
            mediump float tmpvar_1;
            mediump vec3 tmpvar_2;
            mediump vec3 tmpvar_3;
            highp vec3 worldN_4;
            lowp vec4 c_5;
            lowp float atten_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_binormal_9;
            lowp vec3 _unity_normal_10;
            lowp vec3 _unity_tangent_11;
            highp vec3 tmpvar_12;
            tmpvar_12.x = xlv_TEXCOORD1.x;
            tmpvar_12.y = xlv_TEXCOORD2.x;
            tmpvar_12.z = xlv_TEXCOORD3.x;
            _unity_tangent_11 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = xlv_TEXCOORD1.z;
            tmpvar_13.y = xlv_TEXCOORD2.z;
            tmpvar_13.z = xlv_TEXCOORD3.z;
            _unity_normal_10 = tmpvar_13;
            _unity_binormal_9 = (((_unity_normal_10.yzx * _unity_tangent_11.zxy) - (_unity_normal_10.zxy * _unity_tangent_11.yzx)) * xlv_TEXCOORD2.y);
            lowp vec3 tmpvar_14;
            tmpvar_14.x = _unity_tangent_11.x;
            tmpvar_14.y = _unity_binormal_9.x;
            tmpvar_14.z = _unity_normal_10.x;
            lowp vec3 tmpvar_15;
            tmpvar_15.x = _unity_tangent_11.y;
            tmpvar_15.y = _unity_binormal_9.y;
            tmpvar_15.z = _unity_normal_10.y;
            lowp vec3 tmpvar_16;
            tmpvar_16.x = _unity_tangent_11.z;
            tmpvar_16.y = _unity_binormal_9.z;
            tmpvar_16.z = _unity_normal_10.z;
            highp vec3 tmpvar_17;
            tmpvar_17.x = xlv_TEXCOORD1.w;
            tmpvar_17.y = xlv_TEXCOORD2.w;
            tmpvar_17.z = xlv_TEXCOORD3.w;
            mediump vec3 tmpvar_18;
            tmpvar_18 = _WorldSpaceLightPos0.xyz;
            lightDir_8 = tmpvar_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_20;
            tmpvar_20 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            mediump float realtimeShadowAttenuation_21;
            highp vec4 v_22;
            v_22.x = unity_MatrixV[0].z;
            v_22.y = unity_MatrixV[1].z;
            v_22.z = unity_MatrixV[2].z;
            v_22.w = unity_MatrixV[3].z;
            highp vec3 tmpvar_23;
            tmpvar_23 = (tmpvar_17 - unity_ShadowFadeCenterAndType.xyz);
            mediump float tmpvar_24;
            highp float tmpvar_25;
            tmpvar_25 = clamp (((
              mix (dot ((_WorldSpaceCameraPos - tmpvar_17), v_22.xyz), sqrt(dot (tmpvar_23, tmpvar_23)), unity_ShadowFadeCenterAndType.w)
             * _LightShadowData.z) + _LightShadowData.w), 0.0, 1.0);
            tmpvar_24 = tmpvar_25;
            lowp float tmpvar_26;
            highp float lightShadowDataX_27;
            mediump float tmpvar_28;
            tmpvar_28 = _LightShadowData.x;
            lightShadowDataX_27 = tmpvar_28;
            highp float tmpvar_29;
            tmpvar_29 = max (float((texture2D (_ShadowMapTexture, xlv_TEXCOORD6.xy).x > xlv_TEXCOORD6.z)), lightShadowDataX_27);
            tmpvar_26 = tmpvar_29;
            realtimeShadowAttenuation_21 = tmpvar_26;
            mediump float tmpvar_30;
            tmpvar_30 = mix (realtimeShadowAttenuation_21, 1.0, tmpvar_24);
            atten_6 = tmpvar_30;
            lowp float tmpvar_31;
            tmpvar_31 = dot (tmpvar_14, tmpvar_20);
            worldN_4.x = tmpvar_31;
            lowp float tmpvar_32;
            tmpvar_32 = dot (tmpvar_15, tmpvar_20);
            worldN_4.y = tmpvar_32;
            lowp float tmpvar_33;
            tmpvar_33 = dot (tmpvar_16, tmpvar_20);
            worldN_4.z = tmpvar_33;
            highp vec3 tmpvar_34;
            tmpvar_34 = normalize(worldN_4);
            worldN_4 = tmpvar_34;
            tmpvar_7 = tmpvar_34;
            tmpvar_2 = _LightColor0.xyz;
            tmpvar_3 = lightDir_8;
            tmpvar_1 = atten_6;
            mediump vec3 normalWorld_35;
            normalWorld_35 = tmpvar_7;
            mediump vec4 realtimeDirTex_36;
            mediump vec3 tmpvar_37;
            mediump vec3 tmpvar_38;
            tmpvar_37 = (tmpvar_2 * tmpvar_1);
            lowp vec4 tmpvar_39;
            tmpvar_39 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD7.zw);
            lowp vec4 tmpvar_40;
            tmpvar_40 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD7.zw);
            realtimeDirTex_36 = tmpvar_40;
            lowp vec4 dirTex_41;
            dirTex_41 = realtimeDirTex_36;
            lowp vec3 y_42;
            y_42 = (dirTex_41.xyz - 0.5);
            lowp float tmpvar_43;
            tmpvar_43 = max (0.0001, dirTex_41.w);
            tmpvar_38 = ((pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_39.w) * tmpvar_39.xyz)
            , unity_DynamicLightmap_HDR.yyy) * (
              dot (normalWorld_35, y_42)
             + 0.5)) / tmpvar_43);
            tmpvar_2 = tmpvar_37;
            lowp vec4 c_44;
            lowp vec4 c_45;
            lowp float diff_46;
            mediump float tmpvar_47;
            tmpvar_47 = max (0.0, dot (tmpvar_7, tmpvar_3));
            diff_46 = tmpvar_47;
            c_45.xyz = ((tmpvar_19.xyz * tmpvar_37) * diff_46);
            c_45.w = tmpvar_19.w;
            c_44.w = c_45.w;
            c_44.xyz = (c_45.xyz + (tmpvar_19.xyz * tmpvar_38));
            highp float tmpvar_48;
            tmpvar_48 = clamp (xlv_TEXCOORD3.y, 0.0, 1.0);
            c_5.xyz = mix (unity_FogColor.xyz, c_44.xyz, vec3(tmpvar_48));
            c_5.w = 1.0;
            gl_FragData[0] = c_5;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          mediump vec3 u_xlat16_6;
          vec3 u_xlat7;
          lowp float u_xlat10_7;
          mediump float u_xlat16_10;
          float u_xlat21;
          mediump float u_xlat16_21;
          mediump float u_xlat16_24;
          mediump float u_xlat16_25;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = sqrt(u_xlat21);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat7.x = (-u_xlat0.x) + u_xlat21;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat7.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat7.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat7.xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat7.xyz;
              u_xlat7.xyz = u_xlat7.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat7.xy,u_xlat7.z);
              u_xlat10_7 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_7 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_10 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_10 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_24 = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(u_xlat16_24);
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_5.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_6.x = dot(vs_TEXCOORD1.xyz, u_xlat16_5.xyz);
              u_xlat16_6.y = dot(vs_TEXCOORD2.xyz, u_xlat16_5.xyz);
              u_xlat16_6.z = dot(vs_TEXCOORD3.xyz, u_xlat16_5.xyz);
              u_xlat16_21 = dot(u_xlat16_6.xyz, u_xlat16_6.xyz);
              u_xlat16_21 = inversesqrt(u_xlat16_21);
              u_xlat16_1.xyz = vec3(u_xlat16_21) * u_xlat16_6.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_5.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_21 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_24 = dot(u_xlat16_1.xyz, u_xlat16_5.xyz);
              u_xlat16_25 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_25 = max(u_xlat16_25, 0.0);
              u_xlat16_24 = u_xlat16_24 + 0.5;
              u_xlat16_4.xyz = vec3(u_xlat16_24) * u_xlat16_4.xyz;
              u_xlat16_1.xyz = u_xlat16_4.xyz / vec3(u_xlat16_21);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_25) + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat21 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat21 = min(max(u_xlat21, 0.0), 1.0);
          #else
              u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat21) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          mediump vec3 u_xlat16_6;
          vec3 u_xlat7;
          lowp float u_xlat10_7;
          mediump float u_xlat16_10;
          float u_xlat21;
          mediump float u_xlat16_21;
          mediump float u_xlat16_24;
          mediump float u_xlat16_25;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = sqrt(u_xlat21);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat7.x = (-u_xlat0.x) + u_xlat21;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat7.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat7.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat7.xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat7.xyz;
              u_xlat7.xyz = u_xlat7.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat7.xy,u_xlat7.z);
              u_xlat10_7 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_7 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_10 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_10 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_24 = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(u_xlat16_24);
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_5.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_6.x = dot(vs_TEXCOORD1.xyz, u_xlat16_5.xyz);
              u_xlat16_6.y = dot(vs_TEXCOORD2.xyz, u_xlat16_5.xyz);
              u_xlat16_6.z = dot(vs_TEXCOORD3.xyz, u_xlat16_5.xyz);
              u_xlat16_21 = dot(u_xlat16_6.xyz, u_xlat16_6.xyz);
              u_xlat16_21 = inversesqrt(u_xlat16_21);
              u_xlat16_1.xyz = vec3(u_xlat16_21) * u_xlat16_6.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_5.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_21 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_24 = dot(u_xlat16_1.xyz, u_xlat16_5.xyz);
              u_xlat16_25 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_25 = max(u_xlat16_25, 0.0);
              u_xlat16_24 = u_xlat16_24 + 0.5;
              u_xlat16_4.xyz = vec3(u_xlat16_24) * u_xlat16_4.xyz;
              u_xlat16_1.xyz = u_xlat16_4.xyz / vec3(u_xlat16_21);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_25) + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat21 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat21 = min(max(u_xlat21, 0.0), 1.0);
          #else
              u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat21) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "VERTEXLIGHT_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp float vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          out highp vec4 vs_TEXCOORD7;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD5 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              vs_TEXCOORD7.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD7.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          #ifdef GL_EXT_shader_texture_lod
          #extension GL_EXT_shader_texture_lod : enable
          #endif
          
          precision highp int;
          uniform 	vec3 _WorldSpaceCameraPos;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
          uniform 	mediump vec4 _LightShadowData;
          uniform 	vec4 unity_ShadowFadeCenterAndType;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          uniform lowp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
          uniform lowp sampler2D _ShadowMapTexture;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          vec3 u_xlat2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          mediump vec3 u_xlat16_6;
          vec3 u_xlat7;
          lowp float u_xlat10_7;
          mediump float u_xlat16_10;
          float u_xlat21;
          mediump float u_xlat16_21;
          mediump float u_xlat16_24;
          mediump float u_xlat16_25;
          void main()
          {
              u_xlat0.x = hlslcc_mtx4x4unity_MatrixV[0].z;
              u_xlat0.y = hlslcc_mtx4x4unity_MatrixV[1].z;
              u_xlat0.z = hlslcc_mtx4x4unity_MatrixV[2].z;
              u_xlat1.x = vs_TEXCOORD1.w;
              u_xlat1.y = vs_TEXCOORD2.w;
              u_xlat1.z = vs_TEXCOORD3.w;
              u_xlat2.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;
              u_xlat1.xyz = u_xlat1.xyz + (-unity_ShadowFadeCenterAndType.xyz);
              u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat21 = sqrt(u_xlat21);
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat0.xyz);
              u_xlat7.x = (-u_xlat0.x) + u_xlat21;
              u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat7.x + u_xlat0.x;
              u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat7.xyz = vs_TEXCOORD2.www * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD1.www + u_xlat7.xyz;
              u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD3.www + u_xlat7.xyz;
              u_xlat7.xyz = u_xlat7.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
              vec3 txVec0 = vec3(u_xlat7.xy,u_xlat7.z);
              u_xlat10_7 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
              u_xlat16_3.x = (-_LightShadowData.x) + 1.0;
              u_xlat16_3.x = u_xlat10_7 * u_xlat16_3.x + _LightShadowData.x;
              u_xlat16_10 = (-u_xlat16_3.x) + 1.0;
              u_xlat16_3.x = u_xlat0.x * u_xlat16_10 + u_xlat16_3.x;
              u_xlat16_3.xyz = u_xlat16_3.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD7.zw);
              u_xlat16_24 = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_4.xyz = u_xlat10_1.xyz * vec3(u_xlat16_24);
              u_xlat16_4.xyz = log2(u_xlat16_4.xyz);
              u_xlat16_4.xyz = u_xlat16_4.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_4.xyz = exp2(u_xlat16_4.xyz);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_5.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_6.x = dot(vs_TEXCOORD1.xyz, u_xlat16_5.xyz);
              u_xlat16_6.y = dot(vs_TEXCOORD2.xyz, u_xlat16_5.xyz);
              u_xlat16_6.z = dot(vs_TEXCOORD3.xyz, u_xlat16_5.xyz);
              u_xlat16_21 = dot(u_xlat16_6.xyz, u_xlat16_6.xyz);
              u_xlat16_21 = inversesqrt(u_xlat16_21);
              u_xlat16_1.xyz = vec3(u_xlat16_21) * u_xlat16_6.xyz;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD7.zw);
              u_xlat16_5.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_21 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_24 = dot(u_xlat16_1.xyz, u_xlat16_5.xyz);
              u_xlat16_25 = dot(u_xlat16_1.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_25 = max(u_xlat16_25, 0.0);
              u_xlat16_24 = u_xlat16_24 + 0.5;
              u_xlat16_4.xyz = vec3(u_xlat16_24) * u_xlat16_4.xyz;
              u_xlat16_1.xyz = u_xlat16_4.xyz / vec3(u_xlat16_21);
              u_xlat16_4.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              u_xlat16_3.xyz = u_xlat16_3.xyz * vec3(u_xlat16_25) + u_xlat16_4.xyz;
              u_xlat16_0.xyz = u_xlat16_3.xyz + (-unity_FogColor.xyz);
              u_xlat21 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat21 = min(max(u_xlat21, 0.0), 1.0);
          #else
              u_xlat21 = clamp(u_xlat21, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat21) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
      }
      Program "fp"
      {
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
      }
      
    } // end phase
    Pass // ind: 2, name: FORWARD
    {
      Name "FORWARD"
      Tags
      { 
        "LIGHTMODE" = "FORWARDADD"
        "RenderType" = "Opaque"
      }
      LOD 300
      ZWrite Off
      Blend One One
      GpuProgramID 75814
      // m_ProgramMask = 6
      !!! *******************************************************************************************
      !!! Allow restore shader as UnityLab format - only available for DevX GameRecovery license type
      !!! *******************************************************************************************
      Program "vp"
      {
        SubProgram "gles hw_tier00"
        {
           Keywords { "POINT" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_7;
            tmpvar_7[0] = unity_WorldToObject[0].xyz;
            tmpvar_7[1] = unity_WorldToObject[1].xyz;
            tmpvar_7[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = normalize((_glesNormal * tmpvar_7));
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_10;
            highp float tmpvar_11;
            tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = (((tmpvar_8.yzx * worldTangent_3.zxy) - (tmpvar_8.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = worldTangent_3.x;
            tmpvar_13.y = worldBinormal_1.x;
            tmpvar_13.z = tmpvar_8.x;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.y;
            tmpvar_14.y = worldBinormal_1.y;
            tmpvar_14.z = tmpvar_8.y;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.z;
            tmpvar_15.y = worldBinormal_1.z;
            tmpvar_15.z = tmpvar_8.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_13;
            xlv_TEXCOORD2 = tmpvar_14;
            xlv_TEXCOORD3 = tmpvar_15;
            highp vec4 tmpvar_16;
            tmpvar_16 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_16.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_16).xyz;
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _LightTexture0;
          uniform highp mat4 unity_WorldToLight;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            highp vec3 lightCoord_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            _unity_tbn_0_11 = xlv_TEXCOORD1;
            _unity_tbn_1_10 = xlv_TEXCOORD2;
            _unity_tbn_2_9 = xlv_TEXCOORD3;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
            lightDir_8 = tmpvar_12;
            lowp vec4 tmpvar_13;
            tmpvar_13 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_14;
            tmpvar_14 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            highp vec4 tmpvar_15;
            tmpvar_15.w = 1.0;
            tmpvar_15.xyz = xlv_TEXCOORD4;
            lightCoord_6 = (unity_WorldToLight * tmpvar_15).xyz;
            highp float tmpvar_16;
            tmpvar_16 = texture2D (_LightTexture0, vec2(dot (lightCoord_6, lightCoord_6))).x;
            atten_5 = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_0_11, tmpvar_14);
            worldN_3.x = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_1_10, tmpvar_14);
            worldN_3.y = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (_unity_tbn_2_9, tmpvar_14);
            worldN_3.z = tmpvar_19;
            highp vec3 tmpvar_20;
            tmpvar_20 = normalize(worldN_3);
            worldN_3 = tmpvar_20;
            tmpvar_7 = tmpvar_20;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_8;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_21;
            lowp vec4 c_22;
            lowp float diff_23;
            mediump float tmpvar_24;
            tmpvar_24 = max (0.0, dot (tmpvar_7, tmpvar_2));
            diff_23 = tmpvar_24;
            c_22.xyz = ((tmpvar_13.xyz * tmpvar_1) * diff_23);
            c_22.w = tmpvar_13.w;
            c_21.w = c_22.w;
            c_21.xyz = c_22.xyz;
            c_4.xyz = c_21.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "POINT" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_7;
            tmpvar_7[0] = unity_WorldToObject[0].xyz;
            tmpvar_7[1] = unity_WorldToObject[1].xyz;
            tmpvar_7[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = normalize((_glesNormal * tmpvar_7));
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_10;
            highp float tmpvar_11;
            tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = (((tmpvar_8.yzx * worldTangent_3.zxy) - (tmpvar_8.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = worldTangent_3.x;
            tmpvar_13.y = worldBinormal_1.x;
            tmpvar_13.z = tmpvar_8.x;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.y;
            tmpvar_14.y = worldBinormal_1.y;
            tmpvar_14.z = tmpvar_8.y;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.z;
            tmpvar_15.y = worldBinormal_1.z;
            tmpvar_15.z = tmpvar_8.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_13;
            xlv_TEXCOORD2 = tmpvar_14;
            xlv_TEXCOORD3 = tmpvar_15;
            highp vec4 tmpvar_16;
            tmpvar_16 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_16.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_16).xyz;
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _LightTexture0;
          uniform highp mat4 unity_WorldToLight;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            highp vec3 lightCoord_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            _unity_tbn_0_11 = xlv_TEXCOORD1;
            _unity_tbn_1_10 = xlv_TEXCOORD2;
            _unity_tbn_2_9 = xlv_TEXCOORD3;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
            lightDir_8 = tmpvar_12;
            lowp vec4 tmpvar_13;
            tmpvar_13 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_14;
            tmpvar_14 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            highp vec4 tmpvar_15;
            tmpvar_15.w = 1.0;
            tmpvar_15.xyz = xlv_TEXCOORD4;
            lightCoord_6 = (unity_WorldToLight * tmpvar_15).xyz;
            highp float tmpvar_16;
            tmpvar_16 = texture2D (_LightTexture0, vec2(dot (lightCoord_6, lightCoord_6))).x;
            atten_5 = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_0_11, tmpvar_14);
            worldN_3.x = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_1_10, tmpvar_14);
            worldN_3.y = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (_unity_tbn_2_9, tmpvar_14);
            worldN_3.z = tmpvar_19;
            highp vec3 tmpvar_20;
            tmpvar_20 = normalize(worldN_3);
            worldN_3 = tmpvar_20;
            tmpvar_7 = tmpvar_20;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_8;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_21;
            lowp vec4 c_22;
            lowp float diff_23;
            mediump float tmpvar_24;
            tmpvar_24 = max (0.0, dot (tmpvar_7, tmpvar_2));
            diff_23 = tmpvar_24;
            c_22.xyz = ((tmpvar_13.xyz * tmpvar_1) * diff_23);
            c_22.w = tmpvar_13.w;
            c_21.w = c_22.w;
            c_21.xyz = c_22.xyz;
            c_4.xyz = c_21.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "POINT" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_7;
            tmpvar_7[0] = unity_WorldToObject[0].xyz;
            tmpvar_7[1] = unity_WorldToObject[1].xyz;
            tmpvar_7[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = normalize((_glesNormal * tmpvar_7));
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_10;
            highp float tmpvar_11;
            tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = (((tmpvar_8.yzx * worldTangent_3.zxy) - (tmpvar_8.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = worldTangent_3.x;
            tmpvar_13.y = worldBinormal_1.x;
            tmpvar_13.z = tmpvar_8.x;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.y;
            tmpvar_14.y = worldBinormal_1.y;
            tmpvar_14.z = tmpvar_8.y;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.z;
            tmpvar_15.y = worldBinormal_1.z;
            tmpvar_15.z = tmpvar_8.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_13;
            xlv_TEXCOORD2 = tmpvar_14;
            xlv_TEXCOORD3 = tmpvar_15;
            highp vec4 tmpvar_16;
            tmpvar_16 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_16.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_16).xyz;
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _LightTexture0;
          uniform highp mat4 unity_WorldToLight;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            highp vec3 lightCoord_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            _unity_tbn_0_11 = xlv_TEXCOORD1;
            _unity_tbn_1_10 = xlv_TEXCOORD2;
            _unity_tbn_2_9 = xlv_TEXCOORD3;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
            lightDir_8 = tmpvar_12;
            lowp vec4 tmpvar_13;
            tmpvar_13 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_14;
            tmpvar_14 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            highp vec4 tmpvar_15;
            tmpvar_15.w = 1.0;
            tmpvar_15.xyz = xlv_TEXCOORD4;
            lightCoord_6 = (unity_WorldToLight * tmpvar_15).xyz;
            highp float tmpvar_16;
            tmpvar_16 = texture2D (_LightTexture0, vec2(dot (lightCoord_6, lightCoord_6))).x;
            atten_5 = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_0_11, tmpvar_14);
            worldN_3.x = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_1_10, tmpvar_14);
            worldN_3.y = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (_unity_tbn_2_9, tmpvar_14);
            worldN_3.z = tmpvar_19;
            highp vec3 tmpvar_20;
            tmpvar_20 = normalize(worldN_3);
            worldN_3 = tmpvar_20;
            tmpvar_7 = tmpvar_20;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_8;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_21;
            lowp vec4 c_22;
            lowp float diff_23;
            mediump float tmpvar_24;
            tmpvar_24 = max (0.0, dot (tmpvar_7, tmpvar_2));
            diff_23 = tmpvar_24;
            c_22.xyz = ((tmpvar_13.xyz * tmpvar_1) * diff_23);
            c_22.w = tmpvar_13.w;
            c_21.w = c_22.w;
            c_21.xyz = c_22.xyz;
            c_4.xyz = c_21.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "POINT" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
              vs_TEXCOORD5.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTexture0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat3.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
              u_xlat12 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * u_xlat3.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat0.xyz = vs_TEXCOORD4.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat0.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
              u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat0.x = texture(_LightTexture0, u_xlat0.xx).x;
              u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_0.xyz;
              SV_Target0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "POINT" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
              vs_TEXCOORD5.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTexture0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat3.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
              u_xlat12 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * u_xlat3.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat0.xyz = vs_TEXCOORD4.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat0.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
              u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat0.x = texture(_LightTexture0, u_xlat0.xx).x;
              u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_0.xyz;
              SV_Target0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "POINT" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
              vs_TEXCOORD5.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTexture0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat3.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
              u_xlat12 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * u_xlat3.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat0.xyz = vs_TEXCOORD4.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat0.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
              u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat0.x = texture(_LightTexture0, u_xlat0.xx).x;
              u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_0.xyz;
              SV_Target0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_7;
            tmpvar_7[0] = unity_WorldToObject[0].xyz;
            tmpvar_7[1] = unity_WorldToObject[1].xyz;
            tmpvar_7[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = normalize((_glesNormal * tmpvar_7));
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_10;
            highp float tmpvar_11;
            tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = (((tmpvar_8.yzx * worldTangent_3.zxy) - (tmpvar_8.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = worldTangent_3.x;
            tmpvar_13.y = worldBinormal_1.x;
            tmpvar_13.z = tmpvar_8.x;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.y;
            tmpvar_14.y = worldBinormal_1.y;
            tmpvar_14.z = tmpvar_8.y;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.z;
            tmpvar_15.y = worldBinormal_1.z;
            tmpvar_15.z = tmpvar_8.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_13;
            xlv_TEXCOORD2 = tmpvar_14;
            xlv_TEXCOORD3 = tmpvar_15;
            xlv_TEXCOORD4 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            _unity_tbn_0_9 = xlv_TEXCOORD1;
            _unity_tbn_1_8 = xlv_TEXCOORD2;
            _unity_tbn_2_7 = xlv_TEXCOORD3;
            mediump vec3 tmpvar_10;
            tmpvar_10 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_10;
            lowp vec4 tmpvar_11;
            tmpvar_11 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_12;
            tmpvar_12 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_0_9, tmpvar_12);
            worldN_3.x = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_1_8, tmpvar_12);
            worldN_3.y = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_2_7, tmpvar_12);
            worldN_3.z = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(worldN_3);
            worldN_3 = tmpvar_16;
            tmpvar_5 = tmpvar_16;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_17;
            lowp vec4 c_18;
            lowp float diff_19;
            mediump float tmpvar_20;
            tmpvar_20 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_19 = tmpvar_20;
            c_18.xyz = ((tmpvar_11.xyz * tmpvar_1) * diff_19);
            c_18.w = tmpvar_11.w;
            c_17.w = c_18.w;
            c_17.xyz = c_18.xyz;
            c_4.xyz = c_17.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_7;
            tmpvar_7[0] = unity_WorldToObject[0].xyz;
            tmpvar_7[1] = unity_WorldToObject[1].xyz;
            tmpvar_7[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = normalize((_glesNormal * tmpvar_7));
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_10;
            highp float tmpvar_11;
            tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = (((tmpvar_8.yzx * worldTangent_3.zxy) - (tmpvar_8.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = worldTangent_3.x;
            tmpvar_13.y = worldBinormal_1.x;
            tmpvar_13.z = tmpvar_8.x;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.y;
            tmpvar_14.y = worldBinormal_1.y;
            tmpvar_14.z = tmpvar_8.y;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.z;
            tmpvar_15.y = worldBinormal_1.z;
            tmpvar_15.z = tmpvar_8.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_13;
            xlv_TEXCOORD2 = tmpvar_14;
            xlv_TEXCOORD3 = tmpvar_15;
            xlv_TEXCOORD4 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            _unity_tbn_0_9 = xlv_TEXCOORD1;
            _unity_tbn_1_8 = xlv_TEXCOORD2;
            _unity_tbn_2_7 = xlv_TEXCOORD3;
            mediump vec3 tmpvar_10;
            tmpvar_10 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_10;
            lowp vec4 tmpvar_11;
            tmpvar_11 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_12;
            tmpvar_12 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_0_9, tmpvar_12);
            worldN_3.x = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_1_8, tmpvar_12);
            worldN_3.y = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_2_7, tmpvar_12);
            worldN_3.z = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(worldN_3);
            worldN_3 = tmpvar_16;
            tmpvar_5 = tmpvar_16;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_17;
            lowp vec4 c_18;
            lowp float diff_19;
            mediump float tmpvar_20;
            tmpvar_20 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_19 = tmpvar_20;
            c_18.xyz = ((tmpvar_11.xyz * tmpvar_1) * diff_19);
            c_18.w = tmpvar_11.w;
            c_17.w = c_18.w;
            c_17.xyz = c_18.xyz;
            c_4.xyz = c_17.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_7;
            tmpvar_7[0] = unity_WorldToObject[0].xyz;
            tmpvar_7[1] = unity_WorldToObject[1].xyz;
            tmpvar_7[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = normalize((_glesNormal * tmpvar_7));
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_10;
            highp float tmpvar_11;
            tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = (((tmpvar_8.yzx * worldTangent_3.zxy) - (tmpvar_8.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = worldTangent_3.x;
            tmpvar_13.y = worldBinormal_1.x;
            tmpvar_13.z = tmpvar_8.x;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.y;
            tmpvar_14.y = worldBinormal_1.y;
            tmpvar_14.z = tmpvar_8.y;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.z;
            tmpvar_15.y = worldBinormal_1.z;
            tmpvar_15.z = tmpvar_8.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_13;
            xlv_TEXCOORD2 = tmpvar_14;
            xlv_TEXCOORD3 = tmpvar_15;
            xlv_TEXCOORD4 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            _unity_tbn_0_9 = xlv_TEXCOORD1;
            _unity_tbn_1_8 = xlv_TEXCOORD2;
            _unity_tbn_2_7 = xlv_TEXCOORD3;
            mediump vec3 tmpvar_10;
            tmpvar_10 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_10;
            lowp vec4 tmpvar_11;
            tmpvar_11 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_12;
            tmpvar_12 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_0_9, tmpvar_12);
            worldN_3.x = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_1_8, tmpvar_12);
            worldN_3.y = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_2_7, tmpvar_12);
            worldN_3.z = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(worldN_3);
            worldN_3 = tmpvar_16;
            tmpvar_5 = tmpvar_16;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_17;
            lowp vec4 c_18;
            lowp float diff_19;
            mediump float tmpvar_20;
            tmpvar_20 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_19 = tmpvar_20;
            c_18.xyz = ((tmpvar_11.xyz * tmpvar_1) * diff_19);
            c_18.w = tmpvar_11.w;
            c_17.w = c_18.w;
            c_17.xyz = c_18.xyz;
            c_4.xyz = c_17.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec3 u_xlat2;
          float u_xlat9;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat9 = inversesqrt(u_xlat9);
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat9 = inversesqrt(u_xlat9);
              u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;
              u_xlat2.xyz = u_xlat0.xyz * u_xlat1.xyz;
              u_xlat2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat2.xyz);
              u_xlat9 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;
              vs_TEXCOORD1.y = u_xlat2.x;
              vs_TEXCOORD1.x = u_xlat1.z;
              vs_TEXCOORD1.z = u_xlat0.y;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.z = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat0.x;
              vs_TEXCOORD2.y = u_xlat2.y;
              vs_TEXCOORD3.y = u_xlat2.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              SV_Target0.xyz = u_xlat16_1.xxx * u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec3 u_xlat2;
          float u_xlat9;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat9 = inversesqrt(u_xlat9);
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat9 = inversesqrt(u_xlat9);
              u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;
              u_xlat2.xyz = u_xlat0.xyz * u_xlat1.xyz;
              u_xlat2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat2.xyz);
              u_xlat9 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;
              vs_TEXCOORD1.y = u_xlat2.x;
              vs_TEXCOORD1.x = u_xlat1.z;
              vs_TEXCOORD1.z = u_xlat0.y;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.z = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat0.x;
              vs_TEXCOORD2.y = u_xlat2.y;
              vs_TEXCOORD3.y = u_xlat2.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              SV_Target0.xyz = u_xlat16_1.xxx * u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec3 u_xlat2;
          float u_xlat9;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat9 = inversesqrt(u_xlat9);
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat9 = inversesqrt(u_xlat9);
              u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;
              u_xlat2.xyz = u_xlat0.xyz * u_xlat1.xyz;
              u_xlat2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat2.xyz);
              u_xlat9 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;
              vs_TEXCOORD1.y = u_xlat2.x;
              vs_TEXCOORD1.x = u_xlat1.z;
              vs_TEXCOORD1.z = u_xlat0.y;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.z = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat0.x;
              vs_TEXCOORD2.y = u_xlat2.y;
              vs_TEXCOORD3.y = u_xlat2.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              SV_Target0.xyz = u_xlat16_1.xxx * u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "SPOT" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_7;
            tmpvar_7[0] = unity_WorldToObject[0].xyz;
            tmpvar_7[1] = unity_WorldToObject[1].xyz;
            tmpvar_7[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = normalize((_glesNormal * tmpvar_7));
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_10;
            highp float tmpvar_11;
            tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = (((tmpvar_8.yzx * worldTangent_3.zxy) - (tmpvar_8.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = worldTangent_3.x;
            tmpvar_13.y = worldBinormal_1.x;
            tmpvar_13.z = tmpvar_8.x;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.y;
            tmpvar_14.y = worldBinormal_1.y;
            tmpvar_14.z = tmpvar_8.y;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.z;
            tmpvar_15.y = worldBinormal_1.z;
            tmpvar_15.z = tmpvar_8.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_13;
            xlv_TEXCOORD2 = tmpvar_14;
            xlv_TEXCOORD3 = tmpvar_15;
            highp vec4 tmpvar_16;
            tmpvar_16 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_16.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_16);
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _LightTexture0;
          uniform highp sampler2D _LightTextureB0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD5;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            lowp vec3 tmpvar_6;
            lowp vec3 lightDir_7;
            lowp vec3 _unity_tbn_2_8;
            lowp vec3 _unity_tbn_1_9;
            lowp vec3 _unity_tbn_0_10;
            _unity_tbn_0_10 = xlv_TEXCOORD1;
            _unity_tbn_1_9 = xlv_TEXCOORD2;
            _unity_tbn_2_8 = xlv_TEXCOORD3;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
            lightDir_7 = tmpvar_11;
            lowp vec4 tmpvar_12;
            tmpvar_12 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_13;
            tmpvar_13 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_LightTexture0, ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5));
            tmpvar_14 = tmpvar_15.w;
            lowp float tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17 = texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz)));
            tmpvar_16 = tmpvar_17.x;
            highp float tmpvar_18;
            tmpvar_18 = ((float(
              (xlv_TEXCOORD5.z > 0.0)
            ) * tmpvar_14) * tmpvar_16);
            atten_5 = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (_unity_tbn_0_10, tmpvar_13);
            worldN_3.x = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (_unity_tbn_1_9, tmpvar_13);
            worldN_3.y = tmpvar_20;
            lowp float tmpvar_21;
            tmpvar_21 = dot (_unity_tbn_2_8, tmpvar_13);
            worldN_3.z = tmpvar_21;
            highp vec3 tmpvar_22;
            tmpvar_22 = normalize(worldN_3);
            worldN_3 = tmpvar_22;
            tmpvar_6 = tmpvar_22;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_7;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_23;
            lowp vec4 c_24;
            lowp float diff_25;
            mediump float tmpvar_26;
            tmpvar_26 = max (0.0, dot (tmpvar_6, tmpvar_2));
            diff_25 = tmpvar_26;
            c_24.xyz = ((tmpvar_12.xyz * tmpvar_1) * diff_25);
            c_24.w = tmpvar_12.w;
            c_23.w = c_24.w;
            c_23.xyz = c_24.xyz;
            c_4.xyz = c_23.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "SPOT" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_7;
            tmpvar_7[0] = unity_WorldToObject[0].xyz;
            tmpvar_7[1] = unity_WorldToObject[1].xyz;
            tmpvar_7[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = normalize((_glesNormal * tmpvar_7));
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_10;
            highp float tmpvar_11;
            tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = (((tmpvar_8.yzx * worldTangent_3.zxy) - (tmpvar_8.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = worldTangent_3.x;
            tmpvar_13.y = worldBinormal_1.x;
            tmpvar_13.z = tmpvar_8.x;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.y;
            tmpvar_14.y = worldBinormal_1.y;
            tmpvar_14.z = tmpvar_8.y;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.z;
            tmpvar_15.y = worldBinormal_1.z;
            tmpvar_15.z = tmpvar_8.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_13;
            xlv_TEXCOORD2 = tmpvar_14;
            xlv_TEXCOORD3 = tmpvar_15;
            highp vec4 tmpvar_16;
            tmpvar_16 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_16.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_16);
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _LightTexture0;
          uniform highp sampler2D _LightTextureB0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD5;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            lowp vec3 tmpvar_6;
            lowp vec3 lightDir_7;
            lowp vec3 _unity_tbn_2_8;
            lowp vec3 _unity_tbn_1_9;
            lowp vec3 _unity_tbn_0_10;
            _unity_tbn_0_10 = xlv_TEXCOORD1;
            _unity_tbn_1_9 = xlv_TEXCOORD2;
            _unity_tbn_2_8 = xlv_TEXCOORD3;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
            lightDir_7 = tmpvar_11;
            lowp vec4 tmpvar_12;
            tmpvar_12 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_13;
            tmpvar_13 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_LightTexture0, ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5));
            tmpvar_14 = tmpvar_15.w;
            lowp float tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17 = texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz)));
            tmpvar_16 = tmpvar_17.x;
            highp float tmpvar_18;
            tmpvar_18 = ((float(
              (xlv_TEXCOORD5.z > 0.0)
            ) * tmpvar_14) * tmpvar_16);
            atten_5 = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (_unity_tbn_0_10, tmpvar_13);
            worldN_3.x = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (_unity_tbn_1_9, tmpvar_13);
            worldN_3.y = tmpvar_20;
            lowp float tmpvar_21;
            tmpvar_21 = dot (_unity_tbn_2_8, tmpvar_13);
            worldN_3.z = tmpvar_21;
            highp vec3 tmpvar_22;
            tmpvar_22 = normalize(worldN_3);
            worldN_3 = tmpvar_22;
            tmpvar_6 = tmpvar_22;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_7;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_23;
            lowp vec4 c_24;
            lowp float diff_25;
            mediump float tmpvar_26;
            tmpvar_26 = max (0.0, dot (tmpvar_6, tmpvar_2));
            diff_25 = tmpvar_26;
            c_24.xyz = ((tmpvar_12.xyz * tmpvar_1) * diff_25);
            c_24.w = tmpvar_12.w;
            c_23.w = c_24.w;
            c_23.xyz = c_24.xyz;
            c_4.xyz = c_23.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "SPOT" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_7;
            tmpvar_7[0] = unity_WorldToObject[0].xyz;
            tmpvar_7[1] = unity_WorldToObject[1].xyz;
            tmpvar_7[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = normalize((_glesNormal * tmpvar_7));
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_10;
            highp float tmpvar_11;
            tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = (((tmpvar_8.yzx * worldTangent_3.zxy) - (tmpvar_8.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = worldTangent_3.x;
            tmpvar_13.y = worldBinormal_1.x;
            tmpvar_13.z = tmpvar_8.x;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.y;
            tmpvar_14.y = worldBinormal_1.y;
            tmpvar_14.z = tmpvar_8.y;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.z;
            tmpvar_15.y = worldBinormal_1.z;
            tmpvar_15.z = tmpvar_8.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_13;
            xlv_TEXCOORD2 = tmpvar_14;
            xlv_TEXCOORD3 = tmpvar_15;
            highp vec4 tmpvar_16;
            tmpvar_16 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_16.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_16);
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _LightTexture0;
          uniform highp sampler2D _LightTextureB0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD5;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            lowp vec3 tmpvar_6;
            lowp vec3 lightDir_7;
            lowp vec3 _unity_tbn_2_8;
            lowp vec3 _unity_tbn_1_9;
            lowp vec3 _unity_tbn_0_10;
            _unity_tbn_0_10 = xlv_TEXCOORD1;
            _unity_tbn_1_9 = xlv_TEXCOORD2;
            _unity_tbn_2_8 = xlv_TEXCOORD3;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
            lightDir_7 = tmpvar_11;
            lowp vec4 tmpvar_12;
            tmpvar_12 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_13;
            tmpvar_13 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_LightTexture0, ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5));
            tmpvar_14 = tmpvar_15.w;
            lowp float tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17 = texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz)));
            tmpvar_16 = tmpvar_17.x;
            highp float tmpvar_18;
            tmpvar_18 = ((float(
              (xlv_TEXCOORD5.z > 0.0)
            ) * tmpvar_14) * tmpvar_16);
            atten_5 = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (_unity_tbn_0_10, tmpvar_13);
            worldN_3.x = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (_unity_tbn_1_9, tmpvar_13);
            worldN_3.y = tmpvar_20;
            lowp float tmpvar_21;
            tmpvar_21 = dot (_unity_tbn_2_8, tmpvar_13);
            worldN_3.z = tmpvar_21;
            highp vec3 tmpvar_22;
            tmpvar_22 = normalize(worldN_3);
            worldN_3 = tmpvar_22;
            tmpvar_6 = tmpvar_22;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_7;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_23;
            lowp vec4 c_24;
            lowp float diff_25;
            mediump float tmpvar_26;
            tmpvar_26 = max (0.0, dot (tmpvar_6, tmpvar_2));
            diff_25 = tmpvar_26;
            c_24.xyz = ((tmpvar_12.xyz * tmpvar_1) * diff_25);
            c_24.w = tmpvar_12.w;
            c_23.w = c_24.w;
            c_23.xyz = c_24.xyz;
            c_4.xyz = c_23.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "SPOT" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
              u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;
              u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;
              vs_TEXCOORD5 = hlslcc_mtx4x4unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTexture0;
          uniform highp sampler2D _LightTextureB0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec4 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          bool u_xlatb1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          float u_xlat15;
          mediump float u_xlat16_17;
          void main()
          {
              u_xlat0 = vs_TEXCOORD4.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
              u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[0] * vs_TEXCOORD4.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[2] * vs_TEXCOORD4.zzzz + u_xlat0;
              u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_WorldToLight[3];
              u_xlat1.xy = u_xlat0.xy / u_xlat0.ww;
              u_xlat1.xy = u_xlat1.xy + vec2(0.5, 0.5);
              u_xlat15 = texture(_LightTexture0, u_xlat1.xy).w;
          #ifdef UNITY_ADRENO_ES3
              u_xlatb1 = !!(0.0<u_xlat0.z);
          #else
              u_xlatb1 = 0.0<u_xlat0.z;
          #endif
              u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat0.x = texture(_LightTextureB0, u_xlat0.xx).x;
              u_xlat16_2.x = (u_xlatb1) ? 1.0 : 0.0;
              u_xlat16_2.x = u_xlat15 * u_xlat16_2.x;
              u_xlat16_2.x = u_xlat0.x * u_xlat16_2.x;
              u_xlat16_2.xyz = u_xlat16_2.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_3.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_3.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_3.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat1.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
              u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat15 = inversesqrt(u_xlat15);
              u_xlat1.xyz = vec3(u_xlat15) * u_xlat1.xyz;
              u_xlat16_17 = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_17 = max(u_xlat16_17, 0.0);
              SV_Target0.xyz = vec3(u_xlat16_17) * u_xlat16_2.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "SPOT" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
              u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;
              u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;
              vs_TEXCOORD5 = hlslcc_mtx4x4unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTexture0;
          uniform highp sampler2D _LightTextureB0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec4 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          bool u_xlatb1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          float u_xlat15;
          mediump float u_xlat16_17;
          void main()
          {
              u_xlat0 = vs_TEXCOORD4.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
              u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[0] * vs_TEXCOORD4.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[2] * vs_TEXCOORD4.zzzz + u_xlat0;
              u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_WorldToLight[3];
              u_xlat1.xy = u_xlat0.xy / u_xlat0.ww;
              u_xlat1.xy = u_xlat1.xy + vec2(0.5, 0.5);
              u_xlat15 = texture(_LightTexture0, u_xlat1.xy).w;
          #ifdef UNITY_ADRENO_ES3
              u_xlatb1 = !!(0.0<u_xlat0.z);
          #else
              u_xlatb1 = 0.0<u_xlat0.z;
          #endif
              u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat0.x = texture(_LightTextureB0, u_xlat0.xx).x;
              u_xlat16_2.x = (u_xlatb1) ? 1.0 : 0.0;
              u_xlat16_2.x = u_xlat15 * u_xlat16_2.x;
              u_xlat16_2.x = u_xlat0.x * u_xlat16_2.x;
              u_xlat16_2.xyz = u_xlat16_2.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_3.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_3.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_3.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat1.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
              u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat15 = inversesqrt(u_xlat15);
              u_xlat1.xyz = vec3(u_xlat15) * u_xlat1.xyz;
              u_xlat16_17 = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_17 = max(u_xlat16_17, 0.0);
              SV_Target0.xyz = vec3(u_xlat16_17) * u_xlat16_2.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "SPOT" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
              u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;
              u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;
              vs_TEXCOORD5 = hlslcc_mtx4x4unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTexture0;
          uniform highp sampler2D _LightTextureB0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec4 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          bool u_xlatb1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          float u_xlat15;
          mediump float u_xlat16_17;
          void main()
          {
              u_xlat0 = vs_TEXCOORD4.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
              u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[0] * vs_TEXCOORD4.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[2] * vs_TEXCOORD4.zzzz + u_xlat0;
              u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_WorldToLight[3];
              u_xlat1.xy = u_xlat0.xy / u_xlat0.ww;
              u_xlat1.xy = u_xlat1.xy + vec2(0.5, 0.5);
              u_xlat15 = texture(_LightTexture0, u_xlat1.xy).w;
          #ifdef UNITY_ADRENO_ES3
              u_xlatb1 = !!(0.0<u_xlat0.z);
          #else
              u_xlatb1 = 0.0<u_xlat0.z;
          #endif
              u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat0.x = texture(_LightTextureB0, u_xlat0.xx).x;
              u_xlat16_2.x = (u_xlatb1) ? 1.0 : 0.0;
              u_xlat16_2.x = u_xlat15 * u_xlat16_2.x;
              u_xlat16_2.x = u_xlat0.x * u_xlat16_2.x;
              u_xlat16_2.xyz = u_xlat16_2.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_3.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_3.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_3.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat1.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
              u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat15 = inversesqrt(u_xlat15);
              u_xlat1.xyz = vec3(u_xlat15) * u_xlat1.xyz;
              u_xlat16_17 = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_17 = max(u_xlat16_17, 0.0);
              SV_Target0.xyz = vec3(u_xlat16_17) * u_xlat16_2.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "POINT_COOKIE" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_7;
            tmpvar_7[0] = unity_WorldToObject[0].xyz;
            tmpvar_7[1] = unity_WorldToObject[1].xyz;
            tmpvar_7[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = normalize((_glesNormal * tmpvar_7));
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_10;
            highp float tmpvar_11;
            tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = (((tmpvar_8.yzx * worldTangent_3.zxy) - (tmpvar_8.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = worldTangent_3.x;
            tmpvar_13.y = worldBinormal_1.x;
            tmpvar_13.z = tmpvar_8.x;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.y;
            tmpvar_14.y = worldBinormal_1.y;
            tmpvar_14.z = tmpvar_8.y;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.z;
            tmpvar_15.y = worldBinormal_1.z;
            tmpvar_15.z = tmpvar_8.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_13;
            xlv_TEXCOORD2 = tmpvar_14;
            xlv_TEXCOORD3 = tmpvar_15;
            highp vec4 tmpvar_16;
            tmpvar_16 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_16.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_16).xyz;
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp samplerCube _LightTexture0;
          uniform highp sampler2D _LightTextureB0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec3 xlv_TEXCOORD5;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            lowp vec3 tmpvar_6;
            lowp vec3 lightDir_7;
            lowp vec3 _unity_tbn_2_8;
            lowp vec3 _unity_tbn_1_9;
            lowp vec3 _unity_tbn_0_10;
            _unity_tbn_0_10 = xlv_TEXCOORD1;
            _unity_tbn_1_9 = xlv_TEXCOORD2;
            _unity_tbn_2_8 = xlv_TEXCOORD3;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
            lightDir_7 = tmpvar_11;
            lowp vec4 tmpvar_12;
            tmpvar_12 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_13;
            tmpvar_13 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            highp float tmpvar_14;
            tmpvar_14 = (texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5))).x * textureCube (_LightTexture0, xlv_TEXCOORD5).w);
            atten_5 = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_10, tmpvar_13);
            worldN_3.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_9, tmpvar_13);
            worldN_3.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_8, tmpvar_13);
            worldN_3.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_3);
            worldN_3 = tmpvar_18;
            tmpvar_6 = tmpvar_18;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_7;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_19;
            lowp vec4 c_20;
            lowp float diff_21;
            mediump float tmpvar_22;
            tmpvar_22 = max (0.0, dot (tmpvar_6, tmpvar_2));
            diff_21 = tmpvar_22;
            c_20.xyz = ((tmpvar_12.xyz * tmpvar_1) * diff_21);
            c_20.w = tmpvar_12.w;
            c_19.w = c_20.w;
            c_19.xyz = c_20.xyz;
            c_4.xyz = c_19.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "POINT_COOKIE" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_7;
            tmpvar_7[0] = unity_WorldToObject[0].xyz;
            tmpvar_7[1] = unity_WorldToObject[1].xyz;
            tmpvar_7[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = normalize((_glesNormal * tmpvar_7));
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_10;
            highp float tmpvar_11;
            tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = (((tmpvar_8.yzx * worldTangent_3.zxy) - (tmpvar_8.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = worldTangent_3.x;
            tmpvar_13.y = worldBinormal_1.x;
            tmpvar_13.z = tmpvar_8.x;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.y;
            tmpvar_14.y = worldBinormal_1.y;
            tmpvar_14.z = tmpvar_8.y;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.z;
            tmpvar_15.y = worldBinormal_1.z;
            tmpvar_15.z = tmpvar_8.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_13;
            xlv_TEXCOORD2 = tmpvar_14;
            xlv_TEXCOORD3 = tmpvar_15;
            highp vec4 tmpvar_16;
            tmpvar_16 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_16.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_16).xyz;
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp samplerCube _LightTexture0;
          uniform highp sampler2D _LightTextureB0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec3 xlv_TEXCOORD5;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            lowp vec3 tmpvar_6;
            lowp vec3 lightDir_7;
            lowp vec3 _unity_tbn_2_8;
            lowp vec3 _unity_tbn_1_9;
            lowp vec3 _unity_tbn_0_10;
            _unity_tbn_0_10 = xlv_TEXCOORD1;
            _unity_tbn_1_9 = xlv_TEXCOORD2;
            _unity_tbn_2_8 = xlv_TEXCOORD3;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
            lightDir_7 = tmpvar_11;
            lowp vec4 tmpvar_12;
            tmpvar_12 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_13;
            tmpvar_13 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            highp float tmpvar_14;
            tmpvar_14 = (texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5))).x * textureCube (_LightTexture0, xlv_TEXCOORD5).w);
            atten_5 = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_10, tmpvar_13);
            worldN_3.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_9, tmpvar_13);
            worldN_3.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_8, tmpvar_13);
            worldN_3.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_3);
            worldN_3 = tmpvar_18;
            tmpvar_6 = tmpvar_18;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_7;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_19;
            lowp vec4 c_20;
            lowp float diff_21;
            mediump float tmpvar_22;
            tmpvar_22 = max (0.0, dot (tmpvar_6, tmpvar_2));
            diff_21 = tmpvar_22;
            c_20.xyz = ((tmpvar_12.xyz * tmpvar_1) * diff_21);
            c_20.w = tmpvar_12.w;
            c_19.w = c_20.w;
            c_19.xyz = c_20.xyz;
            c_4.xyz = c_19.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "POINT_COOKIE" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_7;
            tmpvar_7[0] = unity_WorldToObject[0].xyz;
            tmpvar_7[1] = unity_WorldToObject[1].xyz;
            tmpvar_7[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = normalize((_glesNormal * tmpvar_7));
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_10;
            highp float tmpvar_11;
            tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = (((tmpvar_8.yzx * worldTangent_3.zxy) - (tmpvar_8.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = worldTangent_3.x;
            tmpvar_13.y = worldBinormal_1.x;
            tmpvar_13.z = tmpvar_8.x;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.y;
            tmpvar_14.y = worldBinormal_1.y;
            tmpvar_14.z = tmpvar_8.y;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.z;
            tmpvar_15.y = worldBinormal_1.z;
            tmpvar_15.z = tmpvar_8.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_13;
            xlv_TEXCOORD2 = tmpvar_14;
            xlv_TEXCOORD3 = tmpvar_15;
            highp vec4 tmpvar_16;
            tmpvar_16 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_16.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_16).xyz;
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp samplerCube _LightTexture0;
          uniform highp sampler2D _LightTextureB0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec3 xlv_TEXCOORD5;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            lowp vec3 tmpvar_6;
            lowp vec3 lightDir_7;
            lowp vec3 _unity_tbn_2_8;
            lowp vec3 _unity_tbn_1_9;
            lowp vec3 _unity_tbn_0_10;
            _unity_tbn_0_10 = xlv_TEXCOORD1;
            _unity_tbn_1_9 = xlv_TEXCOORD2;
            _unity_tbn_2_8 = xlv_TEXCOORD3;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
            lightDir_7 = tmpvar_11;
            lowp vec4 tmpvar_12;
            tmpvar_12 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_13;
            tmpvar_13 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            highp float tmpvar_14;
            tmpvar_14 = (texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5))).x * textureCube (_LightTexture0, xlv_TEXCOORD5).w);
            atten_5 = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_10, tmpvar_13);
            worldN_3.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_9, tmpvar_13);
            worldN_3.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_8, tmpvar_13);
            worldN_3.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_3);
            worldN_3 = tmpvar_18;
            tmpvar_6 = tmpvar_18;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_7;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_19;
            lowp vec4 c_20;
            lowp float diff_21;
            mediump float tmpvar_22;
            tmpvar_22 = max (0.0, dot (tmpvar_6, tmpvar_2));
            diff_21 = tmpvar_22;
            c_20.xyz = ((tmpvar_12.xyz * tmpvar_1) * diff_21);
            c_20.w = tmpvar_12.w;
            c_19.w = c_20.w;
            c_19.xyz = c_20.xyz;
            c_4.xyz = c_19.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "POINT_COOKIE" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
              vs_TEXCOORD5.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTextureB0;
          uniform highp samplerCube _LightTexture0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          float u_xlat4;
          mediump vec3 u_xlat16_5;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat3.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
              u_xlat12 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * u_xlat3.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat0.xyz = vs_TEXCOORD4.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat0.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat0.x = texture(_LightTexture0, u_xlat0.xyz).w;
              u_xlat4 = texture(_LightTextureB0, vec2(u_xlat12)).x;
              u_xlat0.x = u_xlat0.x * u_xlat4;
              u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_0.xyz;
              SV_Target0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "POINT_COOKIE" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
              vs_TEXCOORD5.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTextureB0;
          uniform highp samplerCube _LightTexture0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          float u_xlat4;
          mediump vec3 u_xlat16_5;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat3.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
              u_xlat12 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * u_xlat3.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat0.xyz = vs_TEXCOORD4.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat0.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat0.x = texture(_LightTexture0, u_xlat0.xyz).w;
              u_xlat4 = texture(_LightTextureB0, vec2(u_xlat12)).x;
              u_xlat0.x = u_xlat0.x * u_xlat4;
              u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_0.xyz;
              SV_Target0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "POINT_COOKIE" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
              vs_TEXCOORD5.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTextureB0;
          uniform highp samplerCube _LightTexture0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          float u_xlat4;
          mediump vec3 u_xlat16_5;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat3.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
              u_xlat12 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * u_xlat3.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat0.xyz = vs_TEXCOORD4.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat0.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat0.x = texture(_LightTexture0, u_xlat0.xyz).w;
              u_xlat4 = texture(_LightTextureB0, vec2(u_xlat12)).x;
              u_xlat0.x = u_xlat0.x * u_xlat4;
              u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_0.xyz;
              SV_Target0.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL_COOKIE" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec2 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_7;
            tmpvar_7[0] = unity_WorldToObject[0].xyz;
            tmpvar_7[1] = unity_WorldToObject[1].xyz;
            tmpvar_7[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = normalize((_glesNormal * tmpvar_7));
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_10;
            highp float tmpvar_11;
            tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = (((tmpvar_8.yzx * worldTangent_3.zxy) - (tmpvar_8.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = worldTangent_3.x;
            tmpvar_13.y = worldBinormal_1.x;
            tmpvar_13.z = tmpvar_8.x;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.y;
            tmpvar_14.y = worldBinormal_1.y;
            tmpvar_14.z = tmpvar_8.y;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.z;
            tmpvar_15.y = worldBinormal_1.z;
            tmpvar_15.z = tmpvar_8.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_13;
            xlv_TEXCOORD2 = tmpvar_14;
            xlv_TEXCOORD3 = tmpvar_15;
            highp vec4 tmpvar_16;
            tmpvar_16 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_16.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_16).xy;
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _LightTexture0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec2 xlv_TEXCOORD5;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            lowp vec3 tmpvar_6;
            lowp vec3 lightDir_7;
            lowp vec3 _unity_tbn_2_8;
            lowp vec3 _unity_tbn_1_9;
            lowp vec3 _unity_tbn_0_10;
            _unity_tbn_0_10 = xlv_TEXCOORD1;
            _unity_tbn_1_9 = xlv_TEXCOORD2;
            _unity_tbn_2_8 = xlv_TEXCOORD3;
            mediump vec3 tmpvar_11;
            tmpvar_11 = _WorldSpaceLightPos0.xyz;
            lightDir_7 = tmpvar_11;
            lowp vec4 tmpvar_12;
            tmpvar_12 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_13;
            tmpvar_13 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            highp float tmpvar_14;
            tmpvar_14 = texture2D (_LightTexture0, xlv_TEXCOORD5).w;
            atten_5 = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_10, tmpvar_13);
            worldN_3.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_9, tmpvar_13);
            worldN_3.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_8, tmpvar_13);
            worldN_3.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_3);
            worldN_3 = tmpvar_18;
            tmpvar_6 = tmpvar_18;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_7;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_19;
            lowp vec4 c_20;
            lowp float diff_21;
            mediump float tmpvar_22;
            tmpvar_22 = max (0.0, dot (tmpvar_6, tmpvar_2));
            diff_21 = tmpvar_22;
            c_20.xyz = ((tmpvar_12.xyz * tmpvar_1) * diff_21);
            c_20.w = tmpvar_12.w;
            c_19.w = c_20.w;
            c_19.xyz = c_20.xyz;
            c_4.xyz = c_19.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL_COOKIE" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec2 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_7;
            tmpvar_7[0] = unity_WorldToObject[0].xyz;
            tmpvar_7[1] = unity_WorldToObject[1].xyz;
            tmpvar_7[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = normalize((_glesNormal * tmpvar_7));
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_10;
            highp float tmpvar_11;
            tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = (((tmpvar_8.yzx * worldTangent_3.zxy) - (tmpvar_8.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = worldTangent_3.x;
            tmpvar_13.y = worldBinormal_1.x;
            tmpvar_13.z = tmpvar_8.x;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.y;
            tmpvar_14.y = worldBinormal_1.y;
            tmpvar_14.z = tmpvar_8.y;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.z;
            tmpvar_15.y = worldBinormal_1.z;
            tmpvar_15.z = tmpvar_8.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_13;
            xlv_TEXCOORD2 = tmpvar_14;
            xlv_TEXCOORD3 = tmpvar_15;
            highp vec4 tmpvar_16;
            tmpvar_16 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_16.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_16).xy;
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _LightTexture0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec2 xlv_TEXCOORD5;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            lowp vec3 tmpvar_6;
            lowp vec3 lightDir_7;
            lowp vec3 _unity_tbn_2_8;
            lowp vec3 _unity_tbn_1_9;
            lowp vec3 _unity_tbn_0_10;
            _unity_tbn_0_10 = xlv_TEXCOORD1;
            _unity_tbn_1_9 = xlv_TEXCOORD2;
            _unity_tbn_2_8 = xlv_TEXCOORD3;
            mediump vec3 tmpvar_11;
            tmpvar_11 = _WorldSpaceLightPos0.xyz;
            lightDir_7 = tmpvar_11;
            lowp vec4 tmpvar_12;
            tmpvar_12 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_13;
            tmpvar_13 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            highp float tmpvar_14;
            tmpvar_14 = texture2D (_LightTexture0, xlv_TEXCOORD5).w;
            atten_5 = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_10, tmpvar_13);
            worldN_3.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_9, tmpvar_13);
            worldN_3.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_8, tmpvar_13);
            worldN_3.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_3);
            worldN_3 = tmpvar_18;
            tmpvar_6 = tmpvar_18;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_7;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_19;
            lowp vec4 c_20;
            lowp float diff_21;
            mediump float tmpvar_22;
            tmpvar_22 = max (0.0, dot (tmpvar_6, tmpvar_2));
            diff_21 = tmpvar_22;
            c_20.xyz = ((tmpvar_12.xyz * tmpvar_1) * diff_21);
            c_20.w = tmpvar_12.w;
            c_19.w = c_20.w;
            c_19.xyz = c_20.xyz;
            c_4.xyz = c_19.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL_COOKIE" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec2 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_7;
            tmpvar_7[0] = unity_WorldToObject[0].xyz;
            tmpvar_7[1] = unity_WorldToObject[1].xyz;
            tmpvar_7[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = normalize((_glesNormal * tmpvar_7));
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_9[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_9[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((tmpvar_9 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_10;
            highp float tmpvar_11;
            tmpvar_11 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_11;
            highp vec3 tmpvar_12;
            tmpvar_12 = (((tmpvar_8.yzx * worldTangent_3.zxy) - (tmpvar_8.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13.x = worldTangent_3.x;
            tmpvar_13.y = worldBinormal_1.x;
            tmpvar_13.z = tmpvar_8.x;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.y;
            tmpvar_14.y = worldBinormal_1.y;
            tmpvar_14.z = tmpvar_8.y;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.z;
            tmpvar_15.y = worldBinormal_1.z;
            tmpvar_15.z = tmpvar_8.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_13;
            xlv_TEXCOORD2 = tmpvar_14;
            xlv_TEXCOORD3 = tmpvar_15;
            highp vec4 tmpvar_16;
            tmpvar_16 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_16.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_16).xy;
            xlv_TEXCOORD6 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _LightTexture0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec2 xlv_TEXCOORD5;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            lowp vec3 tmpvar_6;
            lowp vec3 lightDir_7;
            lowp vec3 _unity_tbn_2_8;
            lowp vec3 _unity_tbn_1_9;
            lowp vec3 _unity_tbn_0_10;
            _unity_tbn_0_10 = xlv_TEXCOORD1;
            _unity_tbn_1_9 = xlv_TEXCOORD2;
            _unity_tbn_2_8 = xlv_TEXCOORD3;
            mediump vec3 tmpvar_11;
            tmpvar_11 = _WorldSpaceLightPos0.xyz;
            lightDir_7 = tmpvar_11;
            lowp vec4 tmpvar_12;
            tmpvar_12 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_13;
            tmpvar_13 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            highp float tmpvar_14;
            tmpvar_14 = texture2D (_LightTexture0, xlv_TEXCOORD5).w;
            atten_5 = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_10, tmpvar_13);
            worldN_3.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_9, tmpvar_13);
            worldN_3.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_8, tmpvar_13);
            worldN_3.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_3);
            worldN_3 = tmpvar_18;
            tmpvar_6 = tmpvar_18;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_7;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_19;
            lowp vec4 c_20;
            lowp float diff_21;
            mediump float tmpvar_22;
            tmpvar_22 = max (0.0, dot (tmpvar_6, tmpvar_2));
            diff_21 = tmpvar_22;
            c_20.xyz = ((tmpvar_12.xyz * tmpvar_1) * diff_21);
            c_20.w = tmpvar_12.w;
            c_19.w = c_20.w;
            c_19.xyz = c_20.xyz;
            c_4.xyz = c_19.xyz;
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL_COOKIE" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec2 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1.xy = u_xlat0.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat1.xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;
              vs_TEXCOORD5.xy = hlslcc_mtx4x4unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTexture0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec2 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat0.xy = vs_TEXCOORD4.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * vs_TEXCOORD4.xx + u_xlat0.xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * vs_TEXCOORD4.zz + u_xlat0.xy;
              u_xlat0.xy = u_xlat0.xy + hlslcc_mtx4x4unity_WorldToLight[3].xy;
              u_xlat0.x = texture(_LightTexture0, u_xlat0.xy).w;
              u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
              SV_Target0.xyz = u_xlat16_1.xxx * u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL_COOKIE" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec2 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1.xy = u_xlat0.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat1.xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;
              vs_TEXCOORD5.xy = hlslcc_mtx4x4unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTexture0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec2 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat0.xy = vs_TEXCOORD4.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * vs_TEXCOORD4.xx + u_xlat0.xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * vs_TEXCOORD4.zz + u_xlat0.xy;
              u_xlat0.xy = u_xlat0.xy + hlslcc_mtx4x4unity_WorldToLight[3].xy;
              u_xlat0.x = texture(_LightTexture0, u_xlat0.xy).w;
              u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
              SV_Target0.xyz = u_xlat16_1.xxx * u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL_COOKIE" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec2 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1.xy = u_xlat0.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat1.xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;
              vs_TEXCOORD5.xy = hlslcc_mtx4x4unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTexture0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec2 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat0.xy = vs_TEXCOORD4.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * vs_TEXCOORD4.xx + u_xlat0.xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * vs_TEXCOORD4.zz + u_xlat0.xy;
              u_xlat0.xy = u_xlat0.xy + hlslcc_mtx4x4unity_WorldToLight[3].xy;
              u_xlat0.x = texture(_LightTexture0, u_xlat0.xy).w;
              u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
              SV_Target0.xyz = u_xlat16_1.xxx * u_xlat16_4.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "POINT" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            highp vec3 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            gl_Position = tmpvar_6;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_17.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_17).xyz;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _LightTexture0;
          uniform highp mat4 unity_WorldToLight;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            highp vec3 lightCoord_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            _unity_tbn_0_11 = xlv_TEXCOORD1;
            _unity_tbn_1_10 = xlv_TEXCOORD2;
            _unity_tbn_2_9 = xlv_TEXCOORD3;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
            lightDir_8 = tmpvar_12;
            lowp vec4 tmpvar_13;
            tmpvar_13 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_14;
            tmpvar_14 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            highp vec4 tmpvar_15;
            tmpvar_15.w = 1.0;
            tmpvar_15.xyz = xlv_TEXCOORD4;
            lightCoord_6 = (unity_WorldToLight * tmpvar_15).xyz;
            highp float tmpvar_16;
            tmpvar_16 = texture2D (_LightTexture0, vec2(dot (lightCoord_6, lightCoord_6))).x;
            atten_5 = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_0_11, tmpvar_14);
            worldN_3.x = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_1_10, tmpvar_14);
            worldN_3.y = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (_unity_tbn_2_9, tmpvar_14);
            worldN_3.z = tmpvar_19;
            highp vec3 tmpvar_20;
            tmpvar_20 = normalize(worldN_3);
            worldN_3 = tmpvar_20;
            tmpvar_7 = tmpvar_20;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_8;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_21;
            lowp float diff_22;
            mediump float tmpvar_23;
            tmpvar_23 = max (0.0, dot (tmpvar_7, tmpvar_2));
            diff_22 = tmpvar_23;
            c_21.xyz = ((tmpvar_13.xyz * tmpvar_1) * diff_22);
            c_21.w = tmpvar_13.w;
            highp float tmpvar_24;
            tmpvar_24 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
            c_4.xyz = (c_21.xyz * vec3(tmpvar_24));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "POINT" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            highp vec3 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            gl_Position = tmpvar_6;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_17.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_17).xyz;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _LightTexture0;
          uniform highp mat4 unity_WorldToLight;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            highp vec3 lightCoord_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            _unity_tbn_0_11 = xlv_TEXCOORD1;
            _unity_tbn_1_10 = xlv_TEXCOORD2;
            _unity_tbn_2_9 = xlv_TEXCOORD3;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
            lightDir_8 = tmpvar_12;
            lowp vec4 tmpvar_13;
            tmpvar_13 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_14;
            tmpvar_14 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            highp vec4 tmpvar_15;
            tmpvar_15.w = 1.0;
            tmpvar_15.xyz = xlv_TEXCOORD4;
            lightCoord_6 = (unity_WorldToLight * tmpvar_15).xyz;
            highp float tmpvar_16;
            tmpvar_16 = texture2D (_LightTexture0, vec2(dot (lightCoord_6, lightCoord_6))).x;
            atten_5 = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_0_11, tmpvar_14);
            worldN_3.x = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_1_10, tmpvar_14);
            worldN_3.y = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (_unity_tbn_2_9, tmpvar_14);
            worldN_3.z = tmpvar_19;
            highp vec3 tmpvar_20;
            tmpvar_20 = normalize(worldN_3);
            worldN_3 = tmpvar_20;
            tmpvar_7 = tmpvar_20;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_8;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_21;
            lowp float diff_22;
            mediump float tmpvar_23;
            tmpvar_23 = max (0.0, dot (tmpvar_7, tmpvar_2));
            diff_22 = tmpvar_23;
            c_21.xyz = ((tmpvar_13.xyz * tmpvar_1) * diff_22);
            c_21.w = tmpvar_13.w;
            highp float tmpvar_24;
            tmpvar_24 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
            c_4.xyz = (c_21.xyz * vec3(tmpvar_24));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "POINT" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            highp vec3 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            gl_Position = tmpvar_6;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_17.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_17).xyz;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _LightTexture0;
          uniform highp mat4 unity_WorldToLight;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            highp vec3 lightCoord_6;
            lowp vec3 tmpvar_7;
            lowp vec3 lightDir_8;
            lowp vec3 _unity_tbn_2_9;
            lowp vec3 _unity_tbn_1_10;
            lowp vec3 _unity_tbn_0_11;
            _unity_tbn_0_11 = xlv_TEXCOORD1;
            _unity_tbn_1_10 = xlv_TEXCOORD2;
            _unity_tbn_2_9 = xlv_TEXCOORD3;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
            lightDir_8 = tmpvar_12;
            lowp vec4 tmpvar_13;
            tmpvar_13 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_14;
            tmpvar_14 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            highp vec4 tmpvar_15;
            tmpvar_15.w = 1.0;
            tmpvar_15.xyz = xlv_TEXCOORD4;
            lightCoord_6 = (unity_WorldToLight * tmpvar_15).xyz;
            highp float tmpvar_16;
            tmpvar_16 = texture2D (_LightTexture0, vec2(dot (lightCoord_6, lightCoord_6))).x;
            atten_5 = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_0_11, tmpvar_14);
            worldN_3.x = tmpvar_17;
            lowp float tmpvar_18;
            tmpvar_18 = dot (_unity_tbn_1_10, tmpvar_14);
            worldN_3.y = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (_unity_tbn_2_9, tmpvar_14);
            worldN_3.z = tmpvar_19;
            highp vec3 tmpvar_20;
            tmpvar_20 = normalize(worldN_3);
            worldN_3 = tmpvar_20;
            tmpvar_7 = tmpvar_20;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_8;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_21;
            lowp float diff_22;
            mediump float tmpvar_23;
            tmpvar_23 = max (0.0, dot (tmpvar_7, tmpvar_2));
            diff_22 = tmpvar_23;
            c_21.xyz = ((tmpvar_13.xyz * tmpvar_1) * diff_22);
            c_21.w = tmpvar_13.w;
            highp float tmpvar_24;
            tmpvar_24 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
            c_4.xyz = (c_21.xyz * vec3(tmpvar_24));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "POINT" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp float vs_TEXCOORD7;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD7 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
              vs_TEXCOORD5.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTexture0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp float vs_TEXCOORD7;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat3.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
              u_xlat12 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * u_xlat3.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat0.xyz = vs_TEXCOORD4.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat0.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
              u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat0.x = texture(_LightTexture0, u_xlat0.xx).x;
              u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_0.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
              u_xlat0.x = vs_TEXCOORD7;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xxx;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "POINT" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp float vs_TEXCOORD7;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD7 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
              vs_TEXCOORD5.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTexture0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp float vs_TEXCOORD7;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat3.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
              u_xlat12 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * u_xlat3.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat0.xyz = vs_TEXCOORD4.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat0.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
              u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat0.x = texture(_LightTexture0, u_xlat0.xx).x;
              u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_0.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
              u_xlat0.x = vs_TEXCOORD7;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xxx;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "POINT" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp float vs_TEXCOORD7;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD7 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
              vs_TEXCOORD5.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTexture0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp float vs_TEXCOORD7;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_5;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat3.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
              u_xlat12 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * u_xlat3.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat0.xyz = vs_TEXCOORD4.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat0.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
              u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat0.x = texture(_LightTexture0, u_xlat0.xx).x;
              u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_0.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
              u_xlat0.x = vs_TEXCOORD7;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xxx;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            highp vec3 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            gl_Position = tmpvar_6;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            _unity_tbn_0_9 = xlv_TEXCOORD1;
            _unity_tbn_1_8 = xlv_TEXCOORD2;
            _unity_tbn_2_7 = xlv_TEXCOORD3;
            mediump vec3 tmpvar_10;
            tmpvar_10 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_10;
            lowp vec4 tmpvar_11;
            tmpvar_11 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_12;
            tmpvar_12 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_0_9, tmpvar_12);
            worldN_3.x = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_1_8, tmpvar_12);
            worldN_3.y = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_2_7, tmpvar_12);
            worldN_3.z = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(worldN_3);
            worldN_3 = tmpvar_16;
            tmpvar_5 = tmpvar_16;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_17;
            lowp float diff_18;
            mediump float tmpvar_19;
            tmpvar_19 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_18 = tmpvar_19;
            c_17.xyz = ((tmpvar_11.xyz * tmpvar_1) * diff_18);
            c_17.w = tmpvar_11.w;
            highp float tmpvar_20;
            tmpvar_20 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
            c_4.xyz = (c_17.xyz * vec3(tmpvar_20));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            highp vec3 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            gl_Position = tmpvar_6;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            _unity_tbn_0_9 = xlv_TEXCOORD1;
            _unity_tbn_1_8 = xlv_TEXCOORD2;
            _unity_tbn_2_7 = xlv_TEXCOORD3;
            mediump vec3 tmpvar_10;
            tmpvar_10 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_10;
            lowp vec4 tmpvar_11;
            tmpvar_11 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_12;
            tmpvar_12 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_0_9, tmpvar_12);
            worldN_3.x = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_1_8, tmpvar_12);
            worldN_3.y = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_2_7, tmpvar_12);
            worldN_3.z = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(worldN_3);
            worldN_3 = tmpvar_16;
            tmpvar_5 = tmpvar_16;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_17;
            lowp float diff_18;
            mediump float tmpvar_19;
            tmpvar_19 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_18 = tmpvar_19;
            c_17.xyz = ((tmpvar_11.xyz * tmpvar_1) * diff_18);
            c_17.w = tmpvar_11.w;
            highp float tmpvar_20;
            tmpvar_20 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
            c_4.xyz = (c_17.xyz * vec3(tmpvar_20));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            highp vec3 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            gl_Position = tmpvar_6;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp vec3 tmpvar_5;
            lowp vec3 lightDir_6;
            lowp vec3 _unity_tbn_2_7;
            lowp vec3 _unity_tbn_1_8;
            lowp vec3 _unity_tbn_0_9;
            _unity_tbn_0_9 = xlv_TEXCOORD1;
            _unity_tbn_1_8 = xlv_TEXCOORD2;
            _unity_tbn_2_7 = xlv_TEXCOORD3;
            mediump vec3 tmpvar_10;
            tmpvar_10 = _WorldSpaceLightPos0.xyz;
            lightDir_6 = tmpvar_10;
            lowp vec4 tmpvar_11;
            tmpvar_11 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_12;
            tmpvar_12 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_0_9, tmpvar_12);
            worldN_3.x = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_1_8, tmpvar_12);
            worldN_3.y = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_2_7, tmpvar_12);
            worldN_3.z = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(worldN_3);
            worldN_3 = tmpvar_16;
            tmpvar_5 = tmpvar_16;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_6;
            lowp vec4 c_17;
            lowp float diff_18;
            mediump float tmpvar_19;
            tmpvar_19 = max (0.0, dot (tmpvar_5, tmpvar_2));
            diff_18 = tmpvar_19;
            c_17.xyz = ((tmpvar_11.xyz * tmpvar_1) * diff_18);
            c_17.w = tmpvar_11.w;
            highp float tmpvar_20;
            tmpvar_20 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
            c_4.xyz = (c_17.xyz * vec3(tmpvar_20));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp float vs_TEXCOORD7;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec3 u_xlat2;
          float u_xlat9;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD7 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat9 = inversesqrt(u_xlat9);
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat9 = inversesqrt(u_xlat9);
              u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;
              u_xlat2.xyz = u_xlat0.xyz * u_xlat1.xyz;
              u_xlat2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat2.xyz);
              u_xlat9 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;
              vs_TEXCOORD1.y = u_xlat2.x;
              vs_TEXCOORD1.x = u_xlat1.z;
              vs_TEXCOORD1.z = u_xlat0.y;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.z = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat0.x;
              vs_TEXCOORD2.y = u_xlat2.y;
              vs_TEXCOORD3.y = u_xlat2.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp float vs_TEXCOORD7;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_4.xyz;
              u_xlat0.x = vs_TEXCOORD7;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xxx;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp float vs_TEXCOORD7;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec3 u_xlat2;
          float u_xlat9;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD7 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat9 = inversesqrt(u_xlat9);
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat9 = inversesqrt(u_xlat9);
              u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;
              u_xlat2.xyz = u_xlat0.xyz * u_xlat1.xyz;
              u_xlat2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat2.xyz);
              u_xlat9 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;
              vs_TEXCOORD1.y = u_xlat2.x;
              vs_TEXCOORD1.x = u_xlat1.z;
              vs_TEXCOORD1.z = u_xlat0.y;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.z = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat0.x;
              vs_TEXCOORD2.y = u_xlat2.y;
              vs_TEXCOORD3.y = u_xlat2.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp float vs_TEXCOORD7;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_4.xyz;
              u_xlat0.x = vs_TEXCOORD7;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xxx;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp float vs_TEXCOORD7;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec3 u_xlat2;
          float u_xlat9;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD7 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat9 = inversesqrt(u_xlat9);
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat9 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat9 = inversesqrt(u_xlat9);
              u_xlat1.xyz = vec3(u_xlat9) * u_xlat1.xyz;
              u_xlat2.xyz = u_xlat0.xyz * u_xlat1.xyz;
              u_xlat2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat2.xyz);
              u_xlat9 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.xyz = vec3(u_xlat9) * u_xlat2.xyz;
              vs_TEXCOORD1.y = u_xlat2.x;
              vs_TEXCOORD1.x = u_xlat1.z;
              vs_TEXCOORD1.z = u_xlat0.y;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.z = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat0.x;
              vs_TEXCOORD2.y = u_xlat2.y;
              vs_TEXCOORD3.y = u_xlat2.z;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp float vs_TEXCOORD7;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_0.xyz * _LightColor0.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_4.xyz;
              u_xlat0.x = vs_TEXCOORD7;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xxx;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "SPOT" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            highp vec3 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            gl_Position = tmpvar_6;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_17.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_17);
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _LightTexture0;
          uniform highp sampler2D _LightTextureB0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD5;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            lowp vec3 tmpvar_6;
            lowp vec3 lightDir_7;
            lowp vec3 _unity_tbn_2_8;
            lowp vec3 _unity_tbn_1_9;
            lowp vec3 _unity_tbn_0_10;
            _unity_tbn_0_10 = xlv_TEXCOORD1;
            _unity_tbn_1_9 = xlv_TEXCOORD2;
            _unity_tbn_2_8 = xlv_TEXCOORD3;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
            lightDir_7 = tmpvar_11;
            lowp vec4 tmpvar_12;
            tmpvar_12 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_13;
            tmpvar_13 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_LightTexture0, ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5));
            tmpvar_14 = tmpvar_15.w;
            lowp float tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17 = texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz)));
            tmpvar_16 = tmpvar_17.x;
            highp float tmpvar_18;
            tmpvar_18 = ((float(
              (xlv_TEXCOORD5.z > 0.0)
            ) * tmpvar_14) * tmpvar_16);
            atten_5 = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (_unity_tbn_0_10, tmpvar_13);
            worldN_3.x = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (_unity_tbn_1_9, tmpvar_13);
            worldN_3.y = tmpvar_20;
            lowp float tmpvar_21;
            tmpvar_21 = dot (_unity_tbn_2_8, tmpvar_13);
            worldN_3.z = tmpvar_21;
            highp vec3 tmpvar_22;
            tmpvar_22 = normalize(worldN_3);
            worldN_3 = tmpvar_22;
            tmpvar_6 = tmpvar_22;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_7;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_23;
            lowp float diff_24;
            mediump float tmpvar_25;
            tmpvar_25 = max (0.0, dot (tmpvar_6, tmpvar_2));
            diff_24 = tmpvar_25;
            c_23.xyz = ((tmpvar_12.xyz * tmpvar_1) * diff_24);
            c_23.w = tmpvar_12.w;
            highp float tmpvar_26;
            tmpvar_26 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
            c_4.xyz = (c_23.xyz * vec3(tmpvar_26));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "SPOT" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            highp vec3 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            gl_Position = tmpvar_6;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_17.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_17);
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _LightTexture0;
          uniform highp sampler2D _LightTextureB0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD5;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            lowp vec3 tmpvar_6;
            lowp vec3 lightDir_7;
            lowp vec3 _unity_tbn_2_8;
            lowp vec3 _unity_tbn_1_9;
            lowp vec3 _unity_tbn_0_10;
            _unity_tbn_0_10 = xlv_TEXCOORD1;
            _unity_tbn_1_9 = xlv_TEXCOORD2;
            _unity_tbn_2_8 = xlv_TEXCOORD3;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
            lightDir_7 = tmpvar_11;
            lowp vec4 tmpvar_12;
            tmpvar_12 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_13;
            tmpvar_13 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_LightTexture0, ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5));
            tmpvar_14 = tmpvar_15.w;
            lowp float tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17 = texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz)));
            tmpvar_16 = tmpvar_17.x;
            highp float tmpvar_18;
            tmpvar_18 = ((float(
              (xlv_TEXCOORD5.z > 0.0)
            ) * tmpvar_14) * tmpvar_16);
            atten_5 = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (_unity_tbn_0_10, tmpvar_13);
            worldN_3.x = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (_unity_tbn_1_9, tmpvar_13);
            worldN_3.y = tmpvar_20;
            lowp float tmpvar_21;
            tmpvar_21 = dot (_unity_tbn_2_8, tmpvar_13);
            worldN_3.z = tmpvar_21;
            highp vec3 tmpvar_22;
            tmpvar_22 = normalize(worldN_3);
            worldN_3 = tmpvar_22;
            tmpvar_6 = tmpvar_22;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_7;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_23;
            lowp float diff_24;
            mediump float tmpvar_25;
            tmpvar_25 = max (0.0, dot (tmpvar_6, tmpvar_2));
            diff_24 = tmpvar_25;
            c_23.xyz = ((tmpvar_12.xyz * tmpvar_1) * diff_24);
            c_23.w = tmpvar_12.w;
            highp float tmpvar_26;
            tmpvar_26 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
            c_4.xyz = (c_23.xyz * vec3(tmpvar_26));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "SPOT" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            highp vec3 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            gl_Position = tmpvar_6;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_17.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_17);
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _LightTexture0;
          uniform highp sampler2D _LightTextureB0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec4 xlv_TEXCOORD5;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            lowp vec3 tmpvar_6;
            lowp vec3 lightDir_7;
            lowp vec3 _unity_tbn_2_8;
            lowp vec3 _unity_tbn_1_9;
            lowp vec3 _unity_tbn_0_10;
            _unity_tbn_0_10 = xlv_TEXCOORD1;
            _unity_tbn_1_9 = xlv_TEXCOORD2;
            _unity_tbn_2_8 = xlv_TEXCOORD3;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
            lightDir_7 = tmpvar_11;
            lowp vec4 tmpvar_12;
            tmpvar_12 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_13;
            tmpvar_13 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15 = texture2D (_LightTexture0, ((xlv_TEXCOORD5.xy / xlv_TEXCOORD5.w) + 0.5));
            tmpvar_14 = tmpvar_15.w;
            lowp float tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17 = texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5.xyz, xlv_TEXCOORD5.xyz)));
            tmpvar_16 = tmpvar_17.x;
            highp float tmpvar_18;
            tmpvar_18 = ((float(
              (xlv_TEXCOORD5.z > 0.0)
            ) * tmpvar_14) * tmpvar_16);
            atten_5 = tmpvar_18;
            lowp float tmpvar_19;
            tmpvar_19 = dot (_unity_tbn_0_10, tmpvar_13);
            worldN_3.x = tmpvar_19;
            lowp float tmpvar_20;
            tmpvar_20 = dot (_unity_tbn_1_9, tmpvar_13);
            worldN_3.y = tmpvar_20;
            lowp float tmpvar_21;
            tmpvar_21 = dot (_unity_tbn_2_8, tmpvar_13);
            worldN_3.z = tmpvar_21;
            highp vec3 tmpvar_22;
            tmpvar_22 = normalize(worldN_3);
            worldN_3 = tmpvar_22;
            tmpvar_6 = tmpvar_22;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_7;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_23;
            lowp float diff_24;
            mediump float tmpvar_25;
            tmpvar_25 = max (0.0, dot (tmpvar_6, tmpvar_2));
            diff_24 = tmpvar_25;
            c_23.xyz = ((tmpvar_12.xyz * tmpvar_1) * diff_24);
            c_23.w = tmpvar_12.w;
            highp float tmpvar_26;
            tmpvar_26 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
            c_4.xyz = (c_23.xyz * vec3(tmpvar_26));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "SPOT" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp float vs_TEXCOORD7;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD7 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
              u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;
              u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;
              vs_TEXCOORD5 = hlslcc_mtx4x4unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTexture0;
          uniform highp sampler2D _LightTextureB0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp float vs_TEXCOORD7;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec4 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          bool u_xlatb1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          float u_xlat15;
          mediump float u_xlat16_17;
          void main()
          {
              u_xlat0 = vs_TEXCOORD4.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
              u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[0] * vs_TEXCOORD4.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[2] * vs_TEXCOORD4.zzzz + u_xlat0;
              u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_WorldToLight[3];
              u_xlat1.xy = u_xlat0.xy / u_xlat0.ww;
              u_xlat1.xy = u_xlat1.xy + vec2(0.5, 0.5);
              u_xlat15 = texture(_LightTexture0, u_xlat1.xy).w;
          #ifdef UNITY_ADRENO_ES3
              u_xlatb1 = !!(0.0<u_xlat0.z);
          #else
              u_xlatb1 = 0.0<u_xlat0.z;
          #endif
              u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat0.x = texture(_LightTextureB0, u_xlat0.xx).x;
              u_xlat16_2.x = (u_xlatb1) ? 1.0 : 0.0;
              u_xlat16_2.x = u_xlat15 * u_xlat16_2.x;
              u_xlat16_2.x = u_xlat0.x * u_xlat16_2.x;
              u_xlat16_2.xyz = u_xlat16_2.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_3.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_3.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_3.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat1.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
              u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat15 = inversesqrt(u_xlat15);
              u_xlat1.xyz = vec3(u_xlat15) * u_xlat1.xyz;
              u_xlat16_17 = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_17 = max(u_xlat16_17, 0.0);
              u_xlat16_2.xyz = vec3(u_xlat16_17) * u_xlat16_2.xyz;
              u_xlat0.x = vs_TEXCOORD7;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat0.xyz = u_xlat16_2.xyz * u_xlat0.xxx;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "SPOT" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp float vs_TEXCOORD7;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD7 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
              u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;
              u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;
              vs_TEXCOORD5 = hlslcc_mtx4x4unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTexture0;
          uniform highp sampler2D _LightTextureB0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp float vs_TEXCOORD7;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec4 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          bool u_xlatb1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          float u_xlat15;
          mediump float u_xlat16_17;
          void main()
          {
              u_xlat0 = vs_TEXCOORD4.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
              u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[0] * vs_TEXCOORD4.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[2] * vs_TEXCOORD4.zzzz + u_xlat0;
              u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_WorldToLight[3];
              u_xlat1.xy = u_xlat0.xy / u_xlat0.ww;
              u_xlat1.xy = u_xlat1.xy + vec2(0.5, 0.5);
              u_xlat15 = texture(_LightTexture0, u_xlat1.xy).w;
          #ifdef UNITY_ADRENO_ES3
              u_xlatb1 = !!(0.0<u_xlat0.z);
          #else
              u_xlatb1 = 0.0<u_xlat0.z;
          #endif
              u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat0.x = texture(_LightTextureB0, u_xlat0.xx).x;
              u_xlat16_2.x = (u_xlatb1) ? 1.0 : 0.0;
              u_xlat16_2.x = u_xlat15 * u_xlat16_2.x;
              u_xlat16_2.x = u_xlat0.x * u_xlat16_2.x;
              u_xlat16_2.xyz = u_xlat16_2.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_3.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_3.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_3.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat1.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
              u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat15 = inversesqrt(u_xlat15);
              u_xlat1.xyz = vec3(u_xlat15) * u_xlat1.xyz;
              u_xlat16_17 = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_17 = max(u_xlat16_17, 0.0);
              u_xlat16_2.xyz = vec3(u_xlat16_17) * u_xlat16_2.xyz;
              u_xlat0.x = vs_TEXCOORD7;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat0.xyz = u_xlat16_2.xyz * u_xlat0.xxx;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "SPOT" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp float vs_TEXCOORD7;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec4 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD7 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
              u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;
              u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;
              vs_TEXCOORD5 = hlslcc_mtx4x4unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTexture0;
          uniform highp sampler2D _LightTextureB0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp float vs_TEXCOORD7;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec4 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          vec3 u_xlat1;
          bool u_xlatb1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          float u_xlat15;
          mediump float u_xlat16_17;
          void main()
          {
              u_xlat0 = vs_TEXCOORD4.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
              u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[0] * vs_TEXCOORD4.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[2] * vs_TEXCOORD4.zzzz + u_xlat0;
              u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_WorldToLight[3];
              u_xlat1.xy = u_xlat0.xy / u_xlat0.ww;
              u_xlat1.xy = u_xlat1.xy + vec2(0.5, 0.5);
              u_xlat15 = texture(_LightTexture0, u_xlat1.xy).w;
          #ifdef UNITY_ADRENO_ES3
              u_xlatb1 = !!(0.0<u_xlat0.z);
          #else
              u_xlatb1 = 0.0<u_xlat0.z;
          #endif
              u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat0.x = texture(_LightTextureB0, u_xlat0.xx).x;
              u_xlat16_2.x = (u_xlatb1) ? 1.0 : 0.0;
              u_xlat16_2.x = u_xlat15 * u_xlat16_2.x;
              u_xlat16_2.x = u_xlat0.x * u_xlat16_2.x;
              u_xlat16_2.xyz = u_xlat16_2.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_3.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_4.x = dot(vs_TEXCOORD1.xyz, u_xlat16_3.xyz);
              u_xlat16_4.y = dot(vs_TEXCOORD2.xyz, u_xlat16_3.xyz);
              u_xlat16_4.z = dot(vs_TEXCOORD3.xyz, u_xlat16_3.xyz);
              u_xlat16_0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz;
              u_xlat1.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
              u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat15 = inversesqrt(u_xlat15);
              u_xlat1.xyz = vec3(u_xlat15) * u_xlat1.xyz;
              u_xlat16_17 = dot(u_xlat16_0.xyz, u_xlat1.xyz);
              u_xlat16_17 = max(u_xlat16_17, 0.0);
              u_xlat16_2.xyz = vec3(u_xlat16_17) * u_xlat16_2.xyz;
              u_xlat0.x = vs_TEXCOORD7;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat0.xyz = u_xlat16_2.xyz * u_xlat0.xxx;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "POINT_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            highp vec3 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            gl_Position = tmpvar_6;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_17.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_17).xyz;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp samplerCube _LightTexture0;
          uniform highp sampler2D _LightTextureB0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec3 xlv_TEXCOORD5;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            lowp vec3 tmpvar_6;
            lowp vec3 lightDir_7;
            lowp vec3 _unity_tbn_2_8;
            lowp vec3 _unity_tbn_1_9;
            lowp vec3 _unity_tbn_0_10;
            _unity_tbn_0_10 = xlv_TEXCOORD1;
            _unity_tbn_1_9 = xlv_TEXCOORD2;
            _unity_tbn_2_8 = xlv_TEXCOORD3;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
            lightDir_7 = tmpvar_11;
            lowp vec4 tmpvar_12;
            tmpvar_12 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_13;
            tmpvar_13 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            highp float tmpvar_14;
            tmpvar_14 = (texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5))).x * textureCube (_LightTexture0, xlv_TEXCOORD5).w);
            atten_5 = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_10, tmpvar_13);
            worldN_3.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_9, tmpvar_13);
            worldN_3.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_8, tmpvar_13);
            worldN_3.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_3);
            worldN_3 = tmpvar_18;
            tmpvar_6 = tmpvar_18;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_7;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_19;
            lowp float diff_20;
            mediump float tmpvar_21;
            tmpvar_21 = max (0.0, dot (tmpvar_6, tmpvar_2));
            diff_20 = tmpvar_21;
            c_19.xyz = ((tmpvar_12.xyz * tmpvar_1) * diff_20);
            c_19.w = tmpvar_12.w;
            highp float tmpvar_22;
            tmpvar_22 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
            c_4.xyz = (c_19.xyz * vec3(tmpvar_22));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "POINT_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            highp vec3 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            gl_Position = tmpvar_6;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_17.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_17).xyz;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp samplerCube _LightTexture0;
          uniform highp sampler2D _LightTextureB0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec3 xlv_TEXCOORD5;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            lowp vec3 tmpvar_6;
            lowp vec3 lightDir_7;
            lowp vec3 _unity_tbn_2_8;
            lowp vec3 _unity_tbn_1_9;
            lowp vec3 _unity_tbn_0_10;
            _unity_tbn_0_10 = xlv_TEXCOORD1;
            _unity_tbn_1_9 = xlv_TEXCOORD2;
            _unity_tbn_2_8 = xlv_TEXCOORD3;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
            lightDir_7 = tmpvar_11;
            lowp vec4 tmpvar_12;
            tmpvar_12 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_13;
            tmpvar_13 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            highp float tmpvar_14;
            tmpvar_14 = (texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5))).x * textureCube (_LightTexture0, xlv_TEXCOORD5).w);
            atten_5 = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_10, tmpvar_13);
            worldN_3.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_9, tmpvar_13);
            worldN_3.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_8, tmpvar_13);
            worldN_3.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_3);
            worldN_3 = tmpvar_18;
            tmpvar_6 = tmpvar_18;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_7;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_19;
            lowp float diff_20;
            mediump float tmpvar_21;
            tmpvar_21 = max (0.0, dot (tmpvar_6, tmpvar_2));
            diff_20 = tmpvar_21;
            c_19.xyz = ((tmpvar_12.xyz * tmpvar_1) * diff_20);
            c_19.w = tmpvar_12.w;
            highp float tmpvar_22;
            tmpvar_22 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
            c_4.xyz = (c_19.xyz * vec3(tmpvar_22));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "POINT_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec3 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            highp vec3 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            gl_Position = tmpvar_6;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_17.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_17).xyz;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform highp vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp samplerCube _LightTexture0;
          uniform highp sampler2D _LightTextureB0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec3 xlv_TEXCOORD5;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            lowp vec3 tmpvar_6;
            lowp vec3 lightDir_7;
            lowp vec3 _unity_tbn_2_8;
            lowp vec3 _unity_tbn_1_9;
            lowp vec3 _unity_tbn_0_10;
            _unity_tbn_0_10 = xlv_TEXCOORD1;
            _unity_tbn_1_9 = xlv_TEXCOORD2;
            _unity_tbn_2_8 = xlv_TEXCOORD3;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((_WorldSpaceLightPos0.xyz - xlv_TEXCOORD4));
            lightDir_7 = tmpvar_11;
            lowp vec4 tmpvar_12;
            tmpvar_12 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_13;
            tmpvar_13 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            highp float tmpvar_14;
            tmpvar_14 = (texture2D (_LightTextureB0, vec2(dot (xlv_TEXCOORD5, xlv_TEXCOORD5))).x * textureCube (_LightTexture0, xlv_TEXCOORD5).w);
            atten_5 = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_10, tmpvar_13);
            worldN_3.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_9, tmpvar_13);
            worldN_3.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_8, tmpvar_13);
            worldN_3.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_3);
            worldN_3 = tmpvar_18;
            tmpvar_6 = tmpvar_18;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_7;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_19;
            lowp float diff_20;
            mediump float tmpvar_21;
            tmpvar_21 = max (0.0, dot (tmpvar_6, tmpvar_2));
            diff_20 = tmpvar_21;
            c_19.xyz = ((tmpvar_12.xyz * tmpvar_1) * diff_20);
            c_19.w = tmpvar_12.w;
            highp float tmpvar_22;
            tmpvar_22 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
            c_4.xyz = (c_19.xyz * vec3(tmpvar_22));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "POINT_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp float vs_TEXCOORD7;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD7 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
              vs_TEXCOORD5.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTextureB0;
          uniform highp samplerCube _LightTexture0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp float vs_TEXCOORD7;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          float u_xlat4;
          mediump vec3 u_xlat16_5;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat3.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
              u_xlat12 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * u_xlat3.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat0.xyz = vs_TEXCOORD4.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat0.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat0.x = texture(_LightTexture0, u_xlat0.xyz).w;
              u_xlat4 = texture(_LightTextureB0, vec2(u_xlat12)).x;
              u_xlat0.x = u_xlat0.x * u_xlat4;
              u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_0.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
              u_xlat0.x = vs_TEXCOORD7;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xxx;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "POINT_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp float vs_TEXCOORD7;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD7 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
              vs_TEXCOORD5.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTextureB0;
          uniform highp samplerCube _LightTexture0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp float vs_TEXCOORD7;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          float u_xlat4;
          mediump vec3 u_xlat16_5;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat3.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
              u_xlat12 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * u_xlat3.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat0.xyz = vs_TEXCOORD4.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat0.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat0.x = texture(_LightTexture0, u_xlat0.xyz).w;
              u_xlat4 = texture(_LightTextureB0, vec2(u_xlat12)).x;
              u_xlat0.x = u_xlat0.x * u_xlat4;
              u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_0.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
              u_xlat0.x = vs_TEXCOORD7;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xxx;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "POINT_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp float vs_TEXCOORD7;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec3 vs_TEXCOORD5;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD7 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
              vs_TEXCOORD5.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTextureB0;
          uniform highp samplerCube _LightTexture0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp float vs_TEXCOORD7;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          vec3 u_xlat3;
          float u_xlat4;
          mediump vec3 u_xlat16_5;
          float u_xlat12;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat3.xyz = (-vs_TEXCOORD4.xyz) + _WorldSpaceLightPos0.xyz;
              u_xlat12 = dot(u_xlat3.xyz, u_xlat3.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat3.xyz = vec3(u_xlat12) * u_xlat3.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, u_xlat3.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat0.xyz = vs_TEXCOORD4.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD4.xxx + u_xlat0.xyz;
              u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD4.zzz + u_xlat0.xyz;
              u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat0.x = texture(_LightTexture0, u_xlat0.xyz).w;
              u_xlat4 = texture(_LightTextureB0, vec2(u_xlat12)).x;
              u_xlat0.x = u_xlat0.x * u_xlat4;
              u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_5.xyz = u_xlat16_5.xyz * u_xlat16_0.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_5.xyz;
              u_xlat0.x = vs_TEXCOORD7;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xxx;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec2 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            highp vec3 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            gl_Position = tmpvar_6;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_17.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_17).xy;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _LightTexture0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec2 xlv_TEXCOORD5;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            lowp vec3 tmpvar_6;
            lowp vec3 lightDir_7;
            lowp vec3 _unity_tbn_2_8;
            lowp vec3 _unity_tbn_1_9;
            lowp vec3 _unity_tbn_0_10;
            _unity_tbn_0_10 = xlv_TEXCOORD1;
            _unity_tbn_1_9 = xlv_TEXCOORD2;
            _unity_tbn_2_8 = xlv_TEXCOORD3;
            mediump vec3 tmpvar_11;
            tmpvar_11 = _WorldSpaceLightPos0.xyz;
            lightDir_7 = tmpvar_11;
            lowp vec4 tmpvar_12;
            tmpvar_12 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_13;
            tmpvar_13 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            highp float tmpvar_14;
            tmpvar_14 = texture2D (_LightTexture0, xlv_TEXCOORD5).w;
            atten_5 = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_10, tmpvar_13);
            worldN_3.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_9, tmpvar_13);
            worldN_3.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_8, tmpvar_13);
            worldN_3.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_3);
            worldN_3 = tmpvar_18;
            tmpvar_6 = tmpvar_18;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_7;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_19;
            lowp float diff_20;
            mediump float tmpvar_21;
            tmpvar_21 = max (0.0, dot (tmpvar_6, tmpvar_2));
            diff_20 = tmpvar_21;
            c_19.xyz = ((tmpvar_12.xyz * tmpvar_1) * diff_20);
            c_19.w = tmpvar_12.w;
            highp float tmpvar_22;
            tmpvar_22 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
            c_4.xyz = (c_19.xyz * vec3(tmpvar_22));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec2 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            highp vec3 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            gl_Position = tmpvar_6;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_17.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_17).xy;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _LightTexture0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec2 xlv_TEXCOORD5;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            lowp vec3 tmpvar_6;
            lowp vec3 lightDir_7;
            lowp vec3 _unity_tbn_2_8;
            lowp vec3 _unity_tbn_1_9;
            lowp vec3 _unity_tbn_0_10;
            _unity_tbn_0_10 = xlv_TEXCOORD1;
            _unity_tbn_1_9 = xlv_TEXCOORD2;
            _unity_tbn_2_8 = xlv_TEXCOORD3;
            mediump vec3 tmpvar_11;
            tmpvar_11 = _WorldSpaceLightPos0.xyz;
            lightDir_7 = tmpvar_11;
            lowp vec4 tmpvar_12;
            tmpvar_12 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_13;
            tmpvar_13 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            highp float tmpvar_14;
            tmpvar_14 = texture2D (_LightTexture0, xlv_TEXCOORD5).w;
            atten_5 = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_10, tmpvar_13);
            worldN_3.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_9, tmpvar_13);
            worldN_3.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_8, tmpvar_13);
            worldN_3.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_3);
            worldN_3 = tmpvar_18;
            tmpvar_6 = tmpvar_18;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_7;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_19;
            lowp float diff_20;
            mediump float tmpvar_21;
            tmpvar_21 = max (0.0, dot (tmpvar_6, tmpvar_2));
            diff_20 = tmpvar_21;
            c_19.xyz = ((tmpvar_12.xyz * tmpvar_1) * diff_20);
            c_19.w = tmpvar_12.w;
            highp float tmpvar_22;
            tmpvar_22 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
            c_4.xyz = (c_19.xyz * vec3(tmpvar_22));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp mat4 unity_WorldToLight;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp vec2 xlv_TEXCOORD5;
          varying highp vec4 xlv_TEXCOORD6;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = _glesVertex.xyz;
            tmpvar_6 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_7));
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            highp vec3 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            highp vec3 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            gl_Position = tmpvar_6;
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            highp vec4 tmpvar_17;
            tmpvar_17 = (unity_ObjectToWorld * _glesVertex);
            xlv_TEXCOORD4 = tmpvar_17.xyz;
            xlv_TEXCOORD5 = (unity_WorldToLight * tmpvar_17).xy;
            xlv_TEXCOORD6 = tmpvar_5;
            xlv_TEXCOORD7 = ((tmpvar_6.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform mediump vec4 _WorldSpaceLightPos0;
          uniform lowp vec4 _LightColor0;
          uniform highp sampler2D _LightTexture0;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec3 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD3;
          varying highp vec2 xlv_TEXCOORD5;
          varying highp float xlv_TEXCOORD7;
          void main ()
          {
            mediump vec3 tmpvar_1;
            mediump vec3 tmpvar_2;
            highp vec3 worldN_3;
            lowp vec4 c_4;
            lowp float atten_5;
            lowp vec3 tmpvar_6;
            lowp vec3 lightDir_7;
            lowp vec3 _unity_tbn_2_8;
            lowp vec3 _unity_tbn_1_9;
            lowp vec3 _unity_tbn_0_10;
            _unity_tbn_0_10 = xlv_TEXCOORD1;
            _unity_tbn_1_9 = xlv_TEXCOORD2;
            _unity_tbn_2_8 = xlv_TEXCOORD3;
            mediump vec3 tmpvar_11;
            tmpvar_11 = _WorldSpaceLightPos0.xyz;
            lightDir_7 = tmpvar_11;
            lowp vec4 tmpvar_12;
            tmpvar_12 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            lowp vec3 tmpvar_13;
            tmpvar_13 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            highp float tmpvar_14;
            tmpvar_14 = texture2D (_LightTexture0, xlv_TEXCOORD5).w;
            atten_5 = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_0_10, tmpvar_13);
            worldN_3.x = tmpvar_15;
            lowp float tmpvar_16;
            tmpvar_16 = dot (_unity_tbn_1_9, tmpvar_13);
            worldN_3.y = tmpvar_16;
            lowp float tmpvar_17;
            tmpvar_17 = dot (_unity_tbn_2_8, tmpvar_13);
            worldN_3.z = tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_18 = normalize(worldN_3);
            worldN_3 = tmpvar_18;
            tmpvar_6 = tmpvar_18;
            tmpvar_1 = _LightColor0.xyz;
            tmpvar_2 = lightDir_7;
            tmpvar_1 = (tmpvar_1 * atten_5);
            lowp vec4 c_19;
            lowp float diff_20;
            mediump float tmpvar_21;
            tmpvar_21 = max (0.0, dot (tmpvar_6, tmpvar_2));
            diff_20 = tmpvar_21;
            c_19.xyz = ((tmpvar_12.xyz * tmpvar_1) * diff_20);
            c_19.w = tmpvar_12.w;
            highp float tmpvar_22;
            tmpvar_22 = clamp (xlv_TEXCOORD7, 0.0, 1.0);
            c_4.xyz = (c_19.xyz * vec3(tmpvar_22));
            c_4.w = 1.0;
            gl_FragData[0] = c_4;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec2 vs_TEXCOORD5;
          out highp float vs_TEXCOORD7;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD7 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1.xy = u_xlat0.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat1.xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;
              vs_TEXCOORD5.xy = hlslcc_mtx4x4unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTexture0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in highp float vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat0.xy = vs_TEXCOORD4.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * vs_TEXCOORD4.xx + u_xlat0.xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * vs_TEXCOORD4.zz + u_xlat0.xy;
              u_xlat0.xy = u_xlat0.xy + hlslcc_mtx4x4unity_WorldToLight[3].xy;
              u_xlat0.x = texture(_LightTexture0, u_xlat0.xy).w;
              u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_4.xyz;
              u_xlat0.x = vs_TEXCOORD7;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xxx;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec2 vs_TEXCOORD5;
          out highp float vs_TEXCOORD7;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD7 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1.xy = u_xlat0.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat1.xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;
              vs_TEXCOORD5.xy = hlslcc_mtx4x4unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTexture0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in highp float vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat0.xy = vs_TEXCOORD4.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * vs_TEXCOORD4.xx + u_xlat0.xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * vs_TEXCOORD4.zz + u_xlat0.xy;
              u_xlat0.xy = u_xlat0.xy + hlslcc_mtx4x4unity_WorldToLight[3].xy;
              u_xlat0.x = texture(_LightTexture0, u_xlat0.xy).w;
              u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_4.xyz;
              u_xlat0.x = vs_TEXCOORD7;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xxx;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec3 vs_TEXCOORD2;
          out highp vec3 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          out highp vec2 vs_TEXCOORD5;
          out highp float vs_TEXCOORD7;
          out highp vec4 vs_TEXCOORD6;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          float u_xlat13;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              gl_Position = u_xlat1;
              vs_TEXCOORD7 = u_xlat1.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat13 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat1.xyz = vec3(u_xlat13) * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat13 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat13 = inversesqrt(u_xlat13);
              u_xlat2.xyz = vec3(u_xlat13) * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat13 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = vec3(u_xlat13) * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
              u_xlat1.xy = u_xlat0.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat1.xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;
              vs_TEXCOORD5.xy = hlslcc_mtx4x4unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;
              vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _WorldSpaceLightPos0;
          uniform 	mediump vec4 _LightColor0;
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform highp sampler2D _LightTexture0;
          in highp vec4 vs_TEXCOORD0;
          in highp vec3 vs_TEXCOORD1;
          in highp vec3 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          in highp float vs_TEXCOORD7;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_4;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_1.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
              u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
              u_xlat0.xy = vs_TEXCOORD4.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * vs_TEXCOORD4.xx + u_xlat0.xy;
              u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * vs_TEXCOORD4.zz + u_xlat0.xy;
              u_xlat0.xy = u_xlat0.xy + hlslcc_mtx4x4unity_WorldToLight[3].xy;
              u_xlat0.x = texture(_LightTexture0, u_xlat0.xy).w;
              u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_0.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_4.xyz;
              u_xlat0.x = vs_TEXCOORD7;
          #ifdef UNITY_ADRENO_ES3
              u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
          #else
              u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
          #endif
              u_xlat0.xyz = u_xlat16_1.xyz * u_xlat0.xxx;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
      }
      Program "fp"
      {
        SubProgram "gles hw_tier00"
        {
           Keywords { "POINT" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "POINT" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "POINT" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "POINT" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "POINT" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "POINT" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "SPOT" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "SPOT" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "SPOT" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "SPOT" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "SPOT" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "SPOT" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "POINT_COOKIE" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "POINT_COOKIE" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "POINT_COOKIE" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "POINT_COOKIE" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "POINT_COOKIE" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "POINT_COOKIE" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL_COOKIE" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL_COOKIE" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL_COOKIE" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL_COOKIE" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL_COOKIE" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL_COOKIE" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "POINT" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "POINT" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "POINT" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "POINT" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "POINT" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "POINT" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "SPOT" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "SPOT" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "SPOT" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "SPOT" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "SPOT" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "SPOT" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "POINT_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "POINT_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "POINT_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "POINT_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "POINT_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "POINT_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
      }
      
    } // end phase
    Pass // ind: 3, name: PREPASS
    {
      Name "PREPASS"
      Tags
      { 
        "LIGHTMODE" = "PREPASSBASE"
        "RenderType" = "Opaque"
      }
      LOD 300
      GpuProgramID 172270
      // m_ProgramMask = 6
      !!! *******************************************************************************************
      !!! Allow restore shader as UnityLab format - only available for DevX GameRecovery license type
      !!! *******************************************************************************************
      Program "vp"
      {
        SubProgram "gles hw_tier00"
        {
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_5;
            tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_6;
            tmpvar_6[0] = unity_WorldToObject[0].xyz;
            tmpvar_6[1] = unity_WorldToObject[1].xyz;
            tmpvar_6[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_7;
            tmpvar_7 = normalize((_glesNormal * tmpvar_6));
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_8[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_8[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((tmpvar_8 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_9;
            highp float tmpvar_10;
            tmpvar_10 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = (((tmpvar_7.yzx * worldTangent_3.zxy) - (tmpvar_7.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_11;
            highp vec4 tmpvar_12;
            tmpvar_12.x = worldTangent_3.x;
            tmpvar_12.y = worldBinormal_1.x;
            tmpvar_12.z = tmpvar_7.x;
            tmpvar_12.w = tmpvar_5.x;
            highp vec4 tmpvar_13;
            tmpvar_13.x = worldTangent_3.y;
            tmpvar_13.y = worldBinormal_1.y;
            tmpvar_13.z = tmpvar_7.y;
            tmpvar_13.w = tmpvar_5.y;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.z;
            tmpvar_14.y = worldBinormal_1.z;
            tmpvar_14.z = tmpvar_7.z;
            tmpvar_14.w = tmpvar_5.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            xlv_TEXCOORD1 = tmpvar_12;
            xlv_TEXCOORD2 = tmpvar_13;
            xlv_TEXCOORD3 = tmpvar_14;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D _BumpMap;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            lowp vec4 res_1;
            highp vec3 worldN_2;
            lowp vec3 tmpvar_3;
            lowp vec3 _unity_tbn_2_4;
            lowp vec3 _unity_tbn_1_5;
            lowp vec3 _unity_tbn_0_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_6 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_5 = tmpvar_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_4 = tmpvar_9;
            lowp vec3 tmpvar_10;
            tmpvar_10 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            lowp float tmpvar_11;
            tmpvar_11 = dot (_unity_tbn_0_6, tmpvar_10);
            worldN_2.x = tmpvar_11;
            lowp float tmpvar_12;
            tmpvar_12 = dot (_unity_tbn_1_5, tmpvar_10);
            worldN_2.y = tmpvar_12;
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_2_4, tmpvar_10);
            worldN_2.z = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize(worldN_2);
            worldN_2 = tmpvar_14;
            tmpvar_3 = tmpvar_14;
            res_1.xyz = ((tmpvar_3 * 0.5) + 0.5);
            res_1.w = 0.0;
            gl_FragData[0] = res_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_5;
            tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_6;
            tmpvar_6[0] = unity_WorldToObject[0].xyz;
            tmpvar_6[1] = unity_WorldToObject[1].xyz;
            tmpvar_6[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_7;
            tmpvar_7 = normalize((_glesNormal * tmpvar_6));
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_8[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_8[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((tmpvar_8 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_9;
            highp float tmpvar_10;
            tmpvar_10 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = (((tmpvar_7.yzx * worldTangent_3.zxy) - (tmpvar_7.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_11;
            highp vec4 tmpvar_12;
            tmpvar_12.x = worldTangent_3.x;
            tmpvar_12.y = worldBinormal_1.x;
            tmpvar_12.z = tmpvar_7.x;
            tmpvar_12.w = tmpvar_5.x;
            highp vec4 tmpvar_13;
            tmpvar_13.x = worldTangent_3.y;
            tmpvar_13.y = worldBinormal_1.y;
            tmpvar_13.z = tmpvar_7.y;
            tmpvar_13.w = tmpvar_5.y;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.z;
            tmpvar_14.y = worldBinormal_1.z;
            tmpvar_14.z = tmpvar_7.z;
            tmpvar_14.w = tmpvar_5.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            xlv_TEXCOORD1 = tmpvar_12;
            xlv_TEXCOORD2 = tmpvar_13;
            xlv_TEXCOORD3 = tmpvar_14;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D _BumpMap;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            lowp vec4 res_1;
            highp vec3 worldN_2;
            lowp vec3 tmpvar_3;
            lowp vec3 _unity_tbn_2_4;
            lowp vec3 _unity_tbn_1_5;
            lowp vec3 _unity_tbn_0_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_6 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_5 = tmpvar_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_4 = tmpvar_9;
            lowp vec3 tmpvar_10;
            tmpvar_10 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            lowp float tmpvar_11;
            tmpvar_11 = dot (_unity_tbn_0_6, tmpvar_10);
            worldN_2.x = tmpvar_11;
            lowp float tmpvar_12;
            tmpvar_12 = dot (_unity_tbn_1_5, tmpvar_10);
            worldN_2.y = tmpvar_12;
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_2_4, tmpvar_10);
            worldN_2.z = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize(worldN_2);
            worldN_2 = tmpvar_14;
            tmpvar_3 = tmpvar_14;
            res_1.xyz = ((tmpvar_3 * 0.5) + 0.5);
            res_1.w = 0.0;
            gl_FragData[0] = res_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            highp vec3 tmpvar_5;
            tmpvar_5 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_6;
            tmpvar_6[0] = unity_WorldToObject[0].xyz;
            tmpvar_6[1] = unity_WorldToObject[1].xyz;
            tmpvar_6[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_7;
            tmpvar_7 = normalize((_glesNormal * tmpvar_6));
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_8[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_8[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((tmpvar_8 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_9;
            highp float tmpvar_10;
            tmpvar_10 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_10;
            highp vec3 tmpvar_11;
            tmpvar_11 = (((tmpvar_7.yzx * worldTangent_3.zxy) - (tmpvar_7.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_11;
            highp vec4 tmpvar_12;
            tmpvar_12.x = worldTangent_3.x;
            tmpvar_12.y = worldBinormal_1.x;
            tmpvar_12.z = tmpvar_7.x;
            tmpvar_12.w = tmpvar_5.x;
            highp vec4 tmpvar_13;
            tmpvar_13.x = worldTangent_3.y;
            tmpvar_13.y = worldBinormal_1.y;
            tmpvar_13.z = tmpvar_7.y;
            tmpvar_13.w = tmpvar_5.y;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.z;
            tmpvar_14.y = worldBinormal_1.z;
            tmpvar_14.z = tmpvar_7.z;
            tmpvar_14.w = tmpvar_5.z;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            xlv_TEXCOORD1 = tmpvar_12;
            xlv_TEXCOORD2 = tmpvar_13;
            xlv_TEXCOORD3 = tmpvar_14;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D _BumpMap;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            lowp vec4 res_1;
            highp vec3 worldN_2;
            lowp vec3 tmpvar_3;
            lowp vec3 _unity_tbn_2_4;
            lowp vec3 _unity_tbn_1_5;
            lowp vec3 _unity_tbn_0_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_6 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_5 = tmpvar_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_4 = tmpvar_9;
            lowp vec3 tmpvar_10;
            tmpvar_10 = ((texture2D (_BumpMap, xlv_TEXCOORD0).xyz * 2.0) - 1.0);
            lowp float tmpvar_11;
            tmpvar_11 = dot (_unity_tbn_0_6, tmpvar_10);
            worldN_2.x = tmpvar_11;
            lowp float tmpvar_12;
            tmpvar_12 = dot (_unity_tbn_1_5, tmpvar_10);
            worldN_2.y = tmpvar_12;
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_2_4, tmpvar_10);
            worldN_2.z = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = normalize(worldN_2);
            worldN_2 = tmpvar_14;
            tmpvar_3 = tmpvar_14;
            res_1.xyz = ((tmpvar_3 * 0.5) + 0.5);
            res_1.w = 0.0;
            gl_FragData[0] = res_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target0.w = 0.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target0.w = 0.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform lowp sampler2D _BumpMap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.xy).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target0.w = 0.0;
              return;
          }
          
          #endif
          
          "
        }
      }
      Program "fp"
      {
        SubProgram "gles hw_tier00"
        {
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
          
          "!!!!GLES3
          
          
          "
        }
      }
      
    } // end phase
    Pass // ind: 4, name: PREPASS
    {
      Name "PREPASS"
      Tags
      { 
        "LIGHTMODE" = "PREPASSFINAL"
        "RenderType" = "Opaque"
      }
      LOD 300
      ZWrite Off
      GpuProgramID 215806
      // m_ProgramMask = 6
      !!! *******************************************************************************************
      !!! Allow restore shader as UnityLab format - only available for DevX GameRecovery license type
      !!! *******************************************************************************************
      Program "vp"
      {
        SubProgram "gles hw_tier00"
        {
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = vec2(0.0, 0.0);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 c_6;
            c_6.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_6.w = tmpvar_4.w;
            c_2.xyz = c_6.xyz;
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = vec2(0.0, 0.0);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 c_6;
            c_6.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_6.w = tmpvar_4.w;
            c_2.xyz = c_6.xyz;
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = vec2(0.0, 0.0);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 c_6;
            c_6.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_6.w = tmpvar_4.w;
            c_2.xyz = c_6.xyz;
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec3 u_xlat10_2;
          void main()
          {
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
              u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat0.xyz * u_xlat16_2.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec3 u_xlat10_2;
          void main()
          {
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
              u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat0.xyz * u_xlat16_2.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec3 u_xlat10_2;
          void main()
          {
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
              u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat0.xyz * u_xlat16_2.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = vec2(0.0, 0.0);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 c_6;
            c_6.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_6.w = tmpvar_4.w;
            c_2.xyz = c_6.xyz;
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = vec2(0.0, 0.0);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 c_6;
            c_6.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_6.w = tmpvar_4.w;
            c_2.xyz = c_6.xyz;
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = vec2(0.0, 0.0);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 c_6;
            c_6.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_6.w = tmpvar_4.w;
            c_2.xyz = c_6.xyz;
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec3 u_xlat10_2;
          void main()
          {
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
              u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat0.xyz * u_xlat16_2.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec3 u_xlat10_2;
          void main()
          {
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
              u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat0.xyz * u_xlat16_2.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec3 u_xlat10_2;
          void main()
          {
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
              u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat0.xyz * u_xlat16_2.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_6;
            tmpvar_6 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_6.w)
             * tmpvar_6.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_7;
            c_7.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_7.w = tmpvar_4.w;
            c_2.xyz = c_7.xyz;
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_6;
            tmpvar_6 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_6.w)
             * tmpvar_6.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_7;
            c_7.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_7.w = tmpvar_4.w;
            c_2.xyz = c_7.xyz;
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_6;
            tmpvar_6 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_6.w)
             * tmpvar_6.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_7;
            c_7.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_7.w = tmpvar_4.w;
            c_2.xyz = c_7.xyz;
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_2.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = (-u_xlat16_2.xyz) + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_2.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = (-u_xlat16_2.xyz) + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_2.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = (-u_xlat16_2.xyz) + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_6;
            tmpvar_6 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_6.w)
             * tmpvar_6.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_7;
            c_7.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_7.w = tmpvar_4.w;
            c_2.xyz = c_7.xyz;
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_6;
            tmpvar_6 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_6.w)
             * tmpvar_6.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_7;
            c_7.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_7.w = tmpvar_4.w;
            c_2.xyz = c_7.xyz;
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_6;
            tmpvar_6 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_6.w)
             * tmpvar_6.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_7;
            c_7.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_7.w = tmpvar_4.w;
            c_2.xyz = c_7.xyz;
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_2.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = (-u_xlat16_2.xyz) + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_2.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = (-u_xlat16_2.xyz) + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_2.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = (-u_xlat16_2.xyz) + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = vec2(0.0, 0.0);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            mediump vec4 tmpvar_6;
            tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
            light_3.w = tmpvar_6.w;
            light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
            lowp vec4 c_7;
            c_7.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_7.w = tmpvar_4.w;
            c_2.xyz = c_7.xyz;
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = vec2(0.0, 0.0);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            mediump vec4 tmpvar_6;
            tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
            light_3.w = tmpvar_6.w;
            light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
            lowp vec4 c_7;
            c_7.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_7.w = tmpvar_4.w;
            c_2.xyz = c_7.xyz;
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = vec2(0.0, 0.0);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            mediump vec4 tmpvar_6;
            tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
            light_3.w = tmpvar_6.w;
            light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
            lowp vec4 c_7;
            c_7.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_7.w = tmpvar_4.w;
            c_2.xyz = c_7.xyz;
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec3 u_xlat10_2;
          void main()
          {
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat0.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
              u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat0.xyz * u_xlat16_2.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec3 u_xlat10_2;
          void main()
          {
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat0.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
              u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat0.xyz * u_xlat16_2.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec3 u_xlat10_2;
          void main()
          {
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat0.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
              u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat0.xyz * u_xlat16_2.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            mediump vec4 tmpvar_6;
            tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
            light_3.w = tmpvar_6.w;
            light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_7;
            tmpvar_7 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_7.w)
             * tmpvar_7.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_8;
            c_8.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_8.w = tmpvar_4.w;
            c_2.xyz = c_8.xyz;
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            mediump vec4 tmpvar_6;
            tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
            light_3.w = tmpvar_6.w;
            light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_7;
            tmpvar_7 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_7.w)
             * tmpvar_7.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_8;
            c_8.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_8.w = tmpvar_4.w;
            c_2.xyz = c_8.xyz;
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            mediump vec4 tmpvar_6;
            tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
            light_3.w = tmpvar_6.w;
            light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_7;
            tmpvar_7 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_7.w)
             * tmpvar_7.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_8;
            c_8.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_8.w = tmpvar_4.w;
            c_2.xyz = c_8.xyz;
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat0.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat0.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat0.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            mediump vec4 tmpvar_6;
            tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
            light_3.w = tmpvar_6.w;
            light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_7;
            tmpvar_7 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_7.w)
             * tmpvar_7.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_8;
            c_8.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_8.w = tmpvar_4.w;
            c_2.xyz = c_8.xyz;
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            mediump vec4 tmpvar_6;
            tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
            light_3.w = tmpvar_6.w;
            light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_7;
            tmpvar_7 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_7.w)
             * tmpvar_7.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_8;
            c_8.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_8.w = tmpvar_4.w;
            c_2.xyz = c_8.xyz;
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            mediump vec4 tmpvar_6;
            tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
            light_3.w = tmpvar_6.w;
            light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_7;
            tmpvar_7 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_7.w)
             * tmpvar_7.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_8;
            c_8.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_8.w = tmpvar_4.w;
            c_2.xyz = c_8.xyz;
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat0.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat0.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat0.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_1.xyz * u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = vec2(0.0, 0.0);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
            xlv_TEXCOORD5 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 c_6;
            c_6.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_6.w = tmpvar_4.w;
            c_2 = c_6;
            highp float tmpvar_7;
            tmpvar_7 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_7));
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = vec2(0.0, 0.0);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
            xlv_TEXCOORD5 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 c_6;
            c_6.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_6.w = tmpvar_4.w;
            c_2 = c_6;
            highp float tmpvar_7;
            tmpvar_7 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_7));
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = vec2(0.0, 0.0);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
            xlv_TEXCOORD5 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 c_6;
            c_6.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_6.w = tmpvar_4.w;
            c_2 = c_6;
            highp float tmpvar_7;
            tmpvar_7 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_7));
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD5;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec3 u_xlat10_2;
          float u_xlat9;
          void main()
          {
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
              u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz;
              u_xlat0.xyz = u_xlat16_2.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD5;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec3 u_xlat10_2;
          float u_xlat9;
          void main()
          {
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
              u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz;
              u_xlat0.xyz = u_xlat16_2.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD5;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec3 u_xlat10_2;
          float u_xlat9;
          void main()
          {
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
              u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz;
              u_xlat0.xyz = u_xlat16_2.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = vec2(0.0, 0.0);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
            xlv_TEXCOORD5 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 c_6;
            c_6.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_6.w = tmpvar_4.w;
            c_2 = c_6;
            highp float tmpvar_7;
            tmpvar_7 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_7));
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = vec2(0.0, 0.0);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
            xlv_TEXCOORD5 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 c_6;
            c_6.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_6.w = tmpvar_4.w;
            c_2 = c_6;
            highp float tmpvar_7;
            tmpvar_7 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_7));
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = vec2(0.0, 0.0);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
            xlv_TEXCOORD5 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 c_6;
            c_6.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_6.w = tmpvar_4.w;
            c_2 = c_6;
            highp float tmpvar_7;
            tmpvar_7 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_7));
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD5;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec3 u_xlat10_2;
          float u_xlat9;
          void main()
          {
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
              u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz;
              u_xlat0.xyz = u_xlat16_2.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD5;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec3 u_xlat10_2;
          float u_xlat9;
          void main()
          {
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
              u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz;
              u_xlat0.xyz = u_xlat16_2.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD5;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec3 u_xlat10_2;
          float u_xlat9;
          void main()
          {
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat0.xyz = (-u_xlat16_1.xyz) + vs_TEXCOORD4.xyz;
              u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz;
              u_xlat0.xyz = u_xlat16_2.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
            xlv_TEXCOORD5 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_6;
            tmpvar_6 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_6.w)
             * tmpvar_6.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_7;
            c_7.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_7.w = tmpvar_4.w;
            c_2 = c_7;
            highp float tmpvar_8;
            tmpvar_8 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_8));
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
            xlv_TEXCOORD5 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_6;
            tmpvar_6 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_6.w)
             * tmpvar_6.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_7;
            c_7.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_7.w = tmpvar_4.w;
            c_2 = c_7;
            highp float tmpvar_8;
            tmpvar_8 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_8));
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
            xlv_TEXCOORD5 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_6;
            tmpvar_6 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_6.w)
             * tmpvar_6.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_7;
            c_7.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_7.w = tmpvar_4.w;
            c_2 = c_7;
            highp float tmpvar_8;
            tmpvar_8 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_8));
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD5;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          float u_xlat9;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_2.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = (-u_xlat16_2.xyz) + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD5;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          float u_xlat9;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_2.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = (-u_xlat16_2.xyz) + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD5;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          float u_xlat9;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_2.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = (-u_xlat16_2.xyz) + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
            xlv_TEXCOORD5 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_6;
            tmpvar_6 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_6.w)
             * tmpvar_6.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_7;
            c_7.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_7.w = tmpvar_4.w;
            c_2 = c_7;
            highp float tmpvar_8;
            tmpvar_8 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_8));
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
            xlv_TEXCOORD5 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_6;
            tmpvar_6 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_6.w)
             * tmpvar_6.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_7;
            c_7.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_7.w = tmpvar_4.w;
            c_2 = c_7;
            highp float tmpvar_8;
            tmpvar_8 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_8));
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
            xlv_TEXCOORD5 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            light_3 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
            light_3.xyz = (light_3.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_6;
            tmpvar_6 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_6.w)
             * tmpvar_6.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_7;
            c_7.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_7.w = tmpvar_4.w;
            c_2 = c_7;
            highp float tmpvar_8;
            tmpvar_8 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_8));
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD5;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          float u_xlat9;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_2.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = (-u_xlat16_2.xyz) + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD5;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          float u_xlat9;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_2.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = (-u_xlat16_2.xyz) + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD5;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          float u_xlat9;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat16_2.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = (-u_xlat16_2.xyz) + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = vec2(0.0, 0.0);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
            xlv_TEXCOORD5 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            mediump vec4 tmpvar_6;
            tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
            light_3.w = tmpvar_6.w;
            light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
            lowp vec4 c_7;
            c_7.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_7.w = tmpvar_4.w;
            c_2 = c_7;
            highp float tmpvar_8;
            tmpvar_8 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_8));
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = vec2(0.0, 0.0);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
            xlv_TEXCOORD5 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            mediump vec4 tmpvar_6;
            tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
            light_3.w = tmpvar_6.w;
            light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
            lowp vec4 c_7;
            c_7.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_7.w = tmpvar_4.w;
            c_2 = c_7;
            highp float tmpvar_8;
            tmpvar_8 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_8));
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = vec2(0.0, 0.0);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
            xlv_TEXCOORD5 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            mediump vec4 tmpvar_6;
            tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
            light_3.w = tmpvar_6.w;
            light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
            lowp vec4 c_7;
            c_7.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_7.w = tmpvar_4.w;
            c_2 = c_7;
            highp float tmpvar_8;
            tmpvar_8 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_8));
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD5;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec3 u_xlat10_2;
          float u_xlat9;
          void main()
          {
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat0.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
              u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz;
              u_xlat0.xyz = u_xlat16_2.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD5;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec3 u_xlat10_2;
          float u_xlat9;
          void main()
          {
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat0.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
              u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz;
              u_xlat0.xyz = u_xlat16_2.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD5;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD2;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          lowp vec3 u_xlat10_2;
          float u_xlat9;
          void main()
          {
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_1.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat0.xyz = u_xlat16_1.xyz + vs_TEXCOORD4.xyz;
              u_xlat10_2.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_2.xyz = u_xlat10_2.xyz * _Color.xyz;
              u_xlat0.xyz = u_xlat16_2.xyz * u_xlat0.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
            xlv_TEXCOORD5 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            mediump vec4 tmpvar_6;
            tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
            light_3.w = tmpvar_6.w;
            light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_7;
            tmpvar_7 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_7.w)
             * tmpvar_7.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_8;
            c_8.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_8.w = tmpvar_4.w;
            c_2 = c_8;
            highp float tmpvar_9;
            tmpvar_9 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_9));
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
            xlv_TEXCOORD5 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            mediump vec4 tmpvar_6;
            tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
            light_3.w = tmpvar_6.w;
            light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_7;
            tmpvar_7 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_7.w)
             * tmpvar_7.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_8;
            c_8.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_8.w = tmpvar_4.w;
            c_2 = c_8;
            highp float tmpvar_9;
            tmpvar_9 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_9));
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
            xlv_TEXCOORD5 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            mediump vec4 tmpvar_6;
            tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
            light_3.w = tmpvar_6.w;
            light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_7;
            tmpvar_7 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_7.w)
             * tmpvar_7.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_8;
            c_8.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_8.w = tmpvar_4.w;
            c_2 = c_8;
            highp float tmpvar_9;
            tmpvar_9 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_9));
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD5;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          float u_xlat9;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat0.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD5;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          float u_xlat9;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat0.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD5;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          float u_xlat9;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat0.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
            xlv_TEXCOORD5 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            mediump vec4 tmpvar_6;
            tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
            light_3.w = tmpvar_6.w;
            light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_7;
            tmpvar_7 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_7.w)
             * tmpvar_7.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_8;
            c_8.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_8.w = tmpvar_4.w;
            c_2 = c_8;
            highp float tmpvar_9;
            tmpvar_9 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_9));
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
            xlv_TEXCOORD5 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            mediump vec4 tmpvar_6;
            tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
            light_3.w = tmpvar_6.w;
            light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_7;
            tmpvar_7 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_7.w)
             * tmpvar_7.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_8;
            c_8.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_8.w = tmpvar_4.w;
            c_2 = c_8;
            highp float tmpvar_9;
            tmpvar_9 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_9));
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp vec4 _ProjectionParams;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_FogParams;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec3 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            highp vec4 tmpvar_1;
            highp vec3 tmpvar_2;
            highp vec4 tmpvar_3;
            highp vec4 tmpvar_4;
            tmpvar_4.w = 1.0;
            tmpvar_4.xyz = _glesVertex.xyz;
            tmpvar_3 = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_4));
            highp vec4 o_5;
            highp vec4 tmpvar_6;
            tmpvar_6 = (tmpvar_3 * 0.5);
            highp vec2 tmpvar_7;
            tmpvar_7.x = tmpvar_6.x;
            tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
            o_5.xy = (tmpvar_7 + tmpvar_6.w);
            o_5.zw = tmpvar_3.zw;
            tmpvar_1.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_1.xy = vec2(0.0, 0.0);
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec4 tmpvar_9;
            tmpvar_9.w = 1.0;
            tmpvar_9.xyz = normalize((_glesNormal * tmpvar_8));
            mediump vec4 normal_10;
            normal_10 = tmpvar_9;
            mediump vec3 res_11;
            mediump vec3 x_12;
            x_12.x = dot (unity_SHAr, normal_10);
            x_12.y = dot (unity_SHAg, normal_10);
            x_12.z = dot (unity_SHAb, normal_10);
            mediump vec3 x1_13;
            mediump vec4 tmpvar_14;
            tmpvar_14 = (normal_10.xyzz * normal_10.yzzx);
            x1_13.x = dot (unity_SHBr, tmpvar_14);
            x1_13.y = dot (unity_SHBg, tmpvar_14);
            x1_13.z = dot (unity_SHBb, tmpvar_14);
            res_11 = (x_12 + (x1_13 + (unity_SHC.xyz * 
              ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y))
            )));
            mediump vec3 tmpvar_15;
            tmpvar_15 = max (((1.055 * 
              pow (max (res_11, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_11 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            gl_Position = tmpvar_3;
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = (unity_ObjectToWorld * _glesVertex).xyz;
            xlv_TEXCOORD2 = o_5;
            xlv_TEXCOORD3 = tmpvar_1;
            xlv_TEXCOORD4 = tmpvar_2;
            xlv_TEXCOORD5 = ((tmpvar_3.z * unity_FogParams.z) + unity_FogParams.w);
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform lowp vec4 unity_FogColor;
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform sampler2D _LightBuffer;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec3 xlv_TEXCOORD4;
          varying highp float xlv_TEXCOORD5;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec4 c_2;
            mediump vec4 light_3;
            lowp vec4 tmpvar_4;
            tmpvar_4 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color);
            lowp vec4 tmpvar_5;
            tmpvar_5 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
            light_3 = tmpvar_5;
            mediump vec4 tmpvar_6;
            tmpvar_6 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
            light_3.w = tmpvar_6.w;
            light_3.xyz = (tmpvar_6.xyz + xlv_TEXCOORD4);
            lowp vec4 tmpvar_7;
            tmpvar_7 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD3.zw);
            light_3.xyz = (light_3.xyz + pow ((
              (unity_DynamicLightmap_HDR.x * tmpvar_7.w)
             * tmpvar_7.xyz), unity_DynamicLightmap_HDR.yyy));
            lowp vec4 c_8;
            c_8.xyz = (tmpvar_4.xyz * light_3.xyz);
            c_8.w = tmpvar_4.w;
            c_2 = c_8;
            highp float tmpvar_9;
            tmpvar_9 = clamp (xlv_TEXCOORD5, 0.0, 1.0);
            c_2.xyz = mix (unity_FogColor.xyz, c_2.xyz, vec3(tmpvar_9));
            c_2.w = 1.0;
            tmpvar_1 = c_2;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD5;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          float u_xlat9;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat0.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD5;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          float u_xlat9;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat0.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 _ProjectionParams;
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_FogParams;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp float vs_TEXCOORD5;
          out highp vec3 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec3 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          mediump vec4 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          float u_xlat12;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              vs_TEXCOORD1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
              gl_Position = u_xlat0;
              vs_TEXCOORD5 = u_xlat0.z * unity_FogParams.z + unity_FogParams.w;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = u_xlat0.y * _ProjectionParams.x;
              u_xlat1.xzw = u_xlat0.xwy * vec3(0.5, 0.5, 0.5);
              vs_TEXCOORD2.zw = u_xlat0.zw;
              vs_TEXCOORD2.xy = u_xlat1.zz + u_xlat1.xw;
              vs_TEXCOORD3.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD3.xy = vec2(0.0, 0.0);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat16_2.x = u_xlat0.y * u_xlat0.y;
              u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);
              u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;
              u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);
              u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);
              u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);
              u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;
              u_xlat0.w = 1.0;
              u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
              u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
              u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
              u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;
              u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat0.xyz = log2(u_xlat16_2.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              vs_TEXCOORD4.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_FogColor;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _LightBuffer;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec2 vs_TEXCOORD0;
          in highp float vs_TEXCOORD5;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec3 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec3 u_xlat16_0;
          lowp vec4 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          float u_xlat9;
          void main()
          {
              u_xlat10_0 = texture(unity_DynamicLightmap, vs_TEXCOORD3.zw);
              u_xlat16_1.x = u_xlat10_0.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_1.xyz = u_xlat10_0.xyz * u_xlat16_1.xxx;
              u_xlat16_1.xyz = log2(u_xlat16_1.xyz);
              u_xlat16_1.xyz = u_xlat16_1.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_1.xyz = exp2(u_xlat16_1.xyz);
              u_xlat0.xy = vs_TEXCOORD2.xy / vs_TEXCOORD2.ww;
              u_xlat10_0.xyz = texture(_LightBuffer, u_xlat0.xy).xyz;
              u_xlat16_2.xyz = max(u_xlat10_0.xyz, vec3(0.00100000005, 0.00100000005, 0.00100000005));
              u_xlat0.xyz = u_xlat16_2.xyz + vs_TEXCOORD4.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz + u_xlat0.xyz;
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz + (-unity_FogColor.xyz);
              u_xlat9 = vs_TEXCOORD5;
          #ifdef UNITY_ADRENO_ES3
              u_xlat9 = min(max(u_xlat9, 0.0), 1.0);
          #else
              u_xlat9 = clamp(u_xlat9, 0.0, 1.0);
          #endif
              u_xlat0.xyz = vec3(u_xlat9) * u_xlat16_0.xyz + unity_FogColor.xyz;
              SV_Target0.xyz = u_xlat0.xyz;
              SV_Target0.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
      }
      Program "fp"
      {
        SubProgram "gles hw_tier00"
        {
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "FOG_LINEAR" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
      }
      
    } // end phase
    Pass // ind: 5, name: DEFERRED
    {
      Name "DEFERRED"
      Tags
      { 
        "LIGHTMODE" = "DEFERRED"
        "RenderType" = "Opaque"
      }
      LOD 300
      GpuProgramID 303158
      // m_ProgramMask = 6
      !!! *******************************************************************************************
      !!! Allow restore shader as UnityLab format - only available for DevX GameRecovery license type
      !!! *******************************************************************************************
      Program "vp"
      {
        SubProgram "gles hw_tier00"
        {
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            tmpvar_5.zw = vec2(0.0, 0.0);
            tmpvar_5.xy = vec2(0.0, 0.0);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          #extension GL_EXT_draw_buffers : enable
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            mediump vec4 outEmission_1;
            highp vec3 worldN_2;
            lowp vec3 tmpvar_3;
            lowp vec3 _unity_tbn_2_4;
            lowp vec3 _unity_tbn_1_5;
            lowp vec3 _unity_tbn_0_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_6 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_5 = tmpvar_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_4 = tmpvar_9;
            lowp vec3 tmpvar_10;
            tmpvar_10 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color).xyz;
            lowp vec3 tmpvar_11;
            tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_12;
            tmpvar_12 = dot (_unity_tbn_0_6, tmpvar_11);
            worldN_2.x = tmpvar_12;
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_1_5, tmpvar_11);
            worldN_2.y = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_2_4, tmpvar_11);
            worldN_2.z = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize(worldN_2);
            worldN_2 = tmpvar_15;
            tmpvar_3 = tmpvar_15;
            mediump vec4 emission_16;
            mediump vec3 tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_17 = tmpvar_10;
            tmpvar_18 = tmpvar_3;
            mediump vec4 outGBuffer2_19;
            mediump vec4 tmpvar_20;
            tmpvar_20.xyz = tmpvar_17;
            tmpvar_20.w = 1.0;
            mediump vec4 tmpvar_21;
            tmpvar_21.xyz = vec3(0.0, 0.0, 0.0);
            tmpvar_21.w = 0.0;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = ((tmpvar_18 * 0.5) + 0.5);
            outGBuffer2_19 = tmpvar_22;
            lowp vec4 tmpvar_23;
            tmpvar_23.w = 1.0;
            tmpvar_23.xyz = vec3(0.0, 0.0, 0.0);
            emission_16 = tmpvar_23;
            emission_16.xyz = emission_16.xyz;
            outEmission_1.w = emission_16.w;
            outEmission_1.xyz = exp2(-(emission_16.xyz));
            gl_FragData[0] = tmpvar_20;
            gl_FragData[1] = tmpvar_21;
            gl_FragData[2] = outGBuffer2_19;
            gl_FragData[3] = outEmission_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            tmpvar_5.zw = vec2(0.0, 0.0);
            tmpvar_5.xy = vec2(0.0, 0.0);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          #extension GL_EXT_draw_buffers : enable
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            mediump vec4 outEmission_1;
            highp vec3 worldN_2;
            lowp vec3 tmpvar_3;
            lowp vec3 _unity_tbn_2_4;
            lowp vec3 _unity_tbn_1_5;
            lowp vec3 _unity_tbn_0_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_6 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_5 = tmpvar_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_4 = tmpvar_9;
            lowp vec3 tmpvar_10;
            tmpvar_10 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color).xyz;
            lowp vec3 tmpvar_11;
            tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_12;
            tmpvar_12 = dot (_unity_tbn_0_6, tmpvar_11);
            worldN_2.x = tmpvar_12;
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_1_5, tmpvar_11);
            worldN_2.y = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_2_4, tmpvar_11);
            worldN_2.z = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize(worldN_2);
            worldN_2 = tmpvar_15;
            tmpvar_3 = tmpvar_15;
            mediump vec4 emission_16;
            mediump vec3 tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_17 = tmpvar_10;
            tmpvar_18 = tmpvar_3;
            mediump vec4 outGBuffer2_19;
            mediump vec4 tmpvar_20;
            tmpvar_20.xyz = tmpvar_17;
            tmpvar_20.w = 1.0;
            mediump vec4 tmpvar_21;
            tmpvar_21.xyz = vec3(0.0, 0.0, 0.0);
            tmpvar_21.w = 0.0;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = ((tmpvar_18 * 0.5) + 0.5);
            outGBuffer2_19 = tmpvar_22;
            lowp vec4 tmpvar_23;
            tmpvar_23.w = 1.0;
            tmpvar_23.xyz = vec3(0.0, 0.0, 0.0);
            emission_16 = tmpvar_23;
            emission_16.xyz = emission_16.xyz;
            outEmission_1.w = emission_16.w;
            outEmission_1.xyz = exp2(-(emission_16.xyz));
            gl_FragData[0] = tmpvar_20;
            gl_FragData[1] = tmpvar_21;
            gl_FragData[2] = outGBuffer2_19;
            gl_FragData[3] = outEmission_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            tmpvar_5.zw = vec2(0.0, 0.0);
            tmpvar_5.xy = vec2(0.0, 0.0);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          #extension GL_EXT_draw_buffers : enable
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            mediump vec4 outEmission_1;
            highp vec3 worldN_2;
            lowp vec3 tmpvar_3;
            lowp vec3 _unity_tbn_2_4;
            lowp vec3 _unity_tbn_1_5;
            lowp vec3 _unity_tbn_0_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_6 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_5 = tmpvar_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_4 = tmpvar_9;
            lowp vec3 tmpvar_10;
            tmpvar_10 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color).xyz;
            lowp vec3 tmpvar_11;
            tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_12;
            tmpvar_12 = dot (_unity_tbn_0_6, tmpvar_11);
            worldN_2.x = tmpvar_12;
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_1_5, tmpvar_11);
            worldN_2.y = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_2_4, tmpvar_11);
            worldN_2.z = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize(worldN_2);
            worldN_2 = tmpvar_15;
            tmpvar_3 = tmpvar_15;
            mediump vec4 emission_16;
            mediump vec3 tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_17 = tmpvar_10;
            tmpvar_18 = tmpvar_3;
            mediump vec4 outGBuffer2_19;
            mediump vec4 tmpvar_20;
            tmpvar_20.xyz = tmpvar_17;
            tmpvar_20.w = 1.0;
            mediump vec4 tmpvar_21;
            tmpvar_21.xyz = vec3(0.0, 0.0, 0.0);
            tmpvar_21.w = 0.0;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = ((tmpvar_18 * 0.5) + 0.5);
            outGBuffer2_19 = tmpvar_22;
            lowp vec4 tmpvar_23;
            tmpvar_23.w = 1.0;
            tmpvar_23.xyz = vec3(0.0, 0.0, 0.0);
            emission_16 = tmpvar_23;
            emission_16.xyz = emission_16.xyz;
            outEmission_1.w = emission_16.w;
            outEmission_1.xyz = exp2(-(emission_16.xyz));
            gl_FragData[0] = tmpvar_20;
            gl_FragData[1] = tmpvar_21;
            gl_FragData[2] = outGBuffer2_19;
            gl_FragData[3] = outEmission_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          layout(location = 1) out mediump vec4 SV_Target1;
          layout(location = 2) out mediump vec4 SV_Target2;
          layout(location = 3) out mediump vec4 SV_Target3;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target2.xyz = u_xlat16_0.xyz;
              SV_Target2.w = 1.0;
              SV_Target3 = vec4(1.0, 1.0, 1.0, 1.0);
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          layout(location = 1) out mediump vec4 SV_Target1;
          layout(location = 2) out mediump vec4 SV_Target2;
          layout(location = 3) out mediump vec4 SV_Target3;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target2.xyz = u_xlat16_0.xyz;
              SV_Target2.w = 1.0;
              SV_Target3 = vec4(1.0, 1.0, 1.0, 1.0);
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          layout(location = 0) out mediump vec4 SV_Target0;
          layout(location = 1) out mediump vec4 SV_Target1;
          layout(location = 2) out mediump vec4 SV_Target2;
          layout(location = 3) out mediump vec4 SV_Target3;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target2.xyz = u_xlat16_0.xyz;
              SV_Target2.w = 1.0;
              SV_Target3 = vec4(1.0, 1.0, 1.0, 1.0);
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          varying mediump vec3 xlv_TEXCOORD5;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            tmpvar_5.zw = vec2(0.0, 0.0);
            tmpvar_5.xy = vec2(0.0, 0.0);
            mediump vec3 normal_17;
            normal_17 = tmpvar_9;
            mediump vec4 tmpvar_18;
            tmpvar_18.w = 1.0;
            tmpvar_18.xyz = normal_17;
            mediump vec3 res_19;
            mediump vec3 x_20;
            x_20.x = dot (unity_SHAr, tmpvar_18);
            x_20.y = dot (unity_SHAg, tmpvar_18);
            x_20.z = dot (unity_SHAb, tmpvar_18);
            mediump vec3 x1_21;
            mediump vec4 tmpvar_22;
            tmpvar_22 = (normal_17.xyzz * normal_17.yzzx);
            x1_21.x = dot (unity_SHBr, tmpvar_22);
            x1_21.y = dot (unity_SHBg, tmpvar_22);
            x1_21.z = dot (unity_SHBb, tmpvar_22);
            res_19 = (x_20 + (x1_21 + (unity_SHC.xyz * 
              ((normal_17.x * normal_17.x) - (normal_17.y * normal_17.y))
            )));
            mediump vec3 tmpvar_23;
            tmpvar_23 = max (((1.055 * 
              pow (max (res_19, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_19 = tmpvar_23;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = tmpvar_5;
            xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_23);
          }
          
          
          #endif
          #ifdef FRAGMENT
          #extension GL_EXT_draw_buffers : enable
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD5;
          void main ()
          {
            mediump vec4 outEmission_1;
            highp vec3 worldN_2;
            lowp vec3 tmpvar_3;
            lowp vec3 _unity_tbn_2_4;
            lowp vec3 _unity_tbn_1_5;
            lowp vec3 _unity_tbn_0_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_6 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_5 = tmpvar_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_4 = tmpvar_9;
            lowp vec3 tmpvar_10;
            lowp vec4 tmpvar_11;
            tmpvar_11 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            tmpvar_10 = tmpvar_11.xyz;
            lowp vec3 tmpvar_12;
            tmpvar_12 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_0_6, tmpvar_12);
            worldN_2.x = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_1_5, tmpvar_12);
            worldN_2.y = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_2_4, tmpvar_12);
            worldN_2.z = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(worldN_2);
            worldN_2 = tmpvar_16;
            tmpvar_3 = tmpvar_16;
            mediump vec4 emission_17;
            mediump vec3 tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_18 = tmpvar_10;
            tmpvar_19 = tmpvar_3;
            mediump vec4 outGBuffer2_20;
            mediump vec4 tmpvar_21;
            tmpvar_21.xyz = tmpvar_18;
            tmpvar_21.w = 1.0;
            mediump vec4 tmpvar_22;
            tmpvar_22.xyz = vec3(0.0, 0.0, 0.0);
            tmpvar_22.w = 0.0;
            highp vec4 tmpvar_23;
            tmpvar_23.w = 1.0;
            tmpvar_23.xyz = ((tmpvar_19 * 0.5) + 0.5);
            outGBuffer2_20 = tmpvar_23;
            lowp vec4 tmpvar_24;
            tmpvar_24.w = 1.0;
            tmpvar_24.xyz = vec3(0.0, 0.0, 0.0);
            emission_17 = tmpvar_24;
            emission_17.xyz = (emission_17.xyz + (tmpvar_11.xyz * xlv_TEXCOORD5));
            outEmission_1.w = emission_17.w;
            outEmission_1.xyz = exp2(-(emission_17.xyz));
            gl_FragData[0] = tmpvar_21;
            gl_FragData[1] = tmpvar_22;
            gl_FragData[2] = outGBuffer2_20;
            gl_FragData[3] = outEmission_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          varying mediump vec3 xlv_TEXCOORD5;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            tmpvar_5.zw = vec2(0.0, 0.0);
            tmpvar_5.xy = vec2(0.0, 0.0);
            mediump vec3 normal_17;
            normal_17 = tmpvar_9;
            mediump vec4 tmpvar_18;
            tmpvar_18.w = 1.0;
            tmpvar_18.xyz = normal_17;
            mediump vec3 res_19;
            mediump vec3 x_20;
            x_20.x = dot (unity_SHAr, tmpvar_18);
            x_20.y = dot (unity_SHAg, tmpvar_18);
            x_20.z = dot (unity_SHAb, tmpvar_18);
            mediump vec3 x1_21;
            mediump vec4 tmpvar_22;
            tmpvar_22 = (normal_17.xyzz * normal_17.yzzx);
            x1_21.x = dot (unity_SHBr, tmpvar_22);
            x1_21.y = dot (unity_SHBg, tmpvar_22);
            x1_21.z = dot (unity_SHBb, tmpvar_22);
            res_19 = (x_20 + (x1_21 + (unity_SHC.xyz * 
              ((normal_17.x * normal_17.x) - (normal_17.y * normal_17.y))
            )));
            mediump vec3 tmpvar_23;
            tmpvar_23 = max (((1.055 * 
              pow (max (res_19, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_19 = tmpvar_23;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = tmpvar_5;
            xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_23);
          }
          
          
          #endif
          #ifdef FRAGMENT
          #extension GL_EXT_draw_buffers : enable
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD5;
          void main ()
          {
            mediump vec4 outEmission_1;
            highp vec3 worldN_2;
            lowp vec3 tmpvar_3;
            lowp vec3 _unity_tbn_2_4;
            lowp vec3 _unity_tbn_1_5;
            lowp vec3 _unity_tbn_0_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_6 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_5 = tmpvar_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_4 = tmpvar_9;
            lowp vec3 tmpvar_10;
            lowp vec4 tmpvar_11;
            tmpvar_11 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            tmpvar_10 = tmpvar_11.xyz;
            lowp vec3 tmpvar_12;
            tmpvar_12 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_0_6, tmpvar_12);
            worldN_2.x = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_1_5, tmpvar_12);
            worldN_2.y = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_2_4, tmpvar_12);
            worldN_2.z = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(worldN_2);
            worldN_2 = tmpvar_16;
            tmpvar_3 = tmpvar_16;
            mediump vec4 emission_17;
            mediump vec3 tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_18 = tmpvar_10;
            tmpvar_19 = tmpvar_3;
            mediump vec4 outGBuffer2_20;
            mediump vec4 tmpvar_21;
            tmpvar_21.xyz = tmpvar_18;
            tmpvar_21.w = 1.0;
            mediump vec4 tmpvar_22;
            tmpvar_22.xyz = vec3(0.0, 0.0, 0.0);
            tmpvar_22.w = 0.0;
            highp vec4 tmpvar_23;
            tmpvar_23.w = 1.0;
            tmpvar_23.xyz = ((tmpvar_19 * 0.5) + 0.5);
            outGBuffer2_20 = tmpvar_23;
            lowp vec4 tmpvar_24;
            tmpvar_24.w = 1.0;
            tmpvar_24.xyz = vec3(0.0, 0.0, 0.0);
            emission_17 = tmpvar_24;
            emission_17.xyz = (emission_17.xyz + (tmpvar_11.xyz * xlv_TEXCOORD5));
            outEmission_1.w = emission_17.w;
            outEmission_1.xyz = exp2(-(emission_17.xyz));
            gl_FragData[0] = tmpvar_21;
            gl_FragData[1] = tmpvar_22;
            gl_FragData[2] = outGBuffer2_20;
            gl_FragData[3] = outEmission_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          varying mediump vec3 xlv_TEXCOORD5;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            tmpvar_5.zw = vec2(0.0, 0.0);
            tmpvar_5.xy = vec2(0.0, 0.0);
            mediump vec3 normal_17;
            normal_17 = tmpvar_9;
            mediump vec4 tmpvar_18;
            tmpvar_18.w = 1.0;
            tmpvar_18.xyz = normal_17;
            mediump vec3 res_19;
            mediump vec3 x_20;
            x_20.x = dot (unity_SHAr, tmpvar_18);
            x_20.y = dot (unity_SHAg, tmpvar_18);
            x_20.z = dot (unity_SHAb, tmpvar_18);
            mediump vec3 x1_21;
            mediump vec4 tmpvar_22;
            tmpvar_22 = (normal_17.xyzz * normal_17.yzzx);
            x1_21.x = dot (unity_SHBr, tmpvar_22);
            x1_21.y = dot (unity_SHBg, tmpvar_22);
            x1_21.z = dot (unity_SHBb, tmpvar_22);
            res_19 = (x_20 + (x1_21 + (unity_SHC.xyz * 
              ((normal_17.x * normal_17.x) - (normal_17.y * normal_17.y))
            )));
            mediump vec3 tmpvar_23;
            tmpvar_23 = max (((1.055 * 
              pow (max (res_19, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_19 = tmpvar_23;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = tmpvar_5;
            xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_23);
          }
          
          
          #endif
          #ifdef FRAGMENT
          #extension GL_EXT_draw_buffers : enable
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD5;
          void main ()
          {
            mediump vec4 outEmission_1;
            highp vec3 worldN_2;
            lowp vec3 tmpvar_3;
            lowp vec3 _unity_tbn_2_4;
            lowp vec3 _unity_tbn_1_5;
            lowp vec3 _unity_tbn_0_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_6 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_5 = tmpvar_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_4 = tmpvar_9;
            lowp vec3 tmpvar_10;
            lowp vec4 tmpvar_11;
            tmpvar_11 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            tmpvar_10 = tmpvar_11.xyz;
            lowp vec3 tmpvar_12;
            tmpvar_12 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_0_6, tmpvar_12);
            worldN_2.x = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_1_5, tmpvar_12);
            worldN_2.y = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_2_4, tmpvar_12);
            worldN_2.z = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(worldN_2);
            worldN_2 = tmpvar_16;
            tmpvar_3 = tmpvar_16;
            mediump vec4 emission_17;
            mediump vec3 tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_18 = tmpvar_10;
            tmpvar_19 = tmpvar_3;
            mediump vec4 outGBuffer2_20;
            mediump vec4 tmpvar_21;
            tmpvar_21.xyz = tmpvar_18;
            tmpvar_21.w = 1.0;
            mediump vec4 tmpvar_22;
            tmpvar_22.xyz = vec3(0.0, 0.0, 0.0);
            tmpvar_22.w = 0.0;
            highp vec4 tmpvar_23;
            tmpvar_23.w = 1.0;
            tmpvar_23.xyz = ((tmpvar_19 * 0.5) + 0.5);
            outGBuffer2_20 = tmpvar_23;
            lowp vec4 tmpvar_24;
            tmpvar_24.w = 1.0;
            tmpvar_24.xyz = vec3(0.0, 0.0, 0.0);
            emission_17 = tmpvar_24;
            emission_17.xyz = (emission_17.xyz + (tmpvar_11.xyz * xlv_TEXCOORD5));
            outEmission_1.w = emission_17.w;
            outEmission_1.xyz = exp2(-(emission_17.xyz));
            gl_FragData[0] = tmpvar_21;
            gl_FragData[1] = tmpvar_22;
            gl_FragData[2] = outGBuffer2_20;
            gl_FragData[3] = outEmission_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat2 = vec4(u_xlat18) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat1.z;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.z = u_xlat2.z;
              vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzwx * u_xlat2.xywz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          layout(location = 1) out mediump vec4 SV_Target1;
          layout(location = 2) out mediump vec4 SV_Target2;
          layout(location = 3) out mediump vec4 SV_Target3;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz;
              u_xlat16_1.xyz = u_xlat16_0.xyz * vs_TEXCOORD5.xyz;
              SV_Target3.xyz = exp2((-u_xlat16_1.xyz));
              SV_Target0.w = 1.0;
              SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target2.xyz = u_xlat16_0.xyz;
              SV_Target2.w = 1.0;
              SV_Target3.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat2 = vec4(u_xlat18) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat1.z;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.z = u_xlat2.z;
              vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzwx * u_xlat2.xywz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          layout(location = 1) out mediump vec4 SV_Target1;
          layout(location = 2) out mediump vec4 SV_Target2;
          layout(location = 3) out mediump vec4 SV_Target3;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz;
              u_xlat16_1.xyz = u_xlat16_0.xyz * vs_TEXCOORD5.xyz;
              SV_Target3.xyz = exp2((-u_xlat16_1.xyz));
              SV_Target0.w = 1.0;
              SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target2.xyz = u_xlat16_0.xyz;
              SV_Target2.w = 1.0;
              SV_Target3.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat2 = vec4(u_xlat18) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat1.z;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.z = u_xlat2.z;
              vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzwx * u_xlat2.xywz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          layout(location = 1) out mediump vec4 SV_Target1;
          layout(location = 2) out mediump vec4 SV_Target2;
          layout(location = 3) out mediump vec4 SV_Target3;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz;
              u_xlat16_1.xyz = u_xlat16_0.xyz * vs_TEXCOORD5.xyz;
              SV_Target3.xyz = exp2((-u_xlat16_1.xyz));
              SV_Target0.w = 1.0;
              SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target2.xyz = u_xlat16_0.xyz;
              SV_Target2.w = 1.0;
              SV_Target3.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.xy = vec2(0.0, 0.0);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          #extension GL_EXT_draw_buffers : enable
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            mediump vec4 outEmission_1;
            highp vec3 worldN_2;
            lowp vec3 tmpvar_3;
            lowp vec3 _unity_tbn_2_4;
            lowp vec3 _unity_tbn_1_5;
            lowp vec3 _unity_tbn_0_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_6 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_5 = tmpvar_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_4 = tmpvar_9;
            lowp vec3 tmpvar_10;
            lowp vec4 tmpvar_11;
            tmpvar_11 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            tmpvar_10 = tmpvar_11.xyz;
            lowp vec3 tmpvar_12;
            tmpvar_12 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_0_6, tmpvar_12);
            worldN_2.x = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_1_5, tmpvar_12);
            worldN_2.y = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_2_4, tmpvar_12);
            worldN_2.z = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(worldN_2);
            worldN_2 = tmpvar_16;
            tmpvar_3 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD4.zw);
            mediump vec4 emission_18;
            mediump vec3 tmpvar_19;
            highp vec3 tmpvar_20;
            tmpvar_19 = tmpvar_10;
            tmpvar_20 = tmpvar_3;
            mediump vec4 outGBuffer2_21;
            mediump vec4 tmpvar_22;
            tmpvar_22.xyz = tmpvar_19;
            tmpvar_22.w = 1.0;
            mediump vec4 tmpvar_23;
            tmpvar_23.xyz = vec3(0.0, 0.0, 0.0);
            tmpvar_23.w = 0.0;
            highp vec4 tmpvar_24;
            tmpvar_24.w = 1.0;
            tmpvar_24.xyz = ((tmpvar_20 * 0.5) + 0.5);
            outGBuffer2_21 = tmpvar_24;
            lowp vec4 tmpvar_25;
            tmpvar_25.w = 1.0;
            tmpvar_25.xyz = vec3(0.0, 0.0, 0.0);
            emission_18 = tmpvar_25;
            emission_18.xyz = (emission_18.xyz + (tmpvar_11.xyz * pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_17.w) * tmpvar_17.xyz)
            , unity_DynamicLightmap_HDR.yyy)));
            outEmission_1.w = emission_18.w;
            outEmission_1.xyz = exp2(-(emission_18.xyz));
            gl_FragData[0] = tmpvar_22;
            gl_FragData[1] = tmpvar_23;
            gl_FragData[2] = outGBuffer2_21;
            gl_FragData[3] = outEmission_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.xy = vec2(0.0, 0.0);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          #extension GL_EXT_draw_buffers : enable
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            mediump vec4 outEmission_1;
            highp vec3 worldN_2;
            lowp vec3 tmpvar_3;
            lowp vec3 _unity_tbn_2_4;
            lowp vec3 _unity_tbn_1_5;
            lowp vec3 _unity_tbn_0_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_6 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_5 = tmpvar_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_4 = tmpvar_9;
            lowp vec3 tmpvar_10;
            lowp vec4 tmpvar_11;
            tmpvar_11 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            tmpvar_10 = tmpvar_11.xyz;
            lowp vec3 tmpvar_12;
            tmpvar_12 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_0_6, tmpvar_12);
            worldN_2.x = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_1_5, tmpvar_12);
            worldN_2.y = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_2_4, tmpvar_12);
            worldN_2.z = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(worldN_2);
            worldN_2 = tmpvar_16;
            tmpvar_3 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD4.zw);
            mediump vec4 emission_18;
            mediump vec3 tmpvar_19;
            highp vec3 tmpvar_20;
            tmpvar_19 = tmpvar_10;
            tmpvar_20 = tmpvar_3;
            mediump vec4 outGBuffer2_21;
            mediump vec4 tmpvar_22;
            tmpvar_22.xyz = tmpvar_19;
            tmpvar_22.w = 1.0;
            mediump vec4 tmpvar_23;
            tmpvar_23.xyz = vec3(0.0, 0.0, 0.0);
            tmpvar_23.w = 0.0;
            highp vec4 tmpvar_24;
            tmpvar_24.w = 1.0;
            tmpvar_24.xyz = ((tmpvar_20 * 0.5) + 0.5);
            outGBuffer2_21 = tmpvar_24;
            lowp vec4 tmpvar_25;
            tmpvar_25.w = 1.0;
            tmpvar_25.xyz = vec3(0.0, 0.0, 0.0);
            emission_18 = tmpvar_25;
            emission_18.xyz = (emission_18.xyz + (tmpvar_11.xyz * pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_17.w) * tmpvar_17.xyz)
            , unity_DynamicLightmap_HDR.yyy)));
            outEmission_1.w = emission_18.w;
            outEmission_1.xyz = exp2(-(emission_18.xyz));
            gl_FragData[0] = tmpvar_22;
            gl_FragData[1] = tmpvar_23;
            gl_FragData[2] = outGBuffer2_21;
            gl_FragData[3] = outEmission_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.xy = vec2(0.0, 0.0);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          #extension GL_EXT_draw_buffers : enable
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            mediump vec4 outEmission_1;
            highp vec3 worldN_2;
            lowp vec3 tmpvar_3;
            lowp vec3 _unity_tbn_2_4;
            lowp vec3 _unity_tbn_1_5;
            lowp vec3 _unity_tbn_0_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_6 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_5 = tmpvar_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_4 = tmpvar_9;
            lowp vec3 tmpvar_10;
            lowp vec4 tmpvar_11;
            tmpvar_11 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            tmpvar_10 = tmpvar_11.xyz;
            lowp vec3 tmpvar_12;
            tmpvar_12 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_0_6, tmpvar_12);
            worldN_2.x = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_1_5, tmpvar_12);
            worldN_2.y = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_2_4, tmpvar_12);
            worldN_2.z = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(worldN_2);
            worldN_2 = tmpvar_16;
            tmpvar_3 = tmpvar_16;
            lowp vec4 tmpvar_17;
            tmpvar_17 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD4.zw);
            mediump vec4 emission_18;
            mediump vec3 tmpvar_19;
            highp vec3 tmpvar_20;
            tmpvar_19 = tmpvar_10;
            tmpvar_20 = tmpvar_3;
            mediump vec4 outGBuffer2_21;
            mediump vec4 tmpvar_22;
            tmpvar_22.xyz = tmpvar_19;
            tmpvar_22.w = 1.0;
            mediump vec4 tmpvar_23;
            tmpvar_23.xyz = vec3(0.0, 0.0, 0.0);
            tmpvar_23.w = 0.0;
            highp vec4 tmpvar_24;
            tmpvar_24.w = 1.0;
            tmpvar_24.xyz = ((tmpvar_20 * 0.5) + 0.5);
            outGBuffer2_21 = tmpvar_24;
            lowp vec4 tmpvar_25;
            tmpvar_25.w = 1.0;
            tmpvar_25.xyz = vec3(0.0, 0.0, 0.0);
            emission_18 = tmpvar_25;
            emission_18.xyz = (emission_18.xyz + (tmpvar_11.xyz * pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_17.w) * tmpvar_17.xyz)
            , unity_DynamicLightmap_HDR.yyy)));
            outEmission_1.w = emission_18.w;
            outEmission_1.xyz = exp2(-(emission_18.xyz));
            gl_FragData[0] = tmpvar_22;
            gl_FragData[1] = tmpvar_23;
            gl_FragData[2] = outGBuffer2_21;
            gl_FragData[3] = outEmission_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD4.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          layout(location = 1) out mediump vec4 SV_Target1;
          layout(location = 2) out mediump vec4 SV_Target2;
          layout(location = 3) out mediump vec4 SV_Target3;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          mediump float u_xlat16_12;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_12 = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_12 = inversesqrt(u_xlat16_12);
              u_xlat16_1.xyz = vec3(u_xlat16_12) * u_xlat16_3.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target2.xyz = u_xlat16_1.xyz;
              SV_Target2.w = 1.0;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD4.zw);
              u_xlat16_2.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;
              u_xlat16_2.xyz = log2(u_xlat16_2.xyz);
              u_xlat16_2.xyz = u_xlat16_2.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_2.xyz = exp2(u_xlat16_2.xyz);
              u_xlat16_2.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
              SV_Target3.xyz = exp2((-u_xlat16_2.xyz));
              SV_Target3.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD4.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          layout(location = 1) out mediump vec4 SV_Target1;
          layout(location = 2) out mediump vec4 SV_Target2;
          layout(location = 3) out mediump vec4 SV_Target3;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          mediump float u_xlat16_12;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_12 = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_12 = inversesqrt(u_xlat16_12);
              u_xlat16_1.xyz = vec3(u_xlat16_12) * u_xlat16_3.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target2.xyz = u_xlat16_1.xyz;
              SV_Target2.w = 1.0;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD4.zw);
              u_xlat16_2.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;
              u_xlat16_2.xyz = log2(u_xlat16_2.xyz);
              u_xlat16_2.xyz = u_xlat16_2.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_2.xyz = exp2(u_xlat16_2.xyz);
              u_xlat16_2.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
              SV_Target3.xyz = exp2((-u_xlat16_2.xyz));
              SV_Target3.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD4.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          layout(location = 1) out mediump vec4 SV_Target1;
          layout(location = 2) out mediump vec4 SV_Target2;
          layout(location = 3) out mediump vec4 SV_Target3;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          mediump float u_xlat16_12;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_12 = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_12 = inversesqrt(u_xlat16_12);
              u_xlat16_1.xyz = vec3(u_xlat16_12) * u_xlat16_3.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target2.xyz = u_xlat16_1.xyz;
              SV_Target2.w = 1.0;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD4.zw);
              u_xlat16_2.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;
              u_xlat16_2.xyz = log2(u_xlat16_2.xyz);
              u_xlat16_2.xyz = u_xlat16_2.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_2.xyz = exp2(u_xlat16_2.xyz);
              u_xlat16_2.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
              SV_Target3.xyz = exp2((-u_xlat16_2.xyz));
              SV_Target3.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.xy = vec2(0.0, 0.0);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          #extension GL_EXT_draw_buffers : enable
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            mediump vec4 outEmission_1;
            highp vec3 worldN_2;
            lowp vec3 tmpvar_3;
            lowp vec3 _unity_tbn_2_4;
            lowp vec3 _unity_tbn_1_5;
            lowp vec3 _unity_tbn_0_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_6 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_5 = tmpvar_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_4 = tmpvar_9;
            lowp vec3 tmpvar_10;
            lowp vec4 tmpvar_11;
            tmpvar_11 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            tmpvar_10 = tmpvar_11.xyz;
            lowp vec3 tmpvar_12;
            tmpvar_12 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_0_6, tmpvar_12);
            worldN_2.x = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_1_5, tmpvar_12);
            worldN_2.y = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_2_4, tmpvar_12);
            worldN_2.z = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(worldN_2);
            worldN_2 = tmpvar_16;
            tmpvar_3 = tmpvar_16;
            mediump vec3 normalWorld_17;
            normalWorld_17 = tmpvar_3;
            mediump vec4 realtimeDirTex_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD4.zw);
            lowp vec4 tmpvar_20;
            tmpvar_20 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD4.zw);
            realtimeDirTex_18 = tmpvar_20;
            lowp vec4 dirTex_21;
            dirTex_21 = realtimeDirTex_18;
            lowp vec3 y_22;
            y_22 = (dirTex_21.xyz - 0.5);
            lowp float tmpvar_23;
            tmpvar_23 = max (0.0001, dirTex_21.w);
            mediump vec4 emission_24;
            mediump vec3 tmpvar_25;
            highp vec3 tmpvar_26;
            tmpvar_25 = tmpvar_10;
            tmpvar_26 = tmpvar_3;
            mediump vec4 outGBuffer2_27;
            mediump vec4 tmpvar_28;
            tmpvar_28.xyz = tmpvar_25;
            tmpvar_28.w = 1.0;
            mediump vec4 tmpvar_29;
            tmpvar_29.xyz = vec3(0.0, 0.0, 0.0);
            tmpvar_29.w = 0.0;
            highp vec4 tmpvar_30;
            tmpvar_30.w = 1.0;
            tmpvar_30.xyz = ((tmpvar_26 * 0.5) + 0.5);
            outGBuffer2_27 = tmpvar_30;
            lowp vec4 tmpvar_31;
            tmpvar_31.w = 1.0;
            tmpvar_31.xyz = vec3(0.0, 0.0, 0.0);
            emission_24 = tmpvar_31;
            emission_24.xyz = (emission_24.xyz + (tmpvar_11.xyz * (
              (pow (((unity_DynamicLightmap_HDR.x * tmpvar_19.w) * tmpvar_19.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_17, y_22) + 0.5))
             / tmpvar_23)));
            outEmission_1.w = emission_24.w;
            outEmission_1.xyz = exp2(-(emission_24.xyz));
            gl_FragData[0] = tmpvar_28;
            gl_FragData[1] = tmpvar_29;
            gl_FragData[2] = outGBuffer2_27;
            gl_FragData[3] = outEmission_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.xy = vec2(0.0, 0.0);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          #extension GL_EXT_draw_buffers : enable
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            mediump vec4 outEmission_1;
            highp vec3 worldN_2;
            lowp vec3 tmpvar_3;
            lowp vec3 _unity_tbn_2_4;
            lowp vec3 _unity_tbn_1_5;
            lowp vec3 _unity_tbn_0_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_6 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_5 = tmpvar_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_4 = tmpvar_9;
            lowp vec3 tmpvar_10;
            lowp vec4 tmpvar_11;
            tmpvar_11 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            tmpvar_10 = tmpvar_11.xyz;
            lowp vec3 tmpvar_12;
            tmpvar_12 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_0_6, tmpvar_12);
            worldN_2.x = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_1_5, tmpvar_12);
            worldN_2.y = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_2_4, tmpvar_12);
            worldN_2.z = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(worldN_2);
            worldN_2 = tmpvar_16;
            tmpvar_3 = tmpvar_16;
            mediump vec3 normalWorld_17;
            normalWorld_17 = tmpvar_3;
            mediump vec4 realtimeDirTex_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD4.zw);
            lowp vec4 tmpvar_20;
            tmpvar_20 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD4.zw);
            realtimeDirTex_18 = tmpvar_20;
            lowp vec4 dirTex_21;
            dirTex_21 = realtimeDirTex_18;
            lowp vec3 y_22;
            y_22 = (dirTex_21.xyz - 0.5);
            lowp float tmpvar_23;
            tmpvar_23 = max (0.0001, dirTex_21.w);
            mediump vec4 emission_24;
            mediump vec3 tmpvar_25;
            highp vec3 tmpvar_26;
            tmpvar_25 = tmpvar_10;
            tmpvar_26 = tmpvar_3;
            mediump vec4 outGBuffer2_27;
            mediump vec4 tmpvar_28;
            tmpvar_28.xyz = tmpvar_25;
            tmpvar_28.w = 1.0;
            mediump vec4 tmpvar_29;
            tmpvar_29.xyz = vec3(0.0, 0.0, 0.0);
            tmpvar_29.w = 0.0;
            highp vec4 tmpvar_30;
            tmpvar_30.w = 1.0;
            tmpvar_30.xyz = ((tmpvar_26 * 0.5) + 0.5);
            outGBuffer2_27 = tmpvar_30;
            lowp vec4 tmpvar_31;
            tmpvar_31.w = 1.0;
            tmpvar_31.xyz = vec3(0.0, 0.0, 0.0);
            emission_24 = tmpvar_31;
            emission_24.xyz = (emission_24.xyz + (tmpvar_11.xyz * (
              (pow (((unity_DynamicLightmap_HDR.x * tmpvar_19.w) * tmpvar_19.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_17, y_22) + 0.5))
             / tmpvar_23)));
            outEmission_1.w = emission_24.w;
            outEmission_1.xyz = exp2(-(emission_24.xyz));
            gl_FragData[0] = tmpvar_28;
            gl_FragData[1] = tmpvar_29;
            gl_FragData[2] = outGBuffer2_27;
            gl_FragData[3] = outEmission_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.xy = vec2(0.0, 0.0);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          #extension GL_EXT_draw_buffers : enable
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            mediump vec4 outEmission_1;
            highp vec3 worldN_2;
            lowp vec3 tmpvar_3;
            lowp vec3 _unity_tbn_2_4;
            lowp vec3 _unity_tbn_1_5;
            lowp vec3 _unity_tbn_0_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_6 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_5 = tmpvar_8;
            highp vec3 tmpvar_9;
            tmpvar_9 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_4 = tmpvar_9;
            lowp vec3 tmpvar_10;
            lowp vec4 tmpvar_11;
            tmpvar_11 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            tmpvar_10 = tmpvar_11.xyz;
            lowp vec3 tmpvar_12;
            tmpvar_12 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_0_6, tmpvar_12);
            worldN_2.x = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_1_5, tmpvar_12);
            worldN_2.y = tmpvar_14;
            lowp float tmpvar_15;
            tmpvar_15 = dot (_unity_tbn_2_4, tmpvar_12);
            worldN_2.z = tmpvar_15;
            highp vec3 tmpvar_16;
            tmpvar_16 = normalize(worldN_2);
            worldN_2 = tmpvar_16;
            tmpvar_3 = tmpvar_16;
            mediump vec3 normalWorld_17;
            normalWorld_17 = tmpvar_3;
            mediump vec4 realtimeDirTex_18;
            lowp vec4 tmpvar_19;
            tmpvar_19 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD4.zw);
            lowp vec4 tmpvar_20;
            tmpvar_20 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD4.zw);
            realtimeDirTex_18 = tmpvar_20;
            lowp vec4 dirTex_21;
            dirTex_21 = realtimeDirTex_18;
            lowp vec3 y_22;
            y_22 = (dirTex_21.xyz - 0.5);
            lowp float tmpvar_23;
            tmpvar_23 = max (0.0001, dirTex_21.w);
            mediump vec4 emission_24;
            mediump vec3 tmpvar_25;
            highp vec3 tmpvar_26;
            tmpvar_25 = tmpvar_10;
            tmpvar_26 = tmpvar_3;
            mediump vec4 outGBuffer2_27;
            mediump vec4 tmpvar_28;
            tmpvar_28.xyz = tmpvar_25;
            tmpvar_28.w = 1.0;
            mediump vec4 tmpvar_29;
            tmpvar_29.xyz = vec3(0.0, 0.0, 0.0);
            tmpvar_29.w = 0.0;
            highp vec4 tmpvar_30;
            tmpvar_30.w = 1.0;
            tmpvar_30.xyz = ((tmpvar_26 * 0.5) + 0.5);
            outGBuffer2_27 = tmpvar_30;
            lowp vec4 tmpvar_31;
            tmpvar_31.w = 1.0;
            tmpvar_31.xyz = vec3(0.0, 0.0, 0.0);
            emission_24 = tmpvar_31;
            emission_24.xyz = (emission_24.xyz + (tmpvar_11.xyz * (
              (pow (((unity_DynamicLightmap_HDR.x * tmpvar_19.w) * tmpvar_19.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_17, y_22) + 0.5))
             / tmpvar_23)));
            outEmission_1.w = emission_24.w;
            outEmission_1.xyz = exp2(-(emission_24.xyz));
            gl_FragData[0] = tmpvar_28;
            gl_FragData[1] = tmpvar_29;
            gl_FragData[2] = outGBuffer2_27;
            gl_FragData[3] = outEmission_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD4.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          layout(location = 1) out mediump vec4 SV_Target1;
          layout(location = 2) out mediump vec4 SV_Target2;
          layout(location = 3) out mediump vec4 SV_Target3;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          mediump vec3 u_xlat16_2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_8;
          mediump float u_xlat16_15;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_15 = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_15 = inversesqrt(u_xlat16_15);
              u_xlat16_1.xyz = vec3(u_xlat16_15) * u_xlat16_3.xyz;
              u_xlat16_4.xyz = u_xlat16_1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target2.xyz = u_xlat16_4.xyz;
              SV_Target2.w = 1.0;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD4.zw);
              u_xlat16_3.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_15 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_3.x = dot(u_xlat16_1.xyz, u_xlat16_3.xyz);
              u_xlat16_3.x = u_xlat16_3.x + 0.5;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD4.zw);
              u_xlat16_8.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_8.xxx;
              u_xlat16_8.xyz = log2(u_xlat16_8.xyz);
              u_xlat16_8.xyz = u_xlat16_8.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_8.xyz = exp2(u_xlat16_8.xyz);
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_8.xyz;
              u_xlat16_1.xyz = u_xlat16_3.xyz / vec3(u_xlat16_15);
              u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              SV_Target3.xyz = exp2((-u_xlat16_3.xyz));
              SV_Target3.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD4.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          layout(location = 1) out mediump vec4 SV_Target1;
          layout(location = 2) out mediump vec4 SV_Target2;
          layout(location = 3) out mediump vec4 SV_Target3;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          mediump vec3 u_xlat16_2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_8;
          mediump float u_xlat16_15;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_15 = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_15 = inversesqrt(u_xlat16_15);
              u_xlat16_1.xyz = vec3(u_xlat16_15) * u_xlat16_3.xyz;
              u_xlat16_4.xyz = u_xlat16_1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target2.xyz = u_xlat16_4.xyz;
              SV_Target2.w = 1.0;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD4.zw);
              u_xlat16_3.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_15 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_3.x = dot(u_xlat16_1.xyz, u_xlat16_3.xyz);
              u_xlat16_3.x = u_xlat16_3.x + 0.5;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD4.zw);
              u_xlat16_8.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_8.xxx;
              u_xlat16_8.xyz = log2(u_xlat16_8.xyz);
              u_xlat16_8.xyz = u_xlat16_8.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_8.xyz = exp2(u_xlat16_8.xyz);
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_8.xyz;
              u_xlat16_1.xyz = u_xlat16_3.xyz / vec3(u_xlat16_15);
              u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              SV_Target3.xyz = exp2((-u_xlat16_3.xyz));
              SV_Target3.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD4.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          layout(location = 1) out mediump vec4 SV_Target1;
          layout(location = 2) out mediump vec4 SV_Target2;
          layout(location = 3) out mediump vec4 SV_Target3;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          mediump vec3 u_xlat16_2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_8;
          mediump float u_xlat16_15;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_15 = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_15 = inversesqrt(u_xlat16_15);
              u_xlat16_1.xyz = vec3(u_xlat16_15) * u_xlat16_3.xyz;
              u_xlat16_4.xyz = u_xlat16_1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target2.xyz = u_xlat16_4.xyz;
              SV_Target2.w = 1.0;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD4.zw);
              u_xlat16_3.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_15 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_3.x = dot(u_xlat16_1.xyz, u_xlat16_3.xyz);
              u_xlat16_3.x = u_xlat16_3.x + 0.5;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD4.zw);
              u_xlat16_8.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_8.xxx;
              u_xlat16_8.xyz = log2(u_xlat16_8.xyz);
              u_xlat16_8.xyz = u_xlat16_8.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_8.xyz = exp2(u_xlat16_8.xyz);
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_8.xyz;
              u_xlat16_1.xyz = u_xlat16_3.xyz / vec3(u_xlat16_15);
              u_xlat16_3.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              SV_Target3.xyz = exp2((-u_xlat16_3.xyz));
              SV_Target3.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          varying mediump vec3 xlv_TEXCOORD5;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            tmpvar_5.zw = vec2(0.0, 0.0);
            tmpvar_5.xy = vec2(0.0, 0.0);
            mediump vec3 normal_17;
            normal_17 = tmpvar_9;
            mediump vec4 tmpvar_18;
            tmpvar_18.w = 1.0;
            tmpvar_18.xyz = normal_17;
            mediump vec3 res_19;
            mediump vec3 x_20;
            x_20.x = dot (unity_SHAr, tmpvar_18);
            x_20.y = dot (unity_SHAg, tmpvar_18);
            x_20.z = dot (unity_SHAb, tmpvar_18);
            mediump vec3 x1_21;
            mediump vec4 tmpvar_22;
            tmpvar_22 = (normal_17.xyzz * normal_17.yzzx);
            x1_21.x = dot (unity_SHBr, tmpvar_22);
            x1_21.y = dot (unity_SHBg, tmpvar_22);
            x1_21.z = dot (unity_SHBb, tmpvar_22);
            res_19 = (x_20 + (x1_21 + (unity_SHC.xyz * 
              ((normal_17.x * normal_17.x) - (normal_17.y * normal_17.y))
            )));
            mediump vec3 tmpvar_23;
            tmpvar_23 = max (((1.055 * 
              pow (max (res_19, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_19 = tmpvar_23;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = tmpvar_5;
            xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_23);
          }
          
          
          #endif
          #ifdef FRAGMENT
          #extension GL_EXT_draw_buffers : enable
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec3 tmpvar_2;
            lowp vec3 _unity_tbn_2_3;
            lowp vec3 _unity_tbn_1_4;
            lowp vec3 _unity_tbn_0_5;
            highp vec3 tmpvar_6;
            tmpvar_6 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_5 = tmpvar_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_4 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_3 = tmpvar_8;
            lowp vec3 tmpvar_9;
            lowp vec4 tmpvar_10;
            tmpvar_10 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            tmpvar_9 = tmpvar_10.xyz;
            lowp vec3 tmpvar_11;
            tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_12;
            tmpvar_12 = dot (_unity_tbn_0_5, tmpvar_11);
            worldN_1.x = tmpvar_12;
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_1_4, tmpvar_11);
            worldN_1.y = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_2_3, tmpvar_11);
            worldN_1.z = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize(worldN_1);
            worldN_1 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            mediump vec4 emission_16;
            mediump vec3 tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_17 = tmpvar_9;
            tmpvar_18 = tmpvar_2;
            mediump vec4 outGBuffer2_19;
            mediump vec4 tmpvar_20;
            tmpvar_20.xyz = tmpvar_17;
            tmpvar_20.w = 1.0;
            mediump vec4 tmpvar_21;
            tmpvar_21.xyz = vec3(0.0, 0.0, 0.0);
            tmpvar_21.w = 0.0;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = ((tmpvar_18 * 0.5) + 0.5);
            outGBuffer2_19 = tmpvar_22;
            lowp vec4 tmpvar_23;
            tmpvar_23.w = 1.0;
            tmpvar_23.xyz = vec3(0.0, 0.0, 0.0);
            emission_16 = tmpvar_23;
            emission_16.xyz = (emission_16.xyz + (tmpvar_10.xyz * xlv_TEXCOORD5));
            gl_FragData[0] = tmpvar_20;
            gl_FragData[1] = tmpvar_21;
            gl_FragData[2] = outGBuffer2_19;
            gl_FragData[3] = emission_16;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          varying mediump vec3 xlv_TEXCOORD5;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            tmpvar_5.zw = vec2(0.0, 0.0);
            tmpvar_5.xy = vec2(0.0, 0.0);
            mediump vec3 normal_17;
            normal_17 = tmpvar_9;
            mediump vec4 tmpvar_18;
            tmpvar_18.w = 1.0;
            tmpvar_18.xyz = normal_17;
            mediump vec3 res_19;
            mediump vec3 x_20;
            x_20.x = dot (unity_SHAr, tmpvar_18);
            x_20.y = dot (unity_SHAg, tmpvar_18);
            x_20.z = dot (unity_SHAb, tmpvar_18);
            mediump vec3 x1_21;
            mediump vec4 tmpvar_22;
            tmpvar_22 = (normal_17.xyzz * normal_17.yzzx);
            x1_21.x = dot (unity_SHBr, tmpvar_22);
            x1_21.y = dot (unity_SHBg, tmpvar_22);
            x1_21.z = dot (unity_SHBb, tmpvar_22);
            res_19 = (x_20 + (x1_21 + (unity_SHC.xyz * 
              ((normal_17.x * normal_17.x) - (normal_17.y * normal_17.y))
            )));
            mediump vec3 tmpvar_23;
            tmpvar_23 = max (((1.055 * 
              pow (max (res_19, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_19 = tmpvar_23;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = tmpvar_5;
            xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_23);
          }
          
          
          #endif
          #ifdef FRAGMENT
          #extension GL_EXT_draw_buffers : enable
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec3 tmpvar_2;
            lowp vec3 _unity_tbn_2_3;
            lowp vec3 _unity_tbn_1_4;
            lowp vec3 _unity_tbn_0_5;
            highp vec3 tmpvar_6;
            tmpvar_6 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_5 = tmpvar_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_4 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_3 = tmpvar_8;
            lowp vec3 tmpvar_9;
            lowp vec4 tmpvar_10;
            tmpvar_10 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            tmpvar_9 = tmpvar_10.xyz;
            lowp vec3 tmpvar_11;
            tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_12;
            tmpvar_12 = dot (_unity_tbn_0_5, tmpvar_11);
            worldN_1.x = tmpvar_12;
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_1_4, tmpvar_11);
            worldN_1.y = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_2_3, tmpvar_11);
            worldN_1.z = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize(worldN_1);
            worldN_1 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            mediump vec4 emission_16;
            mediump vec3 tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_17 = tmpvar_9;
            tmpvar_18 = tmpvar_2;
            mediump vec4 outGBuffer2_19;
            mediump vec4 tmpvar_20;
            tmpvar_20.xyz = tmpvar_17;
            tmpvar_20.w = 1.0;
            mediump vec4 tmpvar_21;
            tmpvar_21.xyz = vec3(0.0, 0.0, 0.0);
            tmpvar_21.w = 0.0;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = ((tmpvar_18 * 0.5) + 0.5);
            outGBuffer2_19 = tmpvar_22;
            lowp vec4 tmpvar_23;
            tmpvar_23.w = 1.0;
            tmpvar_23.xyz = vec3(0.0, 0.0, 0.0);
            emission_16 = tmpvar_23;
            emission_16.xyz = (emission_16.xyz + (tmpvar_10.xyz * xlv_TEXCOORD5));
            gl_FragData[0] = tmpvar_20;
            gl_FragData[1] = tmpvar_21;
            gl_FragData[2] = outGBuffer2_19;
            gl_FragData[3] = emission_16;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          uniform mediump vec4 unity_SHAr;
          uniform mediump vec4 unity_SHAg;
          uniform mediump vec4 unity_SHAb;
          uniform mediump vec4 unity_SHBr;
          uniform mediump vec4 unity_SHBg;
          uniform mediump vec4 unity_SHBb;
          uniform mediump vec4 unity_SHC;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          varying mediump vec3 xlv_TEXCOORD5;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            tmpvar_5.zw = vec2(0.0, 0.0);
            tmpvar_5.xy = vec2(0.0, 0.0);
            mediump vec3 normal_17;
            normal_17 = tmpvar_9;
            mediump vec4 tmpvar_18;
            tmpvar_18.w = 1.0;
            tmpvar_18.xyz = normal_17;
            mediump vec3 res_19;
            mediump vec3 x_20;
            x_20.x = dot (unity_SHAr, tmpvar_18);
            x_20.y = dot (unity_SHAg, tmpvar_18);
            x_20.z = dot (unity_SHAb, tmpvar_18);
            mediump vec3 x1_21;
            mediump vec4 tmpvar_22;
            tmpvar_22 = (normal_17.xyzz * normal_17.yzzx);
            x1_21.x = dot (unity_SHBr, tmpvar_22);
            x1_21.y = dot (unity_SHBg, tmpvar_22);
            x1_21.z = dot (unity_SHBb, tmpvar_22);
            res_19 = (x_20 + (x1_21 + (unity_SHC.xyz * 
              ((normal_17.x * normal_17.x) - (normal_17.y * normal_17.y))
            )));
            mediump vec3 tmpvar_23;
            tmpvar_23 = max (((1.055 * 
              pow (max (res_19, vec3(0.0, 0.0, 0.0)), vec3(0.4166667, 0.4166667, 0.4166667))
            ) - 0.055), vec3(0.0, 0.0, 0.0));
            res_19 = tmpvar_23;
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = tmpvar_5;
            xlv_TEXCOORD5 = max (vec3(0.0, 0.0, 0.0), tmpvar_23);
          }
          
          
          #endif
          #ifdef FRAGMENT
          #extension GL_EXT_draw_buffers : enable
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying mediump vec3 xlv_TEXCOORD5;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec3 tmpvar_2;
            lowp vec3 _unity_tbn_2_3;
            lowp vec3 _unity_tbn_1_4;
            lowp vec3 _unity_tbn_0_5;
            highp vec3 tmpvar_6;
            tmpvar_6 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_5 = tmpvar_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_4 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_3 = tmpvar_8;
            lowp vec3 tmpvar_9;
            lowp vec4 tmpvar_10;
            tmpvar_10 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            tmpvar_9 = tmpvar_10.xyz;
            lowp vec3 tmpvar_11;
            tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_12;
            tmpvar_12 = dot (_unity_tbn_0_5, tmpvar_11);
            worldN_1.x = tmpvar_12;
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_1_4, tmpvar_11);
            worldN_1.y = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_2_3, tmpvar_11);
            worldN_1.z = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize(worldN_1);
            worldN_1 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            mediump vec4 emission_16;
            mediump vec3 tmpvar_17;
            highp vec3 tmpvar_18;
            tmpvar_17 = tmpvar_9;
            tmpvar_18 = tmpvar_2;
            mediump vec4 outGBuffer2_19;
            mediump vec4 tmpvar_20;
            tmpvar_20.xyz = tmpvar_17;
            tmpvar_20.w = 1.0;
            mediump vec4 tmpvar_21;
            tmpvar_21.xyz = vec3(0.0, 0.0, 0.0);
            tmpvar_21.w = 0.0;
            highp vec4 tmpvar_22;
            tmpvar_22.w = 1.0;
            tmpvar_22.xyz = ((tmpvar_18 * 0.5) + 0.5);
            outGBuffer2_19 = tmpvar_22;
            lowp vec4 tmpvar_23;
            tmpvar_23.w = 1.0;
            tmpvar_23.xyz = vec3(0.0, 0.0, 0.0);
            emission_16 = tmpvar_23;
            emission_16.xyz = (emission_16.xyz + (tmpvar_10.xyz * xlv_TEXCOORD5));
            gl_FragData[0] = tmpvar_20;
            gl_FragData[1] = tmpvar_21;
            gl_FragData[2] = outGBuffer2_19;
            gl_FragData[3] = emission_16;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat2 = vec4(u_xlat18) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat1.z;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.z = u_xlat2.z;
              vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzwx * u_xlat2.xywz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          layout(location = 1) out mediump vec4 SV_Target1;
          layout(location = 2) out mediump vec4 SV_Target2;
          layout(location = 3) out mediump vec4 SV_Target3;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz;
              SV_Target3.xyz = u_xlat16_0.xyz * vs_TEXCOORD5.xyz;
              SV_Target0.w = 1.0;
              SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target2.xyz = u_xlat16_0.xyz;
              SV_Target2.w = 1.0;
              SV_Target3.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat2 = vec4(u_xlat18) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat1.z;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.z = u_xlat2.z;
              vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzwx * u_xlat2.xywz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          layout(location = 1) out mediump vec4 SV_Target1;
          layout(location = 2) out mediump vec4 SV_Target2;
          layout(location = 3) out mediump vec4 SV_Target3;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz;
              SV_Target3.xyz = u_xlat16_0.xyz * vs_TEXCOORD5.xyz;
              SV_Target0.w = 1.0;
              SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target2.xyz = u_xlat16_0.xyz;
              SV_Target2.w = 1.0;
              SV_Target3.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	mediump vec4 unity_SHAr;
          uniform 	mediump vec4 unity_SHAg;
          uniform 	mediump vec4 unity_SHAb;
          uniform 	mediump vec4 unity_SHBr;
          uniform 	mediump vec4 unity_SHBg;
          uniform 	mediump vec4 unity_SHBb;
          uniform 	mediump vec4 unity_SHC;
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD4;
          out mediump vec3 vs_TEXCOORD5;
          vec4 u_xlat0;
          mediump vec4 u_xlat16_0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_5;
          float u_xlat18;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat18 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat1.xyz = vec3(u_xlat18) * u_xlat1.xyz;
              u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat18 = inversesqrt(u_xlat18);
              u_xlat2 = vec4(u_xlat18) * u_xlat2.xyzz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.zxy;
              u_xlat3.xyz = u_xlat2.yzx * u_xlat1.yzx + (-u_xlat3.xyz);
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat1.z;
              vs_TEXCOORD1.z = u_xlat2.x;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD2.z = u_xlat2.y;
              vs_TEXCOORD3.z = u_xlat2.z;
              vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat16_4.x = u_xlat2.y * u_xlat2.y;
              u_xlat16_4.x = u_xlat2.x * u_xlat2.x + (-u_xlat16_4.x);
              u_xlat16_0 = u_xlat2.yzwx * u_xlat2.xywz;
              u_xlat16_5.x = dot(unity_SHBr, u_xlat16_0);
              u_xlat16_5.y = dot(unity_SHBg, u_xlat16_0);
              u_xlat16_5.z = dot(unity_SHBb, u_xlat16_0);
              u_xlat16_4.xyz = unity_SHC.xyz * u_xlat16_4.xxx + u_xlat16_5.xyz;
              u_xlat2.w = 1.0;
              u_xlat16_5.x = dot(unity_SHAr, u_xlat2);
              u_xlat16_5.y = dot(unity_SHAg, u_xlat2);
              u_xlat16_5.z = dot(unity_SHAb, u_xlat2);
              u_xlat16_4.xyz = u_xlat16_4.xyz + u_xlat16_5.xyz;
              u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
              u_xlat1.xyz = log2(u_xlat16_4.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
              u_xlat1.xyz = exp2(u_xlat1.xyz);
              u_xlat1.xyz = u_xlat1.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
              u_xlat1.xyz = max(u_xlat1.xyz, vec3(0.0, 0.0, 0.0));
              vs_TEXCOORD5.xyz = u_xlat1.xyz;
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in mediump vec3 vs_TEXCOORD5;
          layout(location = 0) out mediump vec4 SV_Target0;
          layout(location = 1) out mediump vec4 SV_Target1;
          layout(location = 2) out mediump vec4 SV_Target2;
          layout(location = 3) out mediump vec4 SV_Target3;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          mediump vec3 u_xlat16_2;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz;
              SV_Target3.xyz = u_xlat16_0.xyz * vs_TEXCOORD5.xyz;
              SV_Target0.w = 1.0;
              SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat10_0.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_1.xyz = u_xlat10_0.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_2.x = dot(vs_TEXCOORD1.xyz, u_xlat16_1.xyz);
              u_xlat16_2.y = dot(vs_TEXCOORD2.xyz, u_xlat16_1.xyz);
              u_xlat16_2.z = dot(vs_TEXCOORD3.xyz, u_xlat16_1.xyz);
              u_xlat16_0.x = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
              u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
              u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_2.xyz;
              u_xlat16_0.xyz = u_xlat16_0.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target2.xyz = u_xlat16_0.xyz;
              SV_Target2.w = 1.0;
              SV_Target3.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.xy = vec2(0.0, 0.0);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          #extension GL_EXT_draw_buffers : enable
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec3 tmpvar_2;
            lowp vec3 _unity_tbn_2_3;
            lowp vec3 _unity_tbn_1_4;
            lowp vec3 _unity_tbn_0_5;
            highp vec3 tmpvar_6;
            tmpvar_6 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_5 = tmpvar_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_4 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_3 = tmpvar_8;
            lowp vec3 tmpvar_9;
            lowp vec4 tmpvar_10;
            tmpvar_10 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            tmpvar_9 = tmpvar_10.xyz;
            lowp vec3 tmpvar_11;
            tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_12;
            tmpvar_12 = dot (_unity_tbn_0_5, tmpvar_11);
            worldN_1.x = tmpvar_12;
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_1_4, tmpvar_11);
            worldN_1.y = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_2_3, tmpvar_11);
            worldN_1.z = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize(worldN_1);
            worldN_1 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD4.zw);
            mediump vec4 emission_17;
            mediump vec3 tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_18 = tmpvar_9;
            tmpvar_19 = tmpvar_2;
            mediump vec4 outGBuffer2_20;
            mediump vec4 tmpvar_21;
            tmpvar_21.xyz = tmpvar_18;
            tmpvar_21.w = 1.0;
            mediump vec4 tmpvar_22;
            tmpvar_22.xyz = vec3(0.0, 0.0, 0.0);
            tmpvar_22.w = 0.0;
            highp vec4 tmpvar_23;
            tmpvar_23.w = 1.0;
            tmpvar_23.xyz = ((tmpvar_19 * 0.5) + 0.5);
            outGBuffer2_20 = tmpvar_23;
            lowp vec4 tmpvar_24;
            tmpvar_24.w = 1.0;
            tmpvar_24.xyz = vec3(0.0, 0.0, 0.0);
            emission_17 = tmpvar_24;
            emission_17.xyz = (emission_17.xyz + (tmpvar_10.xyz * pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_16.w) * tmpvar_16.xyz)
            , unity_DynamicLightmap_HDR.yyy)));
            gl_FragData[0] = tmpvar_21;
            gl_FragData[1] = tmpvar_22;
            gl_FragData[2] = outGBuffer2_20;
            gl_FragData[3] = emission_17;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.xy = vec2(0.0, 0.0);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          #extension GL_EXT_draw_buffers : enable
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec3 tmpvar_2;
            lowp vec3 _unity_tbn_2_3;
            lowp vec3 _unity_tbn_1_4;
            lowp vec3 _unity_tbn_0_5;
            highp vec3 tmpvar_6;
            tmpvar_6 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_5 = tmpvar_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_4 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_3 = tmpvar_8;
            lowp vec3 tmpvar_9;
            lowp vec4 tmpvar_10;
            tmpvar_10 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            tmpvar_9 = tmpvar_10.xyz;
            lowp vec3 tmpvar_11;
            tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_12;
            tmpvar_12 = dot (_unity_tbn_0_5, tmpvar_11);
            worldN_1.x = tmpvar_12;
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_1_4, tmpvar_11);
            worldN_1.y = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_2_3, tmpvar_11);
            worldN_1.z = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize(worldN_1);
            worldN_1 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD4.zw);
            mediump vec4 emission_17;
            mediump vec3 tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_18 = tmpvar_9;
            tmpvar_19 = tmpvar_2;
            mediump vec4 outGBuffer2_20;
            mediump vec4 tmpvar_21;
            tmpvar_21.xyz = tmpvar_18;
            tmpvar_21.w = 1.0;
            mediump vec4 tmpvar_22;
            tmpvar_22.xyz = vec3(0.0, 0.0, 0.0);
            tmpvar_22.w = 0.0;
            highp vec4 tmpvar_23;
            tmpvar_23.w = 1.0;
            tmpvar_23.xyz = ((tmpvar_19 * 0.5) + 0.5);
            outGBuffer2_20 = tmpvar_23;
            lowp vec4 tmpvar_24;
            tmpvar_24.w = 1.0;
            tmpvar_24.xyz = vec3(0.0, 0.0, 0.0);
            emission_17 = tmpvar_24;
            emission_17.xyz = (emission_17.xyz + (tmpvar_10.xyz * pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_16.w) * tmpvar_16.xyz)
            , unity_DynamicLightmap_HDR.yyy)));
            gl_FragData[0] = tmpvar_21;
            gl_FragData[1] = tmpvar_22;
            gl_FragData[2] = outGBuffer2_20;
            gl_FragData[3] = emission_17;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.xy = vec2(0.0, 0.0);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          #extension GL_EXT_draw_buffers : enable
          uniform sampler2D unity_DynamicLightmap;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec3 tmpvar_2;
            lowp vec3 _unity_tbn_2_3;
            lowp vec3 _unity_tbn_1_4;
            lowp vec3 _unity_tbn_0_5;
            highp vec3 tmpvar_6;
            tmpvar_6 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_5 = tmpvar_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_4 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_3 = tmpvar_8;
            lowp vec3 tmpvar_9;
            lowp vec4 tmpvar_10;
            tmpvar_10 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            tmpvar_9 = tmpvar_10.xyz;
            lowp vec3 tmpvar_11;
            tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_12;
            tmpvar_12 = dot (_unity_tbn_0_5, tmpvar_11);
            worldN_1.x = tmpvar_12;
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_1_4, tmpvar_11);
            worldN_1.y = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_2_3, tmpvar_11);
            worldN_1.z = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize(worldN_1);
            worldN_1 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            lowp vec4 tmpvar_16;
            tmpvar_16 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD4.zw);
            mediump vec4 emission_17;
            mediump vec3 tmpvar_18;
            highp vec3 tmpvar_19;
            tmpvar_18 = tmpvar_9;
            tmpvar_19 = tmpvar_2;
            mediump vec4 outGBuffer2_20;
            mediump vec4 tmpvar_21;
            tmpvar_21.xyz = tmpvar_18;
            tmpvar_21.w = 1.0;
            mediump vec4 tmpvar_22;
            tmpvar_22.xyz = vec3(0.0, 0.0, 0.0);
            tmpvar_22.w = 0.0;
            highp vec4 tmpvar_23;
            tmpvar_23.w = 1.0;
            tmpvar_23.xyz = ((tmpvar_19 * 0.5) + 0.5);
            outGBuffer2_20 = tmpvar_23;
            lowp vec4 tmpvar_24;
            tmpvar_24.w = 1.0;
            tmpvar_24.xyz = vec3(0.0, 0.0, 0.0);
            emission_17 = tmpvar_24;
            emission_17.xyz = (emission_17.xyz + (tmpvar_10.xyz * pow (
              ((unity_DynamicLightmap_HDR.x * tmpvar_16.w) * tmpvar_16.xyz)
            , unity_DynamicLightmap_HDR.yyy)));
            gl_FragData[0] = tmpvar_21;
            gl_FragData[1] = tmpvar_22;
            gl_FragData[2] = outGBuffer2_20;
            gl_FragData[3] = emission_17;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD4.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          layout(location = 1) out mediump vec4 SV_Target1;
          layout(location = 2) out mediump vec4 SV_Target2;
          layout(location = 3) out mediump vec4 SV_Target3;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          mediump float u_xlat16_12;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_12 = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_12 = inversesqrt(u_xlat16_12);
              u_xlat16_1.xyz = vec3(u_xlat16_12) * u_xlat16_3.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target2.xyz = u_xlat16_1.xyz;
              SV_Target2.w = 1.0;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD4.zw);
              u_xlat16_2.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;
              u_xlat16_2.xyz = log2(u_xlat16_2.xyz);
              u_xlat16_2.xyz = u_xlat16_2.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_2.xyz = exp2(u_xlat16_2.xyz);
              SV_Target3.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
              SV_Target3.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD4.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          layout(location = 1) out mediump vec4 SV_Target1;
          layout(location = 2) out mediump vec4 SV_Target2;
          layout(location = 3) out mediump vec4 SV_Target3;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          mediump float u_xlat16_12;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_12 = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_12 = inversesqrt(u_xlat16_12);
              u_xlat16_1.xyz = vec3(u_xlat16_12) * u_xlat16_3.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target2.xyz = u_xlat16_1.xyz;
              SV_Target2.w = 1.0;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD4.zw);
              u_xlat16_2.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;
              u_xlat16_2.xyz = log2(u_xlat16_2.xyz);
              u_xlat16_2.xyz = u_xlat16_2.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_2.xyz = exp2(u_xlat16_2.xyz);
              SV_Target3.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
              SV_Target3.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD4.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          layout(location = 1) out mediump vec4 SV_Target1;
          layout(location = 2) out mediump vec4 SV_Target2;
          layout(location = 3) out mediump vec4 SV_Target3;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          mediump vec3 u_xlat16_2;
          mediump vec3 u_xlat16_3;
          mediump float u_xlat16_12;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_12 = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_12 = inversesqrt(u_xlat16_12);
              u_xlat16_1.xyz = vec3(u_xlat16_12) * u_xlat16_3.xyz;
              u_xlat16_1.xyz = u_xlat16_1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target2.xyz = u_xlat16_1.xyz;
              SV_Target2.w = 1.0;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD4.zw);
              u_xlat16_2.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_2.xyz = u_xlat10_1.xyz * u_xlat16_2.xxx;
              u_xlat16_2.xyz = log2(u_xlat16_2.xyz);
              u_xlat16_2.xyz = u_xlat16_2.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_2.xyz = exp2(u_xlat16_2.xyz);
              SV_Target3.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
              SV_Target3.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.xy = vec2(0.0, 0.0);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          #extension GL_EXT_draw_buffers : enable
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec3 tmpvar_2;
            lowp vec3 _unity_tbn_2_3;
            lowp vec3 _unity_tbn_1_4;
            lowp vec3 _unity_tbn_0_5;
            highp vec3 tmpvar_6;
            tmpvar_6 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_5 = tmpvar_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_4 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_3 = tmpvar_8;
            lowp vec3 tmpvar_9;
            lowp vec4 tmpvar_10;
            tmpvar_10 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            tmpvar_9 = tmpvar_10.xyz;
            lowp vec3 tmpvar_11;
            tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_12;
            tmpvar_12 = dot (_unity_tbn_0_5, tmpvar_11);
            worldN_1.x = tmpvar_12;
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_1_4, tmpvar_11);
            worldN_1.y = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_2_3, tmpvar_11);
            worldN_1.z = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize(worldN_1);
            worldN_1 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            mediump vec3 normalWorld_16;
            normalWorld_16 = tmpvar_2;
            mediump vec4 realtimeDirTex_17;
            lowp vec4 tmpvar_18;
            tmpvar_18 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD4.zw);
            lowp vec4 tmpvar_19;
            tmpvar_19 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD4.zw);
            realtimeDirTex_17 = tmpvar_19;
            lowp vec4 dirTex_20;
            dirTex_20 = realtimeDirTex_17;
            lowp vec3 y_21;
            y_21 = (dirTex_20.xyz - 0.5);
            lowp float tmpvar_22;
            tmpvar_22 = max (0.0001, dirTex_20.w);
            mediump vec4 emission_23;
            mediump vec3 tmpvar_24;
            highp vec3 tmpvar_25;
            tmpvar_24 = tmpvar_9;
            tmpvar_25 = tmpvar_2;
            mediump vec4 outGBuffer2_26;
            mediump vec4 tmpvar_27;
            tmpvar_27.xyz = tmpvar_24;
            tmpvar_27.w = 1.0;
            mediump vec4 tmpvar_28;
            tmpvar_28.xyz = vec3(0.0, 0.0, 0.0);
            tmpvar_28.w = 0.0;
            highp vec4 tmpvar_29;
            tmpvar_29.w = 1.0;
            tmpvar_29.xyz = ((tmpvar_25 * 0.5) + 0.5);
            outGBuffer2_26 = tmpvar_29;
            lowp vec4 tmpvar_30;
            tmpvar_30.w = 1.0;
            tmpvar_30.xyz = vec3(0.0, 0.0, 0.0);
            emission_23 = tmpvar_30;
            emission_23.xyz = (emission_23.xyz + (tmpvar_10.xyz * (
              (pow (((unity_DynamicLightmap_HDR.x * tmpvar_18.w) * tmpvar_18.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_16, y_21) + 0.5))
             / tmpvar_22)));
            gl_FragData[0] = tmpvar_27;
            gl_FragData[1] = tmpvar_28;
            gl_FragData[2] = outGBuffer2_26;
            gl_FragData[3] = emission_23;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.xy = vec2(0.0, 0.0);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          #extension GL_EXT_draw_buffers : enable
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec3 tmpvar_2;
            lowp vec3 _unity_tbn_2_3;
            lowp vec3 _unity_tbn_1_4;
            lowp vec3 _unity_tbn_0_5;
            highp vec3 tmpvar_6;
            tmpvar_6 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_5 = tmpvar_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_4 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_3 = tmpvar_8;
            lowp vec3 tmpvar_9;
            lowp vec4 tmpvar_10;
            tmpvar_10 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            tmpvar_9 = tmpvar_10.xyz;
            lowp vec3 tmpvar_11;
            tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_12;
            tmpvar_12 = dot (_unity_tbn_0_5, tmpvar_11);
            worldN_1.x = tmpvar_12;
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_1_4, tmpvar_11);
            worldN_1.y = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_2_3, tmpvar_11);
            worldN_1.z = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize(worldN_1);
            worldN_1 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            mediump vec3 normalWorld_16;
            normalWorld_16 = tmpvar_2;
            mediump vec4 realtimeDirTex_17;
            lowp vec4 tmpvar_18;
            tmpvar_18 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD4.zw);
            lowp vec4 tmpvar_19;
            tmpvar_19 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD4.zw);
            realtimeDirTex_17 = tmpvar_19;
            lowp vec4 dirTex_20;
            dirTex_20 = realtimeDirTex_17;
            lowp vec3 y_21;
            y_21 = (dirTex_20.xyz - 0.5);
            lowp float tmpvar_22;
            tmpvar_22 = max (0.0001, dirTex_20.w);
            mediump vec4 emission_23;
            mediump vec3 tmpvar_24;
            highp vec3 tmpvar_25;
            tmpvar_24 = tmpvar_9;
            tmpvar_25 = tmpvar_2;
            mediump vec4 outGBuffer2_26;
            mediump vec4 tmpvar_27;
            tmpvar_27.xyz = tmpvar_24;
            tmpvar_27.w = 1.0;
            mediump vec4 tmpvar_28;
            tmpvar_28.xyz = vec3(0.0, 0.0, 0.0);
            tmpvar_28.w = 0.0;
            highp vec4 tmpvar_29;
            tmpvar_29.w = 1.0;
            tmpvar_29.xyz = ((tmpvar_25 * 0.5) + 0.5);
            outGBuffer2_26 = tmpvar_29;
            lowp vec4 tmpvar_30;
            tmpvar_30.w = 1.0;
            tmpvar_30.xyz = vec3(0.0, 0.0, 0.0);
            emission_23 = tmpvar_30;
            emission_23.xyz = (emission_23.xyz + (tmpvar_10.xyz * (
              (pow (((unity_DynamicLightmap_HDR.x * tmpvar_18.w) * tmpvar_18.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_16, y_21) + 0.5))
             / tmpvar_22)));
            gl_FragData[0] = tmpvar_27;
            gl_FragData[1] = tmpvar_28;
            gl_FragData[2] = outGBuffer2_26;
            gl_FragData[3] = emission_23;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform highp vec4 _MainTex_ST;
          uniform highp vec4 _BumpMap_ST;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 tmpvar_4;
            highp vec4 tmpvar_5;
            highp vec4 tmpvar_6;
            tmpvar_6.w = 1.0;
            tmpvar_6.xyz = _glesVertex.xyz;
            tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
            highp vec3 tmpvar_7;
            tmpvar_7 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_8;
            tmpvar_8[0] = unity_WorldToObject[0].xyz;
            tmpvar_8[1] = unity_WorldToObject[1].xyz;
            tmpvar_8[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_9;
            tmpvar_9 = normalize((_glesNormal * tmpvar_8));
            highp mat3 tmpvar_10;
            tmpvar_10[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_10[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_10[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_11;
            tmpvar_11 = normalize((tmpvar_10 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_11;
            highp float tmpvar_12;
            tmpvar_12 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_12;
            highp vec3 tmpvar_13;
            tmpvar_13 = (((tmpvar_9.yzx * worldTangent_3.zxy) - (tmpvar_9.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_13;
            highp vec4 tmpvar_14;
            tmpvar_14.x = worldTangent_3.x;
            tmpvar_14.y = worldBinormal_1.x;
            tmpvar_14.z = tmpvar_9.x;
            tmpvar_14.w = tmpvar_7.x;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.y;
            tmpvar_15.y = worldBinormal_1.y;
            tmpvar_15.z = tmpvar_9.y;
            tmpvar_15.w = tmpvar_7.y;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.z;
            tmpvar_16.y = worldBinormal_1.z;
            tmpvar_16.z = tmpvar_9.z;
            tmpvar_16.w = tmpvar_7.z;
            tmpvar_5.zw = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
            tmpvar_5.xy = vec2(0.0, 0.0);
            gl_Position = (unity_MatrixVP * (unity_ObjectToWorld * tmpvar_6));
            xlv_TEXCOORD0 = tmpvar_4;
            xlv_TEXCOORD1 = tmpvar_14;
            xlv_TEXCOORD2 = tmpvar_15;
            xlv_TEXCOORD3 = tmpvar_16;
            xlv_TEXCOORD4 = tmpvar_5;
          }
          
          
          #endif
          #ifdef FRAGMENT
          #extension GL_EXT_draw_buffers : enable
          uniform sampler2D unity_DynamicLightmap;
          uniform sampler2D unity_DynamicDirectionality;
          uniform mediump vec4 unity_DynamicLightmap_HDR;
          uniform sampler2D _MainTex;
          uniform sampler2D _BumpMap;
          uniform lowp vec4 _Color;
          varying highp vec4 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          varying highp vec4 xlv_TEXCOORD4;
          void main ()
          {
            highp vec3 worldN_1;
            lowp vec3 tmpvar_2;
            lowp vec3 _unity_tbn_2_3;
            lowp vec3 _unity_tbn_1_4;
            lowp vec3 _unity_tbn_0_5;
            highp vec3 tmpvar_6;
            tmpvar_6 = xlv_TEXCOORD1.xyz;
            _unity_tbn_0_5 = tmpvar_6;
            highp vec3 tmpvar_7;
            tmpvar_7 = xlv_TEXCOORD2.xyz;
            _unity_tbn_1_4 = tmpvar_7;
            highp vec3 tmpvar_8;
            tmpvar_8 = xlv_TEXCOORD3.xyz;
            _unity_tbn_2_3 = tmpvar_8;
            lowp vec3 tmpvar_9;
            lowp vec4 tmpvar_10;
            tmpvar_10 = (texture2D (_MainTex, xlv_TEXCOORD0.xy) * _Color);
            tmpvar_9 = tmpvar_10.xyz;
            lowp vec3 tmpvar_11;
            tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.zw).xyz * 2.0) - 1.0);
            lowp float tmpvar_12;
            tmpvar_12 = dot (_unity_tbn_0_5, tmpvar_11);
            worldN_1.x = tmpvar_12;
            lowp float tmpvar_13;
            tmpvar_13 = dot (_unity_tbn_1_4, tmpvar_11);
            worldN_1.y = tmpvar_13;
            lowp float tmpvar_14;
            tmpvar_14 = dot (_unity_tbn_2_3, tmpvar_11);
            worldN_1.z = tmpvar_14;
            highp vec3 tmpvar_15;
            tmpvar_15 = normalize(worldN_1);
            worldN_1 = tmpvar_15;
            tmpvar_2 = tmpvar_15;
            mediump vec3 normalWorld_16;
            normalWorld_16 = tmpvar_2;
            mediump vec4 realtimeDirTex_17;
            lowp vec4 tmpvar_18;
            tmpvar_18 = texture2D (unity_DynamicLightmap, xlv_TEXCOORD4.zw);
            lowp vec4 tmpvar_19;
            tmpvar_19 = texture2D (unity_DynamicDirectionality, xlv_TEXCOORD4.zw);
            realtimeDirTex_17 = tmpvar_19;
            lowp vec4 dirTex_20;
            dirTex_20 = realtimeDirTex_17;
            lowp vec3 y_21;
            y_21 = (dirTex_20.xyz - 0.5);
            lowp float tmpvar_22;
            tmpvar_22 = max (0.0001, dirTex_20.w);
            mediump vec4 emission_23;
            mediump vec3 tmpvar_24;
            highp vec3 tmpvar_25;
            tmpvar_24 = tmpvar_9;
            tmpvar_25 = tmpvar_2;
            mediump vec4 outGBuffer2_26;
            mediump vec4 tmpvar_27;
            tmpvar_27.xyz = tmpvar_24;
            tmpvar_27.w = 1.0;
            mediump vec4 tmpvar_28;
            tmpvar_28.xyz = vec3(0.0, 0.0, 0.0);
            tmpvar_28.w = 0.0;
            highp vec4 tmpvar_29;
            tmpvar_29.w = 1.0;
            tmpvar_29.xyz = ((tmpvar_25 * 0.5) + 0.5);
            outGBuffer2_26 = tmpvar_29;
            lowp vec4 tmpvar_30;
            tmpvar_30.w = 1.0;
            tmpvar_30.xyz = vec3(0.0, 0.0, 0.0);
            emission_23 = tmpvar_30;
            emission_23.xyz = (emission_23.xyz + (tmpvar_10.xyz * (
              (pow (((unity_DynamicLightmap_HDR.x * tmpvar_18.w) * tmpvar_18.xyz), unity_DynamicLightmap_HDR.yyy) * (dot (normalWorld_16, y_21) + 0.5))
             / tmpvar_22)));
            gl_FragData[0] = tmpvar_27;
            gl_FragData[1] = tmpvar_28;
            gl_FragData[2] = outGBuffer2_26;
            gl_FragData[3] = emission_23;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD4.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          layout(location = 1) out mediump vec4 SV_Target1;
          layout(location = 2) out mediump vec4 SV_Target2;
          layout(location = 3) out mediump vec4 SV_Target3;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          mediump vec3 u_xlat16_2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_8;
          mediump float u_xlat16_15;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_15 = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_15 = inversesqrt(u_xlat16_15);
              u_xlat16_1.xyz = vec3(u_xlat16_15) * u_xlat16_3.xyz;
              u_xlat16_4.xyz = u_xlat16_1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target2.xyz = u_xlat16_4.xyz;
              SV_Target2.w = 1.0;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD4.zw);
              u_xlat16_3.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_15 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_3.x = dot(u_xlat16_1.xyz, u_xlat16_3.xyz);
              u_xlat16_3.x = u_xlat16_3.x + 0.5;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD4.zw);
              u_xlat16_8.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_8.xxx;
              u_xlat16_8.xyz = log2(u_xlat16_8.xyz);
              u_xlat16_8.xyz = u_xlat16_8.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_8.xyz = exp2(u_xlat16_8.xyz);
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_8.xyz;
              u_xlat16_1.xyz = u_xlat16_3.xyz / vec3(u_xlat16_15);
              SV_Target3.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              SV_Target3.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD4.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          layout(location = 1) out mediump vec4 SV_Target1;
          layout(location = 2) out mediump vec4 SV_Target2;
          layout(location = 3) out mediump vec4 SV_Target3;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          mediump vec3 u_xlat16_2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_8;
          mediump float u_xlat16_15;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_15 = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_15 = inversesqrt(u_xlat16_15);
              u_xlat16_1.xyz = vec3(u_xlat16_15) * u_xlat16_3.xyz;
              u_xlat16_4.xyz = u_xlat16_1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target2.xyz = u_xlat16_4.xyz;
              SV_Target2.w = 1.0;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD4.zw);
              u_xlat16_3.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_15 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_3.x = dot(u_xlat16_1.xyz, u_xlat16_3.xyz);
              u_xlat16_3.x = u_xlat16_3.x + 0.5;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD4.zw);
              u_xlat16_8.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_8.xxx;
              u_xlat16_8.xyz = log2(u_xlat16_8.xyz);
              u_xlat16_8.xyz = u_xlat16_8.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_8.xyz = exp2(u_xlat16_8.xyz);
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_8.xyz;
              u_xlat16_1.xyz = u_xlat16_3.xyz / vec3(u_xlat16_15);
              SV_Target3.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              SV_Target3.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	vec4 _MainTex_ST;
          uniform 	vec4 _BumpMap_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD2;
          out highp vec4 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          out highp vec4 vs_TEXCOORD4;
          vec4 u_xlat0;
          vec4 u_xlat1;
          vec4 u_xlat2;
          vec3 u_xlat3;
          void main()
          {
              u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
              u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
              u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
              u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
              u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
              u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
              gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              vs_TEXCOORD0.zw = in_TEXCOORD0.xy * _BumpMap_ST.xy + _BumpMap_ST.zw;
              vs_TEXCOORD1.w = u_xlat0.x;
              u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat1.xyz = u_xlat0.xxx * u_xlat1.xyz;
              u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;
              u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;
              u_xlat0.x = dot(u_xlat2.xyz, u_xlat2.xyz);
              u_xlat0.x = inversesqrt(u_xlat0.x);
              u_xlat2.xyz = u_xlat0.xxx * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.xyz * u_xlat2.xyz;
              u_xlat3.xyz = u_xlat1.zxy * u_xlat2.yzx + (-u_xlat3.xyz);
              u_xlat0.x = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat3.xyz = u_xlat0.xxx * u_xlat3.xyz;
              vs_TEXCOORD1.y = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat2.z;
              vs_TEXCOORD1.z = u_xlat1.y;
              vs_TEXCOORD2.x = u_xlat2.x;
              vs_TEXCOORD3.x = u_xlat2.y;
              vs_TEXCOORD2.z = u_xlat1.z;
              vs_TEXCOORD3.z = u_xlat1.x;
              vs_TEXCOORD2.w = u_xlat0.y;
              vs_TEXCOORD3.w = u_xlat0.z;
              vs_TEXCOORD2.y = u_xlat3.y;
              vs_TEXCOORD3.y = u_xlat3.z;
              vs_TEXCOORD4.zw = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              vs_TEXCOORD4.xy = vec2(0.0, 0.0);
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 unity_DynamicLightmap_HDR;
          uniform 	mediump vec4 _Color;
          uniform lowp sampler2D _MainTex;
          uniform lowp sampler2D _BumpMap;
          uniform lowp sampler2D unity_DynamicLightmap;
          uniform lowp sampler2D unity_DynamicDirectionality;
          in highp vec4 vs_TEXCOORD0;
          in highp vec4 vs_TEXCOORD1;
          in highp vec4 vs_TEXCOORD2;
          in highp vec4 vs_TEXCOORD3;
          in highp vec4 vs_TEXCOORD4;
          layout(location = 0) out mediump vec4 SV_Target0;
          layout(location = 1) out mediump vec4 SV_Target1;
          layout(location = 2) out mediump vec4 SV_Target2;
          layout(location = 3) out mediump vec4 SV_Target3;
          mediump vec3 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          mediump vec3 u_xlat16_1;
          lowp vec4 u_xlat10_1;
          mediump vec3 u_xlat16_2;
          lowp vec4 u_xlat10_2;
          mediump vec3 u_xlat16_3;
          mediump vec3 u_xlat16_4;
          mediump vec3 u_xlat16_8;
          mediump float u_xlat16_15;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              SV_Target0.xyz = u_xlat16_0.xyz;
              SV_Target0.w = 1.0;
              SV_Target1 = vec4(0.0, 0.0, 0.0, 0.0);
              u_xlat10_1.xyz = texture(_BumpMap, vs_TEXCOORD0.zw).xyz;
              u_xlat16_2.xyz = u_xlat10_1.xyz * vec3(2.0, 2.0, 2.0) + vec3(-1.0, -1.0, -1.0);
              u_xlat16_3.x = dot(vs_TEXCOORD1.xyz, u_xlat16_2.xyz);
              u_xlat16_3.y = dot(vs_TEXCOORD2.xyz, u_xlat16_2.xyz);
              u_xlat16_3.z = dot(vs_TEXCOORD3.xyz, u_xlat16_2.xyz);
              u_xlat16_15 = dot(u_xlat16_3.xyz, u_xlat16_3.xyz);
              u_xlat16_15 = inversesqrt(u_xlat16_15);
              u_xlat16_1.xyz = vec3(u_xlat16_15) * u_xlat16_3.xyz;
              u_xlat16_4.xyz = u_xlat16_1.xyz * vec3(0.5, 0.5, 0.5) + vec3(0.5, 0.5, 0.5);
              SV_Target2.xyz = u_xlat16_4.xyz;
              SV_Target2.w = 1.0;
              u_xlat10_2 = texture(unity_DynamicDirectionality, vs_TEXCOORD4.zw);
              u_xlat16_3.xyz = u_xlat10_2.xyz + vec3(-0.5, -0.5, -0.5);
              u_xlat16_15 = max(u_xlat10_2.w, 9.99999975e-05);
              u_xlat16_3.x = dot(u_xlat16_1.xyz, u_xlat16_3.xyz);
              u_xlat16_3.x = u_xlat16_3.x + 0.5;
              u_xlat10_1 = texture(unity_DynamicLightmap, vs_TEXCOORD4.zw);
              u_xlat16_8.x = u_xlat10_1.w * unity_DynamicLightmap_HDR.x;
              u_xlat16_8.xyz = u_xlat10_1.xyz * u_xlat16_8.xxx;
              u_xlat16_8.xyz = log2(u_xlat16_8.xyz);
              u_xlat16_8.xyz = u_xlat16_8.xyz * unity_DynamicLightmap_HDR.yyy;
              u_xlat16_8.xyz = exp2(u_xlat16_8.xyz);
              u_xlat16_3.xyz = u_xlat16_3.xxx * u_xlat16_8.xyz;
              u_xlat16_1.xyz = u_xlat16_3.xyz / vec3(u_xlat16_15);
              SV_Target3.xyz = u_xlat16_0.xyz * u_xlat16_1.xyz;
              SV_Target3.w = 1.0;
              return;
          }
          
          #endif
          
          "
        }
      }
      Program "fp"
      {
        SubProgram "gles hw_tier00"
        {
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
           Keywords { "DIRLIGHTMAP_COMBINED" "DYNAMICLIGHTMAP_ON" "UNITY_HDR_ON" }
          
          "!!!!GLES3
          
          
          "
        }
      }
      
    } // end phase
    Pass // ind: 6, name: Meta
    {
      Name "Meta"
      Tags
      { 
        "LIGHTMODE" = "META"
        "RenderType" = "Opaque"
      }
      LOD 300
      Cull Off
      GpuProgramID 379989
      // m_ProgramMask = 6
      !!! *******************************************************************************************
      !!! Allow restore shader as UnityLab format - only available for DevX GameRecovery license type
      !!! *******************************************************************************************
      Program "vp"
      {
        SubProgram "gles hw_tier00"
        {
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord1;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_LightmapST;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform bvec4 unity_MetaVertexControl;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 vertex_4;
            vertex_4 = _glesVertex;
            if (unity_MetaVertexControl.x) {
              vertex_4.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
              highp float tmpvar_5;
              if ((_glesVertex.z > 0.0)) {
                tmpvar_5 = 0.0001;
              } else {
                tmpvar_5 = 0.0;
              };
              vertex_4.z = tmpvar_5;
            };
            if (unity_MetaVertexControl.y) {
              vertex_4.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
              highp float tmpvar_6;
              if ((vertex_4.z > 0.0)) {
                tmpvar_6 = 0.0001;
              } else {
                tmpvar_6 = 0.0;
              };
              vertex_4.z = tmpvar_6;
            };
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = vertex_4.xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            gl_Position = (unity_MatrixVP * tmpvar_7);
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform bvec4 unity_MetaFragmentControl;
          uniform highp float unity_OneOverOutputBoost;
          uniform highp float unity_MaxOutputValue;
          uniform highp float unity_UseLinearSpace;
          varying highp vec2 xlv_TEXCOORD0;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec3 tmpvar_2;
            lowp vec3 tmpvar_3;
            tmpvar_3 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color).xyz;
            tmpvar_2 = tmpvar_3;
            mediump vec4 res_4;
            res_4 = vec4(0.0, 0.0, 0.0, 0.0);
            if (unity_MetaFragmentControl.x) {
              mediump vec4 tmpvar_5;
              tmpvar_5.w = 1.0;
              tmpvar_5.xyz = tmpvar_2;
              res_4.w = tmpvar_5.w;
              highp vec3 tmpvar_6;
              tmpvar_6 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
              res_4.xyz = tmpvar_6;
            };
            if (unity_MetaFragmentControl.y) {
              mediump vec3 emission_7;
              if (bool(unity_UseLinearSpace)) {
                emission_7 = vec3(0.0, 0.0, 0.0);
              } else {
                emission_7 = vec3(0.0, 0.0, 0.0);
              };
              mediump vec4 tmpvar_8;
              tmpvar_8.w = 1.0;
              tmpvar_8.xyz = emission_7;
              res_4 = tmpvar_8;
            };
            tmpvar_1 = res_4;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier01"
        {
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord1;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_LightmapST;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform bvec4 unity_MetaVertexControl;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 vertex_4;
            vertex_4 = _glesVertex;
            if (unity_MetaVertexControl.x) {
              vertex_4.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
              highp float tmpvar_5;
              if ((_glesVertex.z > 0.0)) {
                tmpvar_5 = 0.0001;
              } else {
                tmpvar_5 = 0.0;
              };
              vertex_4.z = tmpvar_5;
            };
            if (unity_MetaVertexControl.y) {
              vertex_4.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
              highp float tmpvar_6;
              if ((vertex_4.z > 0.0)) {
                tmpvar_6 = 0.0001;
              } else {
                tmpvar_6 = 0.0;
              };
              vertex_4.z = tmpvar_6;
            };
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = vertex_4.xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            gl_Position = (unity_MatrixVP * tmpvar_7);
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform bvec4 unity_MetaFragmentControl;
          uniform highp float unity_OneOverOutputBoost;
          uniform highp float unity_MaxOutputValue;
          uniform highp float unity_UseLinearSpace;
          varying highp vec2 xlv_TEXCOORD0;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec3 tmpvar_2;
            lowp vec3 tmpvar_3;
            tmpvar_3 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color).xyz;
            tmpvar_2 = tmpvar_3;
            mediump vec4 res_4;
            res_4 = vec4(0.0, 0.0, 0.0, 0.0);
            if (unity_MetaFragmentControl.x) {
              mediump vec4 tmpvar_5;
              tmpvar_5.w = 1.0;
              tmpvar_5.xyz = tmpvar_2;
              res_4.w = tmpvar_5.w;
              highp vec3 tmpvar_6;
              tmpvar_6 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
              res_4.xyz = tmpvar_6;
            };
            if (unity_MetaFragmentControl.y) {
              mediump vec3 emission_7;
              if (bool(unity_UseLinearSpace)) {
                emission_7 = vec3(0.0, 0.0, 0.0);
              } else {
                emission_7 = vec3(0.0, 0.0, 0.0);
              };
              mediump vec4 tmpvar_8;
              tmpvar_8.w = 1.0;
              tmpvar_8.xyz = emission_7;
              res_4 = tmpvar_8;
            };
            tmpvar_1 = res_4;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles hw_tier02"
        {
          
          "!!!!GLES
          #version 100
          
          #ifdef VERTEX
          attribute vec4 _glesTANGENT;
          attribute vec4 _glesVertex;
          attribute vec3 _glesNormal;
          attribute vec4 _glesMultiTexCoord0;
          attribute vec4 _glesMultiTexCoord1;
          attribute vec4 _glesMultiTexCoord2;
          uniform highp mat4 unity_ObjectToWorld;
          uniform highp mat4 unity_WorldToObject;
          uniform highp vec4 unity_WorldTransformParams;
          uniform highp mat4 unity_MatrixVP;
          uniform highp vec4 unity_LightmapST;
          uniform highp vec4 unity_DynamicLightmapST;
          uniform bvec4 unity_MetaVertexControl;
          uniform highp vec4 _MainTex_ST;
          varying highp vec2 xlv_TEXCOORD0;
          varying highp vec4 xlv_TEXCOORD1;
          varying highp vec4 xlv_TEXCOORD2;
          varying highp vec4 xlv_TEXCOORD3;
          void main ()
          {
            lowp vec3 worldBinormal_1;
            lowp float tangentSign_2;
            lowp vec3 worldTangent_3;
            highp vec4 vertex_4;
            vertex_4 = _glesVertex;
            if (unity_MetaVertexControl.x) {
              vertex_4.xy = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
              highp float tmpvar_5;
              if ((_glesVertex.z > 0.0)) {
                tmpvar_5 = 0.0001;
              } else {
                tmpvar_5 = 0.0;
              };
              vertex_4.z = tmpvar_5;
            };
            if (unity_MetaVertexControl.y) {
              vertex_4.xy = ((_glesMultiTexCoord2.xy * unity_DynamicLightmapST.xy) + unity_DynamicLightmapST.zw);
              highp float tmpvar_6;
              if ((vertex_4.z > 0.0)) {
                tmpvar_6 = 0.0001;
              } else {
                tmpvar_6 = 0.0;
              };
              vertex_4.z = tmpvar_6;
            };
            highp vec4 tmpvar_7;
            tmpvar_7.w = 1.0;
            tmpvar_7.xyz = vertex_4.xyz;
            highp vec3 tmpvar_8;
            tmpvar_8 = (unity_ObjectToWorld * _glesVertex).xyz;
            highp mat3 tmpvar_9;
            tmpvar_9[0] = unity_WorldToObject[0].xyz;
            tmpvar_9[1] = unity_WorldToObject[1].xyz;
            tmpvar_9[2] = unity_WorldToObject[2].xyz;
            highp vec3 tmpvar_10;
            tmpvar_10 = normalize((_glesNormal * tmpvar_9));
            highp mat3 tmpvar_11;
            tmpvar_11[0] = unity_ObjectToWorld[0].xyz;
            tmpvar_11[1] = unity_ObjectToWorld[1].xyz;
            tmpvar_11[2] = unity_ObjectToWorld[2].xyz;
            highp vec3 tmpvar_12;
            tmpvar_12 = normalize((tmpvar_11 * _glesTANGENT.xyz));
            worldTangent_3 = tmpvar_12;
            highp float tmpvar_13;
            tmpvar_13 = (_glesTANGENT.w * unity_WorldTransformParams.w);
            tangentSign_2 = tmpvar_13;
            highp vec3 tmpvar_14;
            tmpvar_14 = (((tmpvar_10.yzx * worldTangent_3.zxy) - (tmpvar_10.zxy * worldTangent_3.yzx)) * tangentSign_2);
            worldBinormal_1 = tmpvar_14;
            highp vec4 tmpvar_15;
            tmpvar_15.x = worldTangent_3.x;
            tmpvar_15.y = worldBinormal_1.x;
            tmpvar_15.z = tmpvar_10.x;
            tmpvar_15.w = tmpvar_8.x;
            highp vec4 tmpvar_16;
            tmpvar_16.x = worldTangent_3.y;
            tmpvar_16.y = worldBinormal_1.y;
            tmpvar_16.z = tmpvar_10.y;
            tmpvar_16.w = tmpvar_8.y;
            highp vec4 tmpvar_17;
            tmpvar_17.x = worldTangent_3.z;
            tmpvar_17.y = worldBinormal_1.z;
            tmpvar_17.z = tmpvar_10.z;
            tmpvar_17.w = tmpvar_8.z;
            gl_Position = (unity_MatrixVP * tmpvar_7);
            xlv_TEXCOORD0 = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
            xlv_TEXCOORD1 = tmpvar_15;
            xlv_TEXCOORD2 = tmpvar_16;
            xlv_TEXCOORD3 = tmpvar_17;
          }
          
          
          #endif
          #ifdef FRAGMENT
          uniform sampler2D _MainTex;
          uniform lowp vec4 _Color;
          uniform bvec4 unity_MetaFragmentControl;
          uniform highp float unity_OneOverOutputBoost;
          uniform highp float unity_MaxOutputValue;
          uniform highp float unity_UseLinearSpace;
          varying highp vec2 xlv_TEXCOORD0;
          void main ()
          {
            lowp vec4 tmpvar_1;
            mediump vec3 tmpvar_2;
            lowp vec3 tmpvar_3;
            tmpvar_3 = (texture2D (_MainTex, xlv_TEXCOORD0) * _Color).xyz;
            tmpvar_2 = tmpvar_3;
            mediump vec4 res_4;
            res_4 = vec4(0.0, 0.0, 0.0, 0.0);
            if (unity_MetaFragmentControl.x) {
              mediump vec4 tmpvar_5;
              tmpvar_5.w = 1.0;
              tmpvar_5.xyz = tmpvar_2;
              res_4.w = tmpvar_5.w;
              highp vec3 tmpvar_6;
              tmpvar_6 = clamp (pow (tmpvar_2, vec3(clamp (unity_OneOverOutputBoost, 0.0, 1.0))), vec3(0.0, 0.0, 0.0), vec3(unity_MaxOutputValue));
              res_4.xyz = tmpvar_6;
            };
            if (unity_MetaFragmentControl.y) {
              mediump vec3 emission_7;
              if (bool(unity_UseLinearSpace)) {
                emission_7 = vec3(0.0, 0.0, 0.0);
              } else {
                emission_7 = vec3(0.0, 0.0, 0.0);
              };
              mediump vec4 tmpvar_8;
              tmpvar_8.w = 1.0;
              tmpvar_8.xyz = emission_7;
              res_4 = tmpvar_8;
            };
            tmpvar_1 = res_4;
            gl_FragData[0] = tmpvar_1;
          }
          
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_LightmapST;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	bvec4 unity_MetaVertexControl;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD1;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          vec4 u_xlat0;
          bool u_xlatb0;
          vec4 u_xlat1;
          vec3 u_xlat2;
          vec3 u_xlat3;
          float u_xlat12;
          bool u_xlatb12;
          void main()
          {
          #ifdef UNITY_ADRENO_ES3
              u_xlatb0 = !!(0.0<in_POSITION0.z);
          #else
              u_xlatb0 = 0.0<in_POSITION0.z;
          #endif
              u_xlat0.z = u_xlatb0 ? 9.99999975e-05 : float(0.0);
              u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
              u_xlat0.xyz = (unity_MetaVertexControl.x) ? u_xlat0.xyz : in_POSITION0.xyz;
          #ifdef UNITY_ADRENO_ES3
              u_xlatb12 = !!(0.0<u_xlat0.z);
          #else
              u_xlatb12 = 0.0<u_xlat0.z;
          #endif
              u_xlat1.z = u_xlatb12 ? 9.99999975e-05 : float(0.0);
              u_xlat1.xy = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              u_xlat0.xyz = (unity_MetaVertexControl.y) ? u_xlat1.xyz : u_xlat0.xyz;
              u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
              gl_Position = u_xlat0 + hlslcc_mtx4x4unity_MatrixVP[3];
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
              u_xlat2.xyz = u_xlat0.xyz * u_xlat1.xyz;
              u_xlat2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat2.xyz);
              u_xlat12 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.xyz = vec3(u_xlat12) * u_xlat2.xyz;
              vs_TEXCOORD1.y = u_xlat2.x;
              u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;
              u_xlat3.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
              u_xlat3.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
              u_xlat3.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
              vs_TEXCOORD1.w = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat1.z;
              vs_TEXCOORD1.z = u_xlat0.y;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.z = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat0.x;
              vs_TEXCOORD2.w = u_xlat3.y;
              vs_TEXCOORD3.w = u_xlat3.z;
              vs_TEXCOORD2.y = u_xlat2.y;
              vs_TEXCOORD3.y = u_xlat2.z;
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _Color;
          uniform 	bvec4 unity_MetaFragmentControl;
          uniform 	float unity_OneOverOutputBoost;
          uniform 	float unity_MaxOutputValue;
          uniform lowp sampler2D _MainTex;
          in highp vec2 vs_TEXCOORD0;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec4 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          float u_xlat3;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_0.xyz = log2(u_xlat16_0.xyz);
              u_xlat3 = unity_OneOverOutputBoost;
          #ifdef UNITY_ADRENO_ES3
              u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
          #else
              u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
          #endif
              u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat3);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = min(u_xlat0.xyz, vec3(vec3(unity_MaxOutputValue, unity_MaxOutputValue, unity_MaxOutputValue)));
              u_xlat16_0.xyz = (unity_MetaFragmentControl.x) ? u_xlat0.xyz : vec3(0.0, 0.0, 0.0);
              u_xlat16_0.w = (unity_MetaFragmentControl.x) ? 1.0 : 0.0;
              SV_Target0 = (unity_MetaFragmentControl.y) ? vec4(0.0, 0.0, 0.0, 1.0) : u_xlat16_0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_LightmapST;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	bvec4 unity_MetaVertexControl;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD1;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          vec4 u_xlat0;
          bool u_xlatb0;
          vec4 u_xlat1;
          vec3 u_xlat2;
          vec3 u_xlat3;
          float u_xlat12;
          bool u_xlatb12;
          void main()
          {
          #ifdef UNITY_ADRENO_ES3
              u_xlatb0 = !!(0.0<in_POSITION0.z);
          #else
              u_xlatb0 = 0.0<in_POSITION0.z;
          #endif
              u_xlat0.z = u_xlatb0 ? 9.99999975e-05 : float(0.0);
              u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
              u_xlat0.xyz = (unity_MetaVertexControl.x) ? u_xlat0.xyz : in_POSITION0.xyz;
          #ifdef UNITY_ADRENO_ES3
              u_xlatb12 = !!(0.0<u_xlat0.z);
          #else
              u_xlatb12 = 0.0<u_xlat0.z;
          #endif
              u_xlat1.z = u_xlatb12 ? 9.99999975e-05 : float(0.0);
              u_xlat1.xy = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              u_xlat0.xyz = (unity_MetaVertexControl.y) ? u_xlat1.xyz : u_xlat0.xyz;
              u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
              gl_Position = u_xlat0 + hlslcc_mtx4x4unity_MatrixVP[3];
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
              u_xlat2.xyz = u_xlat0.xyz * u_xlat1.xyz;
              u_xlat2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat2.xyz);
              u_xlat12 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.xyz = vec3(u_xlat12) * u_xlat2.xyz;
              vs_TEXCOORD1.y = u_xlat2.x;
              u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;
              u_xlat3.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
              u_xlat3.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
              u_xlat3.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
              vs_TEXCOORD1.w = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat1.z;
              vs_TEXCOORD1.z = u_xlat0.y;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.z = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat0.x;
              vs_TEXCOORD2.w = u_xlat3.y;
              vs_TEXCOORD3.w = u_xlat3.z;
              vs_TEXCOORD2.y = u_xlat2.y;
              vs_TEXCOORD3.y = u_xlat2.z;
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _Color;
          uniform 	bvec4 unity_MetaFragmentControl;
          uniform 	float unity_OneOverOutputBoost;
          uniform 	float unity_MaxOutputValue;
          uniform lowp sampler2D _MainTex;
          in highp vec2 vs_TEXCOORD0;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec4 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          float u_xlat3;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_0.xyz = log2(u_xlat16_0.xyz);
              u_xlat3 = unity_OneOverOutputBoost;
          #ifdef UNITY_ADRENO_ES3
              u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
          #else
              u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
          #endif
              u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat3);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = min(u_xlat0.xyz, vec3(vec3(unity_MaxOutputValue, unity_MaxOutputValue, unity_MaxOutputValue)));
              u_xlat16_0.xyz = (unity_MetaFragmentControl.x) ? u_xlat0.xyz : vec3(0.0, 0.0, 0.0);
              u_xlat16_0.w = (unity_MetaFragmentControl.x) ? 1.0 : 0.0;
              SV_Target0 = (unity_MetaFragmentControl.y) ? vec4(0.0, 0.0, 0.0, 1.0) : u_xlat16_0;
              return;
          }
          
          #endif
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
          
          "!!!!GLES3
          #ifdef VERTEX
          #version 300 es
          
          uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
          uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
          uniform 	vec4 unity_WorldTransformParams;
          uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
          uniform 	vec4 unity_LightmapST;
          uniform 	vec4 unity_DynamicLightmapST;
          uniform 	bvec4 unity_MetaVertexControl;
          uniform 	vec4 _MainTex_ST;
          in highp vec4 in_POSITION0;
          in highp vec4 in_TANGENT0;
          in highp vec3 in_NORMAL0;
          in highp vec4 in_TEXCOORD0;
          in highp vec4 in_TEXCOORD1;
          in highp vec4 in_TEXCOORD2;
          out highp vec2 vs_TEXCOORD0;
          out highp vec4 vs_TEXCOORD1;
          out highp vec4 vs_TEXCOORD2;
          out highp vec4 vs_TEXCOORD3;
          vec4 u_xlat0;
          bool u_xlatb0;
          vec4 u_xlat1;
          vec3 u_xlat2;
          vec3 u_xlat3;
          float u_xlat12;
          bool u_xlatb12;
          void main()
          {
          #ifdef UNITY_ADRENO_ES3
              u_xlatb0 = !!(0.0<in_POSITION0.z);
          #else
              u_xlatb0 = 0.0<in_POSITION0.z;
          #endif
              u_xlat0.z = u_xlatb0 ? 9.99999975e-05 : float(0.0);
              u_xlat0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;
              u_xlat0.xyz = (unity_MetaVertexControl.x) ? u_xlat0.xyz : in_POSITION0.xyz;
          #ifdef UNITY_ADRENO_ES3
              u_xlatb12 = !!(0.0<u_xlat0.z);
          #else
              u_xlatb12 = 0.0<u_xlat0.z;
          #endif
              u_xlat1.z = u_xlatb12 ? 9.99999975e-05 : float(0.0);
              u_xlat1.xy = in_TEXCOORD2.xy * unity_DynamicLightmapST.xy + unity_DynamicLightmapST.zw;
              u_xlat0.xyz = (unity_MetaVertexControl.y) ? u_xlat1.xyz : u_xlat0.xyz;
              u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
              u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;
              u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;
              gl_Position = u_xlat0 + hlslcc_mtx4x4unity_MatrixVP[3];
              vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
              u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
              u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
              u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
              u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
              u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;
              u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;
              u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
              u_xlat12 = inversesqrt(u_xlat12);
              u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;
              u_xlat2.xyz = u_xlat0.xyz * u_xlat1.xyz;
              u_xlat2.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat2.xyz);
              u_xlat12 = in_TANGENT0.w * unity_WorldTransformParams.w;
              u_xlat2.xyz = vec3(u_xlat12) * u_xlat2.xyz;
              vs_TEXCOORD1.y = u_xlat2.x;
              u_xlat3.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;
              u_xlat3.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat3.xyz;
              u_xlat3.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat3.xyz;
              u_xlat3.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat3.xyz;
              vs_TEXCOORD1.w = u_xlat3.x;
              vs_TEXCOORD1.x = u_xlat1.z;
              vs_TEXCOORD1.z = u_xlat0.y;
              vs_TEXCOORD2.x = u_xlat1.x;
              vs_TEXCOORD3.x = u_xlat1.y;
              vs_TEXCOORD2.z = u_xlat0.z;
              vs_TEXCOORD3.z = u_xlat0.x;
              vs_TEXCOORD2.w = u_xlat3.y;
              vs_TEXCOORD3.w = u_xlat3.z;
              vs_TEXCOORD2.y = u_xlat2.y;
              vs_TEXCOORD3.y = u_xlat2.z;
              return;
          }
          
          #endif
          #ifdef FRAGMENT
          #version 300 es
          
          precision highp int;
          uniform 	mediump vec4 _Color;
          uniform 	bvec4 unity_MetaFragmentControl;
          uniform 	float unity_OneOverOutputBoost;
          uniform 	float unity_MaxOutputValue;
          uniform lowp sampler2D _MainTex;
          in highp vec2 vs_TEXCOORD0;
          layout(location = 0) out mediump vec4 SV_Target0;
          vec3 u_xlat0;
          mediump vec4 u_xlat16_0;
          lowp vec3 u_xlat10_0;
          float u_xlat3;
          void main()
          {
              u_xlat10_0.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
              u_xlat16_0.xyz = u_xlat10_0.xyz * _Color.xyz;
              u_xlat16_0.xyz = log2(u_xlat16_0.xyz);
              u_xlat3 = unity_OneOverOutputBoost;
          #ifdef UNITY_ADRENO_ES3
              u_xlat3 = min(max(u_xlat3, 0.0), 1.0);
          #else
              u_xlat3 = clamp(u_xlat3, 0.0, 1.0);
          #endif
              u_xlat0.xyz = u_xlat16_0.xyz * vec3(u_xlat3);
              u_xlat0.xyz = exp2(u_xlat0.xyz);
              u_xlat0.xyz = min(u_xlat0.xyz, vec3(vec3(unity_MaxOutputValue, unity_MaxOutputValue, unity_MaxOutputValue)));
              u_xlat16_0.xyz = (unity_MetaFragmentControl.x) ? u_xlat0.xyz : vec3(0.0, 0.0, 0.0);
              u_xlat16_0.w = (unity_MetaFragmentControl.x) ? 1.0 : 0.0;
              SV_Target0 = (unity_MetaFragmentControl.y) ? vec4(0.0, 0.0, 0.0, 1.0) : u_xlat16_0;
              return;
          }
          
          #endif
          
          "
        }
      }
      Program "fp"
      {
        SubProgram "gles hw_tier00"
        {
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier01"
        {
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles hw_tier02"
        {
          
          "!!!!GLES
          
          
          "
        }
        SubProgram "gles3 hw_tier00"
        {
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier01"
        {
          
          "!!!!GLES3
          
          
          "
        }
        SubProgram "gles3 hw_tier02"
        {
          
          "!!!!GLES3
          
          
          "
        }
      }
      
    } // end phase
  }
  FallBack "Legacy Shaders/Diffuse"
}
